%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Wed Sep 13 18:14:20 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5t5a_a)
} def

/sequence { (\
CAGGGCAAGGCCCAGUCCCGUGCAAGCCGGGACCGCCCCGGGGCGCGGCGCUCAUUCCUGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.036564083 ubox
1 60 0.161315006 ubox
2 16 0.003455253 ubox
2 52 0.005154709 ubox
2 55 0.006298083 ubox
2 56 0.007353570 ubox
2 59 0.162100723 ubox
3 12 0.016915238 ubox
3 13 0.968433482 ubox
3 18 0.004974438 ubox
3 51 0.004675403 ubox
3 53 0.011199758 ubox
3 58 0.153650542 ubox
3 59 0.016777770 ubox
4 11 0.016878260 ubox
4 12 0.969903014 ubox
4 13 0.009541360 ubox
4 17 0.005582645 ubox
4 52 0.011036788 ubox
4 57 0.150491668 ubox
4 58 0.019003237 ubox
4 61 0.008713905 ubox
5 11 0.970328245 ubox
5 12 0.009562886 ubox
5 16 0.006124795 ubox
5 49 0.005072295 ubox
5 51 0.011818178 ubox
5 53 0.004639602 ubox
5 55 0.005855786 ubox
5 56 0.133063185 ubox
5 57 0.019857017 ubox
5 61 0.179363643 ubox
6 10 0.963282910 ubox
6 15 0.006265718 ubox
6 40 0.006032127 ubox
6 48 0.005066434 ubox
6 50 0.011818063 ubox
6 60 0.181509494 ubox
7 52 0.007772869 ubox
7 55 0.036452380 ubox
7 56 0.025961838 ubox
7 59 0.132689931 ubox
8 52 0.030389937 ubox
8 55 0.034783612 ubox
8 56 0.017427154 ubox
8 59 0.132411752 ubox
9 13 0.004405037 ubox
9 17 0.010679748 ubox
9 37 0.016845713 ubox
9 51 0.031420953 ubox
9 52 0.097967049 ubox
9 53 0.050848009 ubox
9 55 0.028925236 ubox
9 56 0.009507321 ubox
9 57 0.046741235 ubox
9 58 0.181534511 ubox
10 16 0.010810539 ubox
10 36 0.016936528 ubox
10 44 0.005354638 ubox
10 49 0.034446565 ubox
10 51 0.102360616 ubox
10 52 0.025662317 ubox
10 53 0.059215468 ubox
10 55 0.014497035 ubox
10 56 0.043868818 ubox
10 57 0.181285593 ubox
11 15 0.010788918 ubox
11 35 0.016920489 ubox
11 43 0.005352945 ubox
11 48 0.034262176 ubox
11 50 0.101927048 ubox
12 42 0.005347917 ubox
12 47 0.033938734 ubox
12 48 0.054963543 ubox
12 50 0.007342585 ubox
13 41 0.005311119 ubox
13 45 0.011868236 ubox
13 47 0.054594971 ubox
13 48 0.009027888 ubox
13 50 0.003497562 ubox
14 52 0.916813875 ubox
14 55 0.010063133 ubox
14 56 0.012181528 ubox
14 59 0.006732687 ubox
15 33 0.057331848 ubox
15 44 0.035607632 ubox
15 46 0.003705982 ubox
15 49 0.052986164 ubox
15 51 0.978623801 ubox
15 52 0.016177686 ubox
15 53 0.040182579 ubox
15 55 0.012678045 ubox
15 58 0.006106484 ubox
15 61 0.004938860 ubox
16 32 0.057663012 ubox
16 43 0.035568039 ubox
16 45 0.003454370 ubox
16 48 0.019604640 ubox
16 50 0.954399664 ubox
16 54 0.012635895 ubox
16 60 0.004855714 ubox
17 31 0.057731775 ubox
17 42 0.035583179 ubox
17 47 0.011485544 ubox
17 48 0.034746734 ubox
17 50 0.173727724 ubox
18 30 0.057732354 ubox
18 41 0.035517641 ubox
18 47 0.024686160 ubox
18 48 0.995604840 ubox
19 29 0.057728172 ubox
19 40 0.035413735 ubox
19 47 0.997162578 ubox
20 27 0.017873431 ubox
20 28 0.054946416 ubox
20 39 0.034451967 ubox
20 46 0.997646752 ubox
21 26 0.024114635 ubox
21 45 0.997274918 ubox
22 27 0.037129745 ubox
22 36 0.009342819 ubox
22 37 0.004718623 ubox
22 38 0.010277076 ubox
22 44 0.997591934 ubox
23 35 0.009490063 ubox
23 42 0.022065465 ubox
23 43 0.995042223 ubox
23 45 0.003234191 ubox
26 36 0.010711750 ubox
27 35 0.009597992 ubox
27 40 0.014050357 ubox
27 41 0.994842881 ubox
27 42 0.036825852 ubox
28 35 0.005618738 ubox
28 40 0.997057400 ubox
28 41 0.029589466 ubox
29 33 0.003405997 ubox
29 34 0.007306896 ubox
29 37 0.005039284 ubox
29 38 0.055141628 ubox
29 39 0.996466533 ubox
30 36 0.005130369 ubox
30 37 0.069460565 ubox
30 38 0.995582689 ubox
30 39 0.019107846 ubox
31 36 0.080894139 ubox
31 37 0.993260742 ubox
31 38 0.019480297 ubox
33 48 0.003957703 ubox
34 40 0.003690754 ubox
34 45 0.049726151 ubox
34 47 0.006475970 ubox
34 50 0.009031109 ubox
35 39 0.003486249 ubox
35 44 0.052119246 ubox
35 46 0.008125484 ubox
35 49 0.010159513 ubox
35 51 0.009174544 ubox
36 43 0.052094478 ubox
36 45 0.008125833 ubox
36 48 0.010141577 ubox
36 50 0.009169565 ubox
37 42 0.051895920 ubox
37 43 0.007956709 ubox
37 47 0.010109935 ubox
38 42 0.007997895 ubox
38 45 0.003166552 ubox
38 48 0.009506191 ubox
39 45 0.009429898 ubox
39 47 0.009540818 ubox
40 44 0.008841577 ubox
40 46 0.009564919 ubox
41 53 0.017509831 ubox
42 52 0.017692490 ubox
43 51 0.017819241 ubox
44 50 0.017837373 ubox
45 49 0.016687278 ubox
45 61 0.005278405 ubox
46 60 0.005764439 ubox
47 58 0.003471540 ubox
47 59 0.005537728 ubox
48 57 0.003515446 ubox
48 58 0.005539059 ubox
48 61 0.009563618 ubox
49 60 0.014082830 ubox
50 57 0.006068738 ubox
50 58 0.004233737 ubox
50 59 0.013061741 ubox
50 61 0.120213482 ubox
51 60 0.121396275 ubox
52 60 0.003248341 ubox
53 60 0.122278357 ubox
54 59 0.107670289 ubox
55 60 0.022795456 ubox
56 60 0.009339619 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
6 10 0.9500000 lbox
14 52 0.9500000 lbox
15 51 0.9500000 lbox
16 50 0.9500000 lbox
18 48 0.9500000 lbox
19 47 0.9500000 lbox
20 46 0.9500000 lbox
21 45 0.9500000 lbox
22 44 0.9500000 lbox
23 43 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
showpage
end
%%EOF
