%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUAACAGGCUGAUCUCCCCCGAGCGUCCACAGCGGCGGGGAGGUUUGGCACCUCGAUGU\
) def
/coor [
[89.74217224 253.77529907]
[79.04939270 243.07391357]
[72.18866730 229.59112549]
[69.83214569 214.64784241]
[72.21069336 199.70803833]
[79.09128571 186.23536682]
[89.79983521 175.54975891]
[103.28721619 168.69807434]
[100.94070435 153.88275146]
[98.59418488 139.06742859]
[96.24766541 124.25209808]
[93.90115356 109.43677521]
[91.16761780 94.68795013]
[88.04894257 80.01573944]
[84.93026733 65.34352112]
[81.81159210 50.67131042]
[78.69291687 35.99909592]
[75.57424164 21.32688141]
[72.45556641 6.65466690]
[58.43661118 0.26912603]
[50.95322800 -12.99180698]
[52.69271851 -27.93965530]
[62.77981567 -38.86615753]
[59.66114044 -53.53837204]
[45.76995468 -60.71952820]
[39.79238510 -75.16953278]
[44.55085754 -90.06554413]
[57.79856491 -98.37410736]
[73.28034210 -96.17218018]
[83.68618011 -84.49945068]
[84.10274506 -68.86741638]
[74.33335114 -56.65704727]
[77.45202637 -41.98483276]
[91.11125946 -36.10577011]
[98.78019714 -23.15774345]
[97.33749390 -7.99951220]
[87.12777710 3.53599143]
[90.24645233 18.20820618]
[93.36512756 32.88042068]
[96.48380280 47.55263519]
[99.60247803 62.22484589]
[102.72115326 76.89706421]
[105.83982849 91.56927490]
[110.63917542 98.48920441]
[108.71647644 107.09025574]
[111.06298828 121.90558624]
[113.40950775 136.72090149]
[115.75602722 151.53623962]
[118.10253906 166.35156250]
[133.04710388 168.70007324]
[146.53356934 175.55355835]
[157.24067688 186.24060059]
[164.11946106 199.71418762]
[166.49600220 214.65431213]
[164.13748169 229.59729004]
[157.27494812 243.07916260]
[146.58073425 253.77911377]
[133.10255432 260.64886475]
[118.16083527 263.01541138]
] def
/pairs [
[8 49]
[9 48]
[10 47]
[11 46]
[12 45]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[23 33]
[24 32]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
