%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:10 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5t5h_h)
} def

/sequence { (\
CACGUCCCUCUCCAAACGAGAGAACAUGCAUGGGCUGGCAUGAGCGCGUGGGGCCCCGAGGCGCUGAACCUUGAGGCCUCAUGCUGGGACU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 91 0.068487082 ubox
4 90 0.997824747 ubox
4 91 0.006543835 ubox
5 88 0.012399689 ubox
5 89 0.999383259 ubox
6 87 0.019525882 ubox
6 88 0.999744442 ubox
7 86 0.023433288 ubox
7 87 0.999362086 ubox
7 88 0.003924554 ubox
8 20 0.013418586 ubox
8 22 0.348565295 ubox
8 86 0.935447385 ubox
8 87 0.004911261 ubox
9 19 0.022607312 ubox
9 21 0.771634553 ubox
9 22 0.010200024 ubox
9 23 0.563971872 ubox
9 24 0.020467319 ubox
9 86 0.003479863 ubox
10 18 0.023335195 ubox
10 20 0.803061574 ubox
10 22 0.592671544 ubox
11 16 0.003294653 ubox
11 18 0.003346104 ubox
11 19 0.803088071 ubox
11 20 0.003326545 ubox
11 21 0.592923442 ubox
11 23 0.015369373 ubox
11 34 0.004609461 ubox
12 18 0.800198226 ubox
12 20 0.591405531 ubox
12 22 0.016113692 ubox
12 33 0.023998647 ubox
13 18 0.482635374 ubox
13 20 0.042813071 ubox
13 22 0.006310578 ubox
13 32 0.024052725 ubox
14 31 0.023508761 ubox
17 22 0.007973781 ubox
17 28 0.021941749 ubox
17 33 0.003249732 ubox
18 27 0.020877873 ubox
19 27 0.003674187 ubox
20 25 0.018353166 ubox
20 45 0.005131258 ubox
21 27 0.003393697 ubox
21 36 0.021382891 ubox
22 29 0.015555913 ubox
22 35 0.026626105 ubox
22 39 0.005005206 ubox
22 45 0.541250625 ubox
23 27 0.004154114 ubox
23 85 0.003711350 ubox
24 31 0.004836028 ubox
24 85 0.003666548 ubox
25 32 0.066487837 ubox
25 33 0.019479802 ubox
25 34 0.003317660 ubox
25 37 0.093013128 ubox
25 38 0.015369938 ubox
25 42 0.972531475 ubox
25 44 0.021534035 ubox
25 86 0.014082358 ubox
26 31 0.055466758 ubox
26 36 0.091132284 ubox
26 41 0.975497466 ubox
26 85 0.013799246 ubox
27 32 0.004261944 ubox
27 33 0.005752518 ubox
27 34 0.003250417 ubox
27 40 0.975903373 ubox
27 43 0.019534991 ubox
27 44 0.020840984 ubox
28 35 0.105516692 ubox
28 39 0.976373334 ubox
28 45 0.037299564 ubox
28 84 0.021624500 ubox
29 33 0.011066952 ubox
29 34 0.105426670 ubox
29 37 0.090703982 ubox
29 38 0.971945905 ubox
29 42 0.128848294 ubox
29 44 0.034207025 ubox
29 50 0.004931802 ubox
29 83 0.021648760 ubox
30 36 0.119696964 ubox
30 41 0.132309522 ubox
30 49 0.005762387 ubox
30 82 0.021499730 ubox
31 37 0.095375009 ubox
31 38 0.003620297 ubox
31 40 0.133170774 ubox
31 42 0.007846583 ubox
31 43 0.003903619 ubox
31 48 0.006083959 ubox
31 81 0.021432087 ubox
32 36 0.065121859 ubox
32 39 0.133094614 ubox
32 41 0.006735480 ubox
32 47 0.008396181 ubox
32 79 0.003330098 ubox
32 80 0.021116984 ubox
33 39 0.008677748 ubox
33 41 0.003530729 ubox
33 45 0.005717678 ubox
33 78 0.021202108 ubox
34 39 0.005073532 ubox
34 45 0.125518313 ubox
34 77 0.021283941 ubox
35 42 0.003167907 ubox
35 44 0.125764743 ubox
35 76 0.021311502 ubox
36 43 0.124982639 ubox
36 75 0.021061551 ubox
37 45 0.004863946 ubox
37 70 0.014784731 ubox
37 71 0.010394047 ubox
38 45 0.106991169 ubox
38 69 0.014772550 ubox
38 70 0.010511298 ubox
39 44 0.106994725 ubox
39 73 0.008507998 ubox
40 72 0.008435758 ubox
41 67 0.016563088 ubox
43 65 0.021267281 ubox
43 85 0.080233519 ubox
44 64 0.021374090 ubox
44 84 0.075719951 ubox
44 85 0.065356391 ubox
45 63 0.021374235 ubox
45 83 0.073674715 ubox
45 86 0.106589539 ubox
46 62 0.021374067 ubox
46 82 0.040288689 ubox
46 84 0.995309139 ubox
46 85 0.024050778 ubox
47 61 0.021346499 ubox
47 83 0.996934125 ubox
48 82 0.997889736 ubox
49 58 0.004078600 ubox
49 59 0.020829739 ubox
49 81 0.999402016 ubox
50 57 0.006316056 ubox
50 80 0.999683479 ubox
51 56 0.006300690 ubox
51 57 0.020390793 ubox
51 79 0.999115762 ubox
52 56 0.020064031 ubox
52 78 0.999755502 ubox
53 77 0.999765130 ubox
54 76 0.999014995 ubox
55 75 0.997512794 ubox
55 76 0.038739615 ubox
56 73 0.039670541 ubox
56 75 0.054778201 ubox
57 73 0.995041295 ubox
58 72 0.998679332 ubox
59 71 0.999430673 ubox
59 72 0.005491030 ubox
60 69 0.014899968 ubox
60 70 0.999607069 ubox
60 71 0.005908615 ubox
61 69 0.997209231 ubox
61 70 0.007340325 ubox
62 66 0.068776297 ubox
63 69 0.010175923 ubox
4 90 0.9500000 lbox
5 89 0.9500000 lbox
6 88 0.9500000 lbox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
9 21 0.9500000 lbox
10 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
22 45 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
29 38 0.9500000 lbox
46 84 0.9500000 lbox
47 83 0.9500000 lbox
48 82 0.9500000 lbox
49 81 0.9500000 lbox
50 80 0.9500000 lbox
51 79 0.9500000 lbox
52 78 0.9500000 lbox
53 77 0.9500000 lbox
54 76 0.9500000 lbox
55 75 0.9500000 lbox
57 73 0.9500000 lbox
58 72 0.9500000 lbox
59 71 0.9500000 lbox
60 70 0.9500000 lbox
61 69 0.9500000 lbox
showpage
end
%%EOF
