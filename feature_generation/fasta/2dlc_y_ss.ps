%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:27 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUCUCGGUAGCCAAGUUGGGAAGGCGCAAGACUGUAAAUCUUGAGGUCGGGCGUUCGACUCGCCCCCGGGAGACCA\
) def
/coor [
[117.96847534 255.28262329]
[115.53133392 240.48193359]
[113.09419250 225.68124390]
[110.65705109 210.88055420]
[108.21990967 196.07987976]
[105.78276825 181.27919006]
[103.34562683 166.47850037]
[91.13029480 158.03329468]
[88.44784546 143.05801392]
[97.38877106 130.30271912]
[94.95162964 115.50203705]
[85.80213928 108.01373291]
[84.11952209 96.31088257]
[90.78869629 86.54819489]
[88.95728302 71.66042328]
[87.12586975 56.77264404]
[85.29445648 41.88486481]
[83.46303558 26.99708748]
[81.63162231 12.10931015]
[78.42055511 8.25110626]
[76.96044159 3.97501707]
[77.14306641 -0.04631733]
[78.62952423 -3.26345038]
[80.92005157 -5.32145023]
[81.53188324 -20.30896759]
[82.14371490 -35.29648590]
[82.75553894 -50.28400040]
[72.32415771 -61.85223389]
[73.15814209 -77.04299164]
[84.25096893 -86.91642761]
[84.86280060 -101.90394592]
[85.47463226 -116.89146423]
[86.08645630 -131.87898254]
[72.80369568 -139.48338318]
[64.58612061 -152.39578247]
[63.32206726 -167.64900208]
[69.30200195 -181.73796082]
[81.15178680 -191.42514038]
[96.14842224 -194.48446655]
[110.84579468 -190.21295166]
[121.86655426 -179.59214783]
[126.67820740 -165.06263733]
[124.17507935 -149.96321106]
[114.93236542 -137.76358032]
[101.07397461 -131.26715088]
[100.46214294 -116.27963257]
[99.85031891 -101.29211426]
[99.23848724 -86.30460358]
[109.48963165 -75.55984497]
[109.08264923 -60.35165787]
[97.74305725 -49.67217255]
[97.13123322 -34.68465424]
[96.51940155 -19.69713783]
[95.90756989 -4.70962143]
[96.51940155 10.27789593]
[98.35081482 25.16567421]
[100.18222809 40.05345154]
[102.01364136 54.94122696]
[103.84506226 69.82900238]
[105.67647552 84.71678162]
[116.13739777 97.67979431]
[109.75231934 113.06488800]
[112.18946075 127.86557770]
[124.74811554 137.08067322]
[127.00888824 152.12538147]
[118.14630890 164.04135132]
[120.58345032 178.84204102]
[123.02059937 193.64273071]
[125.45774078 208.44342041]
[127.89488220 223.24411011]
[130.33201599 238.04479980]
[132.76916504 252.84547424]
[144.91523743 263.32653809]
[144.14984131 279.35131836]
[131.06008911 288.62698364]
[115.68735504 284.03805542]
] def
/pairs [
[1 72]
[2 71]
[3 70]
[4 69]
[5 68]
[6 67]
[7 66]
[10 63]
[11 62]
[14 60]
[15 59]
[16 58]
[17 57]
[18 56]
[19 55]
[24 54]
[25 53]
[26 52]
[27 51]
[30 48]
[31 47]
[32 46]
[33 45]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
