%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v5g_ay)
} def

/sequence { (\
GCUGAUAUAGCUCAGUUGGUAGAGCGCACCCUUGGUGAGGGUGAGGUCGGCAGUUCGAAUCUGCCUAUCAGCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.069592652 ubox
1 16 0.019725920 ubox
1 72 0.996334720 ubox
1 74 0.003216013 ubox
1 75 0.004828763 ubox
2 10 0.069713261 ubox
2 15 0.022160670 ubox
2 71 0.997097093 ubox
3 9 0.069023729 ubox
3 14 0.025710790 ubox
3 70 0.996861599 ubox
4 8 0.057462124 ubox
4 13 0.026268338 ubox
4 69 0.996988351 ubox
5 12 0.024816473 ubox
5 68 0.995153005 ubox
6 21 0.012698957 ubox
6 67 0.988089863 ubox
7 16 0.006581272 ubox
7 20 0.017432030 ubox
7 47 0.003716082 ubox
7 66 0.933138940 ubox
7 68 0.010929798 ubox
8 14 0.005075990 ubox
8 15 0.009098460 ubox
8 18 0.120456870 ubox
8 19 0.015920029 ubox
8 21 0.248903762 ubox
8 26 0.044733791 ubox
8 44 0.004268745 ubox
8 45 0.003338948 ubox
8 46 0.005127740 ubox
8 63 0.009117459 ubox
8 67 0.023972973 ubox
9 16 0.009814433 ubox
9 17 0.136075503 ubox
9 20 0.262013085 ubox
9 47 0.003351000 ubox
9 62 0.009896571 ubox
9 66 0.029448472 ubox
10 16 0.140666267 ubox
10 17 0.005565787 ubox
10 20 0.221337394 ubox
10 25 0.903218757 ubox
10 61 0.009809061 ubox
10 64 0.013752010 ubox
10 65 0.003536893 ubox
11 15 0.140206370 ubox
11 18 0.270040639 ubox
11 19 0.226921250 ubox
11 22 0.008279008 ubox
11 24 0.906064113 ubox
11 63 0.013782175 ubox
12 18 0.199042701 ubox
12 19 0.049592292 ubox
12 21 0.010985270 ubox
12 23 0.905985761 ubox
12 58 0.010572073 ubox
13 18 0.108318304 ubox
13 19 0.019100341 ubox
13 22 0.905844236 ubox
13 57 0.010819778 ubox
13 63 0.003388590 ubox
14 20 0.138669336 ubox
14 55 0.007546221 ubox
14 60 0.003409369 ubox
14 62 0.003772785 ubox
15 20 0.045361819 ubox
15 25 0.016437051 ubox
15 54 0.007233357 ubox
15 56 0.005779931 ubox
15 61 0.003807504 ubox
15 72 0.072103664 ubox
16 21 0.036153010 ubox
16 24 0.016443694 ubox
16 53 0.008395083 ubox
16 58 0.010826408 ubox
16 71 0.072303572 ubox
17 21 0.010471244 ubox
17 22 0.003587090 ubox
17 23 0.016291445 ubox
17 26 0.003560357 ubox
17 52 0.009199136 ubox
17 57 0.011038276 ubox
17 70 0.073054219 ubox
17 76 0.014241843 ubox
18 25 0.005006572 ubox
18 51 0.009068445 ubox
18 56 0.011087746 ubox
18 65 0.008835219 ubox
18 69 0.073245325 ubox
18 75 0.018114512 ubox
19 25 0.004483501 ubox
19 48 0.003222798 ubox
19 51 0.011985930 ubox
19 55 0.007639200 ubox
19 64 0.008844436 ubox
19 68 0.073024805 ubox
19 74 0.018113732 ubox
20 24 0.004207594 ubox
20 49 0.005839803 ubox
20 50 0.011649916 ubox
20 63 0.008840165 ubox
20 67 0.072843321 ubox
20 73 0.017311325 ubox
21 62 0.008832718 ubox
21 66 0.069964535 ubox
22 48 0.419777939 ubox
22 61 0.008819088 ubox
22 65 0.012917094 ubox
23 47 0.419288815 ubox
23 60 0.008240262 ubox
24 47 0.030646337 ubox
24 48 0.007928640 ubox
24 64 0.012071259 ubox
24 72 0.005432515 ubox
25 45 0.419582478 ubox
25 46 0.041785555 ubox
25 63 0.012060128 ubox
25 71 0.005431244 ubox
26 47 0.029270222 ubox
26 48 0.057413146 ubox
26 62 0.003764070 ubox
27 37 0.008952805 ubox
27 43 0.995884683 ubox
27 45 0.013323900 ubox
27 46 0.025889302 ubox
28 36 0.009001905 ubox
28 42 0.999393995 ubox
29 35 0.009008358 ubox
29 41 0.999891245 ubox
29 43 0.004625093 ubox
30 34 0.008942928 ubox
30 40 0.999873660 ubox
30 41 0.009473299 ubox
30 46 0.003373964 ubox
31 39 0.999820455 ubox
31 40 0.011874433 ubox
31 45 0.003447711 ubox
32 37 0.037704974 ubox
32 38 0.990077080 ubox
32 39 0.013781092 ubox
32 44 0.003498945 ubox
33 37 0.892191396 ubox
33 38 0.062784479 ubox
33 43 0.003466641 ubox
34 42 0.003233600 ubox
39 48 0.003774816 ubox
39 66 0.003798939 ubox
40 47 0.003552959 ubox
40 65 0.004834214 ubox
41 64 0.004844830 ubox
42 63 0.004706290 ubox
43 48 0.019289336 ubox
44 62 0.031079228 ubox
44 66 0.015169397 ubox
45 61 0.032054211 ubox
45 65 0.017230136 ubox
45 66 0.008673566 ubox
45 69 0.016141184 ubox
46 60 0.031802218 ubox
46 64 0.016739180 ubox
46 65 0.005483956 ubox
46 66 0.011352131 ubox
46 68 0.026038901 ubox
47 58 0.025680162 ubox
47 59 0.022554329 ubox
47 63 0.010146093 ubox
47 67 0.029801215 ubox
48 57 0.035113182 ubox
48 63 0.011083890 ubox
49 56 0.034979196 ubox
49 61 0.006535308 ubox
49 62 0.011115712 ubox
49 65 0.997837679 ubox
49 66 0.003506622 ubox
50 55 0.024731829 ubox
50 60 0.005178263 ubox
50 61 0.011060678 ubox
50 64 0.999105292 ubox
50 65 0.003365425 ubox
51 57 0.003652874 ubox
51 63 0.999121250 ubox
52 60 0.006909411 ubox
52 62 0.998706935 ubox
53 60 0.020126296 ubox
53 61 0.997230629 ubox
54 58 0.020137214 ubox
54 59 0.120275459 ubox
55 59 0.152210813 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
