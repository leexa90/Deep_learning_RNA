%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUCCCUCUCCAAACGAGAGAACAUGCAUGGGCUGGCAUGAGCGGCAUGCUUCACUUCGGUGGGGCUCGAGGGGCAUUUACGUCCCGAGGCGCUGAACCUUGAGGCCUGAAAUUUCAUGCUCAGGGAC\
) def
/coor [
[92.50000000 155.47448730]
[92.50000000 140.47448730]
[92.50000000 125.47447968]
[92.50000000 110.47447968]
[78.14589691 106.12021637]
[69.81233978 118.59225464]
[61.47878647 131.06430054]
[53.14523315 143.53634644]
[44.81167984 156.00839233]
[46.51868820 171.96037292]
[35.01037216 183.13795471]
[19.11493492 180.96664429]
[11.02598953 167.11209106]
[16.94868469 152.20233154]
[32.33963776 147.67483521]
[40.67319107 135.20278931]
[49.00674438 122.73075104]
[57.34029770 110.25870514]
[65.67385101 97.78665924]
[51.94689560 91.73928833]
[41.71022034 80.77523804]
[36.61787415 66.66609192]
[37.49268341 51.69161987]
[44.19330215 38.27142334]
[55.63703156 28.57394600]
[69.97478485 24.16612053]
[84.88984680 25.76016998]
[97.97222137 33.09852219]
[107.10804749 44.99544144]
[110.82114410 59.52860641]
[108.51155090 74.34973145]
[100.55445862 87.06189728]
[109.78292847 75.23670197]
[119.01140594 63.41150665]
[128.09407043 51.47395325]
[137.02955627 39.42583847]
[145.96505737 27.37772751]
[154.90054321 15.32961369]
[163.83602905 3.28150082]
[172.77151489 -8.76661205]
[181.70701599 -20.81472588]
[176.41459656 -36.82662582]
[181.61991882 -52.69293594]
[195.09915161 -62.26608276]
[211.46360779 -61.96015167]
[220.10072327 -74.22392273]
[221.72108459 -89.96193695]
[235.37544250 -95.91236115]
[244.01257324 -108.17613220]
[252.64968872 -120.43990326]
[261.28680420 -132.70367432]
[269.92395020 -144.96745300]
[278.56106567 -157.23121643]
[279.35614014 -177.30398560]
[297.08117676 -184.87467957]
[305.10614014 -197.54748535]
[313.13110352 -210.22029114]
[321.15606689 -222.89309692]
[329.18103027 -235.56588745]
[337.20599365 -248.23869324]
[345.23095703 -260.91149902]
[342.21246338 -271.49935913]
[345.50976562 -281.77194214]
[353.78091431 -288.34988403]
[364.09185791 -289.21270752]
[372.72900391 -301.47647095]
[381.36611938 -313.74023438]
[382.36422729 -320.44924927]
[386.09396362 -324.91265869]
[390.74017334 -326.37969971]
[399.96865845 -338.20489502]
[409.19714355 -350.03009033]
[418.42559814 -361.85528564]
[427.65408325 -373.68048096]
[425.47094727 -389.33328247]
[435.06198120 -401.89462280]
[450.73696899 -403.91213989]
[463.19622803 -394.18884277]
[465.04791260 -378.49340820]
[455.19342041 -366.13763428]
[439.47927856 -364.45202637]
[430.25079346 -352.62683105]
[421.02233887 -340.80163574]
[411.79385376 -328.97644043]
[402.56536865 -317.15124512]
[393.62988281 -305.10311890]
[384.99276733 -292.83935547]
[376.35565186 -280.57559204]
[376.14428711 -261.30261230]
[357.90374756 -252.88653564]
[349.87878418 -240.21372986]
[341.85382080 -227.54092407]
[333.82885742 -214.86813354]
[325.80389404 -202.19532776]
[317.77893066 -189.52252197]
[309.75396729 -176.84971619]
[312.90264893 -166.99343872]
[309.99069214 -156.83464050]
[301.76187134 -149.85717773]
[290.82482910 -148.59410095]
[282.18771362 -136.33032227]
[273.55059814 -124.06655121]
[264.91345215 -111.80278015]
[256.27633667 -99.53900909]
[247.63922119 -87.27523804]
[246.63664246 -72.41441345]
[232.36450195 -65.58679962]
[223.72737122 -53.32302856]
[229.20610046 -41.08447266]
[227.88481140 -27.63170242]
[220.00410461 -16.51573944]
[207.55014038 -10.72432041]
[193.75512695 -11.87923527]
[184.81962585 0.16887732]
[175.88414001 12.21699047]
[166.94865417 24.26510239]
[158.01316833 36.31321716]
[149.07766724 48.36132812]
[140.14218140 60.40944290]
[138.66912842 67.73319244]
[130.83660889 72.63997650]
[121.60813141 84.46517944]
[112.37965393 96.29037476]
[107.50000000 110.47447968]
[107.50000000 125.47447968]
[107.50000000 140.47448730]
[107.50000000 155.47448730]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 19]
[6 18]
[7 17]
[8 16]
[9 15]
[32 123]
[33 122]
[34 121]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[45 108]
[46 107]
[48 105]
[49 104]
[50 103]
[51 102]
[52 101]
[53 100]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[61 90]
[65 88]
[66 87]
[67 86]
[70 85]
[71 84]
[72 83]
[73 82]
[74 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
