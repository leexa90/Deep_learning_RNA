%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4m4o_b)
} def

/sequence { (\
GGGUUCAUCAGGGCUAAAGAGUGCAGAGUUACUUAGUUCACUGCAGACUUGACGAACCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 58 0.008755297 ubox
1 59 0.988130460 ubox
2 57 0.006435834 ubox
2 58 0.999887877 ubox
2 59 0.004494395 ubox
3 57 0.999960213 ubox
3 58 0.003238373 ubox
4 56 0.999506262 ubox
5 55 0.999570367 ubox
6 54 0.997584764 ubox
8 27 0.003493366 ubox
8 52 0.992271660 ubox
9 26 0.003754840 ubox
9 43 0.003374351 ubox
9 51 0.999506024 ubox
10 42 0.003793388 ubox
10 49 0.023755342 ubox
10 50 0.995840961 ubox
11 24 0.012608426 ubox
11 39 0.035390774 ubox
11 41 0.003981033 ubox
11 48 0.033386771 ubox
11 49 0.987190610 ubox
11 50 0.018759138 ubox
11 53 0.010680558 ubox
12 38 0.037372738 ubox
12 39 0.004122596 ubox
12 41 0.003194303 ubox
12 48 0.983431288 ubox
12 49 0.038097623 ubox
12 53 0.013555634 ubox
13 22 0.230542704 ubox
13 24 0.043781941 ubox
13 29 0.004140120 ubox
13 37 0.080167151 ubox
13 38 0.004305169 ubox
13 39 0.003335726 ubox
13 41 0.003882036 ubox
13 44 0.074611381 ubox
13 48 0.050430944 ubox
13 53 0.008912692 ubox
14 19 0.040979293 ubox
14 21 0.266327700 ubox
14 23 0.043868504 ubox
14 28 0.004277872 ubox
14 36 0.081232803 ubox
14 43 0.074590127 ubox
14 46 0.528372489 ubox
14 51 0.006073762 ubox
15 19 0.010113520 ubox
15 20 0.253973835 ubox
15 21 0.012313553 ubox
15 27 0.004167986 ubox
15 35 0.080966174 ubox
15 40 0.006354089 ubox
15 43 0.009069113 ubox
15 45 0.467327184 ubox
15 46 0.070984126 ubox
15 47 0.025015183 ubox
15 51 0.004690227 ubox
15 52 0.004501102 ubox
16 22 0.007440861 ubox
16 34 0.064879122 ubox
16 37 0.021512159 ubox
16 38 0.013891997 ubox
16 42 0.013920985 ubox
16 50 0.006734723 ubox
17 22 0.009798485 ubox
17 33 0.042030406 ubox
17 34 0.012052645 ubox
17 37 0.014071052 ubox
17 38 0.019878585 ubox
17 42 0.012892968 ubox
17 49 0.008364569 ubox
17 50 0.069518902 ubox
18 22 0.006044891 ubox
18 33 0.016001662 ubox
18 34 0.004161970 ubox
18 37 0.019120377 ubox
18 38 0.009974582 ubox
18 42 0.223625666 ubox
18 49 0.134229201 ubox
19 30 0.024722791 ubox
19 32 0.018968478 ubox
19 33 0.004258905 ubox
19 34 0.093494111 ubox
19 37 0.005599839 ubox
19 38 0.022280752 ubox
19 39 0.034412534 ubox
19 41 0.221661361 ubox
19 42 0.029562286 ubox
19 44 0.097617017 ubox
19 48 0.144366247 ubox
19 50 0.011749190 ubox
20 29 0.026196549 ubox
20 30 0.015364152 ubox
20 33 0.125087573 ubox
20 34 0.004685254 ubox
20 37 0.026219675 ubox
20 38 0.034206759 ubox
20 42 0.373431941 ubox
20 49 0.018594750 ubox
21 29 0.013505716 ubox
21 30 0.008079622 ubox
21 32 0.128982586 ubox
21 37 0.029054485 ubox
21 38 0.005496529 ubox
21 39 0.176875923 ubox
21 41 0.377502535 ubox
21 44 0.015399263 ubox
21 48 0.019693895 ubox
22 27 0.025779366 ubox
22 28 0.009029351 ubox
22 31 0.128497596 ubox
22 35 0.030185924 ubox
22 36 0.020737106 ubox
22 40 0.377495785 ubox
22 43 0.014974921 ubox
22 45 0.806147760 ubox
22 46 0.005652855 ubox
22 47 0.014667070 ubox
23 29 0.036220439 ubox
23 30 0.114377758 ubox
23 32 0.005296370 ubox
23 34 0.029685896 ubox
23 37 0.211705804 ubox
23 38 0.006808135 ubox
23 39 0.370746952 ubox
23 41 0.003595080 ubox
23 42 0.010441772 ubox
23 44 0.887683327 ubox
24 28 0.048989188 ubox
24 36 0.225154365 ubox
24 43 0.887804350 ubox
25 29 0.008539053 ubox
25 30 0.005763617 ubox
25 33 0.103672925 ubox
25 34 0.081418954 ubox
25 37 0.169109661 ubox
25 38 0.129124536 ubox
25 42 0.884843263 ubox
26 32 0.110597754 ubox
26 33 0.072470381 ubox
26 34 0.138557992 ubox
26 37 0.111207508 ubox
26 38 0.196848239 ubox
26 39 0.148757452 ubox
26 41 0.870553469 ubox
26 42 0.004173463 ubox
26 44 0.010955810 ubox
26 50 0.007203796 ubox
27 33 0.155007645 ubox
27 34 0.114528755 ubox
27 37 0.237645983 ubox
27 38 0.182597776 ubox
27 42 0.042610451 ubox
27 49 0.010291113 ubox
28 32 0.126091077 ubox
28 33 0.090415416 ubox
28 34 0.140558161 ubox
28 37 0.185131582 ubox
28 38 0.066102874 ubox
28 39 0.574949617 ubox
28 41 0.058539807 ubox
28 44 0.007279586 ubox
28 48 0.010739541 ubox
28 53 0.004276678 ubox
29 35 0.238788144 ubox
29 36 0.139176251 ubox
29 40 0.065881214 ubox
29 43 0.007130034 ubox
29 47 0.010710394 ubox
29 52 0.004279543 ubox
30 35 0.127956431 ubox
30 36 0.104404868 ubox
30 40 0.021250079 ubox
30 46 0.009633954 ubox
30 47 0.003465782 ubox
30 51 0.004250887 ubox
31 37 0.515156533 ubox
31 38 0.048787978 ubox
31 50 0.004147403 ubox
32 36 0.515728304 ubox
32 46 0.019728617 ubox
33 40 0.013233711 ubox
33 45 0.019628295 ubox
33 46 0.003366347 ubox
33 47 0.003515954 ubox
34 40 0.010420812 ubox
34 43 0.026191794 ubox
34 45 0.004067613 ubox
34 46 0.003367383 ubox
35 42 0.033486510 ubox
35 49 0.006623140 ubox
36 41 0.034026278 ubox
36 44 0.052378107 ubox
36 48 0.007330495 ubox
37 43 0.052032204 ubox
37 47 0.007036148 ubox
38 45 0.003331324 ubox
38 46 0.006296342 ubox
38 47 0.042045180 ubox
39 46 0.045558983 ubox
41 46 0.008657887 ubox
42 47 0.006324273 ubox
43 48 0.005112626 ubox
44 51 0.004140392 ubox
45 50 0.003785328 ubox
1 59 0.9500000 lbox
2 58 0.9500000 lbox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
12 48 0.9500000 lbox
22 45 0.9500000 lbox
23 44 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
showpage
end
%%EOF
