%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGGCUGAUUCUGGAUUCGACGGGAUAUUUCGGACGCGGGUUCAACUCCCGCCAGCUCC\
) def
/coor [
[92.50000000 203.47489929]
[92.50000000 188.47489929]
[92.50000000 173.47489929]
[92.50000000 158.47489929]
[92.50000000 143.47489929]
[92.50000000 128.47489929]
[92.50000000 113.47490692]
[83.06019592 101.81771088]
[68.38797760 98.69903564]
[53.71576691 95.58036041]
[39.04355240 92.46168518]
[24.37133789 89.34300995]
[9.69912434 86.22433472]
[-2.51124263 95.99372864]
[-18.14327621 95.57716370]
[-29.81600952 85.17133331]
[-32.01793289 69.68955231]
[-23.70936775 56.44184113]
[-8.81336308 51.68336868]
[5.63664293 57.66093826]
[12.81779957 71.55212402]
[27.49001312 74.67079926]
[42.16222763 77.78947449]
[56.83444214 80.90814972]
[71.50665283 84.02682495]
[86.17887115 87.14550018]
[75.79579926 76.31998444]
[72.17780304 61.76285172]
[76.28472900 47.33602905]
[87.02702332 36.86687851]
[101.55480957 33.13280869]
[116.01395416 37.12445068]
[126.56851196 47.78284073]
[130.41842651 62.28036499]
[126.54232025 76.77090454]
[115.96903229 87.40990448]
[130.88685608 85.84197235]
[145.80468750 84.27404785]
[160.72251892 82.70612335]
[175.64035034 81.13819885]
[184.23419189 68.07374573]
[199.22985840 63.63935852]
[213.54687500 69.92881775]
[220.42515564 83.97243500]
[216.61700439 99.13924408]
[203.92051697 108.26793671]
[188.33056641 107.04822540]
[177.20826721 96.05602264]
[162.29045105 97.62394714]
[147.37261963 99.19187927]
[132.45478821 100.75980377]
[117.53695679 102.32772827]
[107.50000000 113.47490692]
[107.50000000 128.47489929]
[107.50000000 143.47489929]
[107.50000000 158.47489929]
[107.50000000 173.47489929]
[107.50000000 188.47489929]
[107.50000000 203.47489929]
] def
/pairs [
[1 59]
[2 58]
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 26]
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
