%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:37 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUCCGCAGCCUCCUCGCGGCGCAAGCUGGGCAACAUUCCGAAAGGUAAUGGCGAAUGCGGACC\
) def
/coor [
[74.87815094 230.42480469]
[74.87815094 215.42480469]
[74.87815094 200.42480469]
[74.87815094 185.42480469]
[74.87815094 170.42480469]
[74.87815094 155.42480469]
[74.87815094 140.42480469]
[74.87815094 125.42479706]
[66.65796661 112.87774658]
[52.90608215 106.88728333]
[39.15420151 100.89681244]
[41.26597977 115.74741364]
[32.61527634 128.00160217]
[17.91470146 130.98373413]
[5.17262697 123.06921387]
[1.33050513 108.56962585]
[8.48139381 95.38385010]
[22.73001671 90.69506073]
[11.26528072 81.02243042]
[-0.19945544 71.34979248]
[-11.66419125 61.67716217]
[-27.89309311 59.32030869]
[-33.71428680 43.98910522]
[-23.13942337 31.45498085]
[-7.04701853 34.61196518]
[-1.99155807 50.21242523]
[9.47317791 59.88505936]
[20.93791389 69.55769348]
[32.40264893 79.23032379]
[45.14466858 87.14492798]
[58.89655304 93.13539886]
[72.64843750 99.12586212]
[81.53188324 82.11295319]
[98.46364594 75.99411774]
[113.97226715 82.49217987]
[126.71428680 74.57757568]
[139.45629883 66.66297150]
[152.19831848 58.74837112]
[164.74537659 50.52818298]
[177.09013367 42.00720978]
[183.62765503 26.96750259]
[199.94963074 25.37839699]
[209.26541138 38.87462997]
[201.99171448 53.57243729]
[185.61109924 54.35197067]
[173.26634216 62.87294006]
[169.41390991 69.50487518]
[160.11293030 71.49038696]
[147.37091064 79.40499115]
[134.62889099 87.31959534]
[121.88687134 95.23419952]
[122.97930145 103.38555908]
[121.02950287 111.67916107]
[116.08990479 118.98052979]
[108.63417053 124.21711731]
[99.51712799 126.53350067]
[89.87815094 125.42479706]
[89.87815094 140.42480469]
[89.87815094 155.42480469]
[89.87815094 170.42480469]
[89.87815094 185.42480469]
[89.87815094 200.42480469]
[89.87815094 215.42480469]
[89.87815094 230.42480469]
] def
/pairs [
[1 64]
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[7 58]
[8 57]
[9 32]
[10 31]
[11 30]
[18 29]
[19 28]
[20 27]
[21 26]
[35 51]
[36 50]
[37 49]
[38 48]
[39 46]
[40 45]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
