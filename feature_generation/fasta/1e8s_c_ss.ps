%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:25 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUAGCGAGACCCCGUCUCUGCCGGGCGCGGUGGCGCGCGCCUGUAGUCCCAGCUACUCGGGAGGCUGAGGUGGGAGGAUCGCUAG\
) def
/coor [
[85.02183533 433.79235840]
[87.90649414 414.62652588]
[88.44803619 399.63632202]
[88.98957062 384.64608765]
[89.53110504 369.65588379]
[90.07263947 354.66564941]
[90.61418152 339.67541504]
[91.15571594 324.68521118]
[80.85430145 313.98864746]
[81.18994904 298.77871704]
[92.47933197 288.04617310]
[92.75014496 273.04861450]
[92.75014496 258.04861450]
[92.75014496 243.04861450]
[92.75014496 228.04861450]
[92.75014496 213.04861450]
[92.75014496 198.04861450]
[92.75014496 183.04861450]
[92.75014496 168.04861450]
[85.01284790 155.32133484]
[92.75014496 141.52116394]
[92.75014496 126.52117157]
[92.75014496 111.52117157]
[70.64109039 94.76717377]
[60.72547913 83.51192474]
[50.80986404 72.25667572]
[40.89425278 61.00143051]
[30.97863770 49.74618149]
[21.06302261 38.49093628]
[11.14740849 27.23568726]
[-4.63917923 26.48789024]
[-15.21125507 14.74026299]
[-14.29659462 -1.03753614]
[-2.43784952 -11.48481846]
[13.32939720 -10.40339661]
[23.65071869 1.56514108]
[22.40265465 17.32007408]
[32.31827164 28.57532120]
[42.23388290 39.83056641]
[52.14949799 51.08581543]
[62.06511307 62.34106064]
[71.98072815 73.59631348]
[81.89633942 84.85155487]
[77.99390411 70.36808777]
[87.54094696 58.79855347]
[102.50184631 59.88088226]
[110.28422546 72.70408630]
[104.33769226 86.47510529]
[115.77011871 76.76431274]
[127.20255280 67.05352020]
[138.63497925 57.34272385]
[137.32519531 41.88102722]
[145.38249207 28.61982536]
[159.70869446 22.65832329]
[174.79508972 26.28883934]
[184.84062195 38.11536407]
[185.98260498 53.59036255]
[177.78192139 66.76337433]
[163.39189148 72.56911469]
[148.34577942 68.77515411]
[136.91334534 78.48594666]
[125.48091125 88.19674683]
[114.04848480 97.90753937]
[107.75014496 111.52117157]
[107.75014496 126.52117157]
[107.75014496 141.52116394]
[115.48744965 155.32133484]
[107.75014496 168.04861450]
[107.75014496 183.04861450]
[107.75014496 198.04861450]
[107.75014496 213.04861450]
[107.75014496 228.04861450]
[107.75014496 243.04861450]
[107.75014496 258.04861450]
[107.75014496 273.04861450]
[110.93775177 281.86251831]
[107.46955872 288.58770752]
[117.95507812 300.10690308]
[117.19233704 315.30139160]
[106.14593506 325.22674561]
[105.60440063 340.21694946]
[105.06286621 355.20718384]
[104.52132416 370.19741821]
[103.97978973 385.18762207]
[103.43825531 400.17785645]
[102.89672089 415.16806030]
] def
/pairs [
[2 86]
[3 85]
[4 84]
[5 83]
[6 82]
[7 81]
[8 80]
[11 77]
[12 75]
[13 74]
[14 73]
[15 72]
[16 71]
[17 70]
[18 69]
[19 68]
[21 66]
[22 65]
[23 64]
[24 43]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[48 63]
[49 62]
[50 61]
[51 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
