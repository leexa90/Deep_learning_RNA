%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4lck_c)
} def

/sequence { (\
GGGUGCGAUGAGAAGAAGAGUAUUAAGGAUUUACUAUGAUUAGCGACUCUAGGAUAGUGAAAGCUAGAGGAUAGUAACCUUAAGAAGGCACUUCGAGCACCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 101 0.008592257 ubox
1 102 0.988134532 ubox
2 100 0.006210969 ubox
2 101 0.999891991 ubox
2 102 0.004492474 ubox
3 100 0.999965131 ubox
3 101 0.003235703 ubox
4 99 0.999789752 ubox
5 98 0.999983847 ubox
6 95 0.003297611 ubox
6 97 0.999584082 ubox
7 94 0.007434792 ubox
8 21 0.003302126 ubox
8 93 0.006905343 ubox
9 14 0.006925097 ubox
9 16 0.003326384 ubox
9 20 0.003332042 ubox
9 95 0.267355485 ubox
9 96 0.065212837 ubox
9 97 0.017802880 ubox
10 93 0.049958361 ubox
10 94 0.247094918 ubox
11 92 0.058281857 ubox
11 93 0.236080181 ubox
12 89 0.004684037 ubox
12 91 0.063983787 ubox
12 92 0.176446588 ubox
12 93 0.015500201 ubox
12 94 0.949858054 ubox
13 92 0.021928423 ubox
13 93 0.951350546 ubox
14 21 0.004802606 ubox
14 92 0.958135070 ubox
14 93 0.004549828 ubox
15 89 0.111932627 ubox
15 91 0.956748329 ubox
15 92 0.008432775 ubox
15 94 0.177954318 ubox
16 21 0.003678366 ubox
16 92 0.004695608 ubox
16 93 0.178537514 ubox
17 23 0.003857095 ubox
17 50 0.005782371 ubox
17 92 0.181299484 ubox
18 49 0.006004707 ubox
18 89 0.230390907 ubox
18 91 0.181254181 ubox
18 93 0.006334061 ubox
18 94 0.003266462 ubox
19 35 0.005391775 ubox
19 48 0.006005551 ubox
19 92 0.011282267 ubox
20 34 0.005588236 ubox
20 47 0.006005978 ubox
20 89 0.172154730 ubox
20 91 0.012189090 ubox
21 33 0.005581598 ubox
21 46 0.005936428 ubox
21 82 0.003689752 ubox
21 83 0.016205207 ubox
21 84 0.053292668 ubox
21 85 0.259633238 ubox
21 86 0.139657627 ubox
21 87 0.037332105 ubox
21 88 0.160755959 ubox
21 90 0.011011257 ubox
22 32 0.005482617 ubox
23 39 0.003233805 ubox
23 43 0.003463719 ubox
23 82 0.008240574 ubox
23 83 0.965031347 ubox
23 84 0.029827915 ubox
23 85 0.034094544 ubox
23 86 0.037252000 ubox
23 87 0.009415140 ubox
23 88 0.003776829 ubox
24 38 0.003265000 ubox
24 42 0.003625429 ubox
24 82 0.995438933 ubox
24 83 0.023970268 ubox
24 84 0.025225665 ubox
24 85 0.022615295 ubox
24 86 0.006081957 ubox
25 37 0.003172251 ubox
25 41 0.003614468 ubox
25 81 0.998548109 ubox
26 35 0.003581543 ubox
26 40 0.003444638 ubox
26 65 0.003264915 ubox
26 80 0.999256812 ubox
26 81 0.006276020 ubox
27 34 0.003736968 ubox
27 64 0.003426765 ubox
27 79 0.999841230 ubox
27 80 0.007100767 ubox
28 41 0.004584755 ubox
28 78 0.997061943 ubox
28 79 0.008042724 ubox
29 37 0.003734729 ubox
29 40 0.006247843 ubox
29 75 0.003684157 ubox
30 36 0.003756781 ubox
30 39 0.006485981 ubox
30 61 0.032154344 ubox
30 74 0.003781838 ubox
30 76 0.037165787 ubox
30 77 0.216503890 ubox
31 38 0.006464075 ubox
31 46 0.007229804 ubox
31 60 0.037098168 ubox
31 73 0.003212583 ubox
31 74 0.004258791 ubox
31 76 0.155399883 ubox
31 77 0.827500378 ubox
32 45 0.007639661 ubox
32 59 0.037725407 ubox
32 73 0.004629211 ubox
32 76 0.981280230 ubox
32 77 0.013257393 ubox
33 58 0.037860842 ubox
33 72 0.004437752 ubox
33 75 0.997850731 ubox
34 43 0.017146010 ubox
34 57 0.037888079 ubox
34 74 0.998891365 ubox
35 42 0.017729080 ubox
35 56 0.037868395 ubox
35 73 0.998293046 ubox
36 41 0.017804696 ubox
36 55 0.037725581 ubox
36 72 0.994737817 ubox
37 42 0.004500462 ubox
37 43 0.005728416 ubox
37 45 0.019376225 ubox
37 46 0.011088989 ubox
37 54 0.036140129 ubox
37 68 0.007918317 ubox
37 69 0.078582678 ubox
37 70 0.123955558 ubox
37 71 0.955022643 ubox
38 44 0.094840267 ubox
38 47 0.006014324 ubox
38 49 0.004095188 ubox
38 72 0.004911720 ubox
39 48 0.004067895 ubox
39 72 0.027288382 ubox
39 75 0.012392366 ubox
40 45 0.009592866 ubox
40 46 0.028193438 ubox
40 51 0.004159002 ubox
40 52 0.034481160 ubox
40 66 0.036321417 ubox
40 67 0.724820541 ubox
40 68 0.312674605 ubox
40 69 0.045511522 ubox
40 70 0.031785405 ubox
40 71 0.041987255 ubox
40 74 0.012666028 ubox
40 77 0.006011113 ubox
41 45 0.028187952 ubox
41 46 0.018363695 ubox
41 51 0.036507175 ubox
41 66 0.911038278 ubox
41 67 0.231613428 ubox
41 68 0.023307803 ubox
41 69 0.009192898 ubox
41 70 0.049487092 ubox
41 71 0.005448201 ubox
41 73 0.015889961 ubox
41 76 0.006319243 ubox
42 48 0.004128972 ubox
42 50 0.036934042 ubox
42 65 0.951767251 ubox
42 72 0.019789753 ubox
42 75 0.005958403 ubox
43 47 0.004718722 ubox
43 49 0.036595242 ubox
43 64 0.953562495 ubox
43 72 0.008755069 ubox
43 75 0.008409367 ubox
44 53 0.003666661 ubox
44 59 0.003778931 ubox
44 63 0.953234400 ubox
44 69 0.003584246 ubox
44 70 0.061571575 ubox
44 74 0.009488145 ubox
45 58 0.008285562 ubox
45 72 0.008927463 ubox
46 58 0.083420323 ubox
47 52 0.013920096 ubox
47 53 0.014507490 ubox
47 57 0.097814318 ubox
47 59 0.566035050 ubox
47 63 0.003751413 ubox
47 69 0.293959582 ubox
47 70 0.021991146 ubox
48 52 0.013145794 ubox
48 54 0.022123838 ubox
48 56 0.093025427 ubox
48 57 0.016831853 ubox
48 59 0.070495800 ubox
48 60 0.437237269 ubox
48 61 0.021452210 ubox
48 62 0.006456405 ubox
48 68 0.297803706 ubox
48 69 0.009587199 ubox
48 71 0.005710496 ubox
49 53 0.024745682 ubox
49 57 0.790960541 ubox
49 59 0.446253452 ubox
49 67 0.298202108 ubox
49 70 0.006532131 ubox
50 54 0.022276356 ubox
50 56 0.787558908 ubox
50 57 0.077219031 ubox
50 59 0.065327315 ubox
50 60 0.006968683 ubox
50 66 0.298014674 ubox
50 69 0.006335699 ubox
51 55 0.698365378 ubox
51 58 0.127262026 ubox
51 65 0.297762598 ubox
52 58 0.032807032 ubox
52 64 0.297422694 ubox
52 65 0.006149801 ubox
53 58 0.012601918 ubox
53 64 0.009844420 ubox
54 58 0.005171345 ubox
55 59 0.007910958 ubox
55 60 0.019282568 ubox
55 61 0.096689262 ubox
55 62 0.040057122 ubox
55 63 0.008230415 ubox
55 66 0.016462353 ubox
56 65 0.019662050 ubox
56 92 0.004722350 ubox
57 64 0.021265794 ubox
57 91 0.005685114 ubox
58 63 0.021676955 ubox
58 90 0.005705590 ubox
59 89 0.005708842 ubox
63 75 0.036733813 ubox
64 74 0.037590532 ubox
64 84 0.005840551 ubox
65 73 0.037573485 ubox
65 83 0.005703628 ubox
66 72 0.037260891 ubox
67 81 0.006581989 ubox
68 80 0.006801736 ubox
69 79 0.006818146 ubox
70 78 0.006805688 ubox
78 88 0.011246017 ubox
79 87 0.011307994 ubox
80 86 0.011167003 ubox
81 85 0.009298588 ubox
83 92 0.004306714 ubox
84 89 0.015786586 ubox
84 91 0.006672738 ubox
84 94 0.030079456 ubox
85 93 0.030178956 ubox
86 92 0.030277222 ubox
87 91 0.029702440 ubox
1 102 0.9500000 lbox
2 101 0.9500000 lbox
3 100 0.9500000 lbox
4 99 0.9500000 lbox
5 98 0.9500000 lbox
6 97 0.9500000 lbox
12 94 0.9500000 lbox
13 93 0.9500000 lbox
14 92 0.9500000 lbox
15 91 0.9500000 lbox
23 83 0.9500000 lbox
24 82 0.9500000 lbox
25 81 0.9500000 lbox
26 80 0.9500000 lbox
27 79 0.9500000 lbox
28 78 0.9500000 lbox
31 77 0.9500000 lbox
32 76 0.9500000 lbox
33 75 0.9500000 lbox
34 74 0.9500000 lbox
35 73 0.9500000 lbox
36 72 0.9500000 lbox
37 71 0.9500000 lbox
40 67 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
43 64 0.9500000 lbox
44 63 0.9500000 lbox
47 59 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
showpage
end
%%EOF
