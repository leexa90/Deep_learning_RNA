%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (486d_e)
} def

/sequence { (\
UCCGUGAUAGUUUAAUGGUCAGAAUGGGCGCUUGUCGCGUGCCAGAUCGGGGUUCAAUUCCCCGUCGCGGAG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.935033000 ubox
1 72 0.010798777 ubox
2 18 0.004623121 ubox
2 41 0.004940723 ubox
2 70 0.999573199 ubox
3 17 0.004667995 ubox
3 39 0.013717379 ubox
3 69 0.999853898 ubox
4 16 0.004655595 ubox
4 38 0.014133320 ubox
4 68 0.999827012 ubox
5 14 0.005234846 ubox
5 15 0.004330348 ubox
5 21 0.032946068 ubox
5 37 0.014130385 ubox
5 67 0.998735075 ubox
6 13 0.010351662 ubox
6 20 0.071665511 ubox
6 36 0.014161201 ubox
6 66 0.996102486 ubox
7 11 0.003668124 ubox
7 12 0.014421333 ubox
7 13 0.013144812 ubox
7 16 0.025258763 ubox
7 19 0.071961718 ubox
7 25 0.004323753 ubox
7 35 0.014155903 ubox
7 65 0.983326399 ubox
8 14 0.025421050 ubox
8 15 0.028562946 ubox
8 17 0.045238244 ubox
8 18 0.065778528 ubox
8 21 0.006214079 ubox
8 23 0.004438852 ubox
8 24 0.005165993 ubox
8 26 0.012898636 ubox
8 34 0.013914759 ubox
8 64 0.920032535 ubox
9 13 0.031161768 ubox
9 16 0.097356197 ubox
9 19 0.032071172 ubox
9 25 0.015754683 ubox
9 32 0.007832064 ubox
9 33 0.011469028 ubox
9 47 0.003478776 ubox
9 59 0.008243721 ubox
9 65 0.004077077 ubox
10 16 0.068585723 ubox
10 19 0.017936100 ubox
10 20 0.068891248 ubox
10 25 0.123414712 ubox
10 29 0.005128448 ubox
10 31 0.010842410 ubox
10 32 0.006914040 ubox
10 38 0.003762141 ubox
10 47 0.032548535 ubox
10 48 0.025218744 ubox
10 58 0.008458371 ubox
10 60 0.005276065 ubox
10 62 0.017943608 ubox
10 63 0.048417049 ubox
11 15 0.066286551 ubox
11 17 0.037937081 ubox
11 18 0.049311916 ubox
11 21 0.006863651 ubox
11 22 0.014625288 ubox
11 23 0.035081444 ubox
11 24 0.136434136 ubox
11 26 0.003894043 ubox
11 28 0.005177346 ubox
11 30 0.010451039 ubox
11 37 0.003726247 ubox
11 46 0.034159389 ubox
11 57 0.008524375 ubox
11 64 0.008286098 ubox
12 17 0.054897989 ubox
12 18 0.020674486 ubox
12 21 0.021013195 ubox
12 22 0.037696930 ubox
12 23 0.141670776 ubox
12 24 0.012383121 ubox
12 26 0.004750000 ubox
12 27 0.005558904 ubox
12 45 0.034066503 ubox
12 46 0.019516329 ubox
12 56 0.007844964 ubox
12 64 0.005966855 ubox
13 17 0.020179454 ubox
13 18 0.017763145 ubox
13 21 0.037146782 ubox
13 22 0.141319059 ubox
13 23 0.013453320 ubox
13 24 0.005932609 ubox
13 26 0.014567221 ubox
13 34 0.004819606 ubox
13 44 0.016618127 ubox
13 45 0.019520898 ubox
13 46 0.012136959 ubox
13 64 0.005090158 ubox
14 19 0.015110228 ubox
14 25 0.014763692 ubox
14 33 0.006213514 ubox
14 47 0.009194438 ubox
14 54 0.007037633 ubox
14 58 0.004943641 ubox
14 59 0.004724205 ubox
15 19 0.011421625 ubox
15 25 0.039931914 ubox
15 32 0.006662339 ubox
15 47 0.006851711 ubox
15 53 0.007325146 ubox
15 58 0.005066463 ubox
15 65 0.012882627 ubox
16 21 0.015664632 ubox
16 22 0.009552952 ubox
16 23 0.030481359 ubox
16 24 0.042359205 ubox
16 26 0.005518490 ubox
16 27 0.003289120 ubox
16 30 0.006615994 ubox
16 44 0.104351805 ubox
16 46 0.005367093 ubox
16 49 0.072228896 ubox
16 52 0.006936591 ubox
16 56 0.011071003 ubox
16 57 0.004377540 ubox
16 64 0.023149842 ubox
17 25 0.009871526 ubox
17 29 0.010576535 ubox
17 31 0.004525240 ubox
17 43 0.115188759 ubox
17 47 0.005984949 ubox
17 48 0.873339371 ubox
17 53 0.007192343 ubox
17 55 0.011669938 ubox
17 61 0.003373609 ubox
17 62 0.008392239 ubox
17 63 0.036793010 ubox
18 25 0.020787037 ubox
18 29 0.014752210 ubox
18 42 0.115062642 ubox
18 47 0.882441181 ubox
18 48 0.035369840 ubox
18 54 0.010518391 ubox
18 60 0.003324107 ubox
18 61 0.008458956 ubox
18 62 0.036633580 ubox
19 23 0.005832404 ubox
19 24 0.020910546 ubox
19 26 0.005320080 ubox
19 27 0.013868398 ubox
19 28 0.014788666 ubox
19 41 0.107953624 ubox
19 45 0.003165238 ubox
19 46 0.883899222 ubox
19 50 0.004708719 ubox
19 51 0.011133489 ubox
19 52 0.003561446 ubox
20 26 0.066336325 ubox
20 27 0.017191242 ubox
20 39 0.004828525 ubox
20 41 0.037849864 ubox
20 45 0.883208161 ubox
20 49 0.011585348 ubox
20 50 0.011649826 ubox
20 51 0.005317471 ubox
20 52 0.003620557 ubox
21 25 0.054227716 ubox
21 40 0.033743918 ubox
21 47 0.035908094 ubox
22 36 0.004992210 ubox
22 38 0.006016040 ubox
22 40 0.004918241 ubox
22 42 0.027517565 ubox
22 43 0.200139126 ubox
22 47 0.027864930 ubox
22 48 0.310051433 ubox
22 59 0.005388151 ubox
22 60 0.037158286 ubox
23 35 0.004719385 ubox
23 40 0.007573904 ubox
23 47 0.304701291 ubox
23 58 0.005663253 ubox
23 59 0.037161395 ubox
24 40 0.093387644 ubox
24 47 0.040551070 ubox
24 58 0.036728918 ubox
25 37 0.005137928 ubox
25 39 0.095183030 ubox
25 41 0.022708259 ubox
25 44 0.866277613 ubox
25 45 0.068314149 ubox
25 46 0.045065056 ubox
25 56 0.027399384 ubox
25 57 0.026052938 ubox
26 32 0.003706760 ubox
26 36 0.005536133 ubox
26 38 0.094856606 ubox
26 40 0.037950391 ubox
26 42 0.306599365 ubox
26 43 0.875113003 ubox
26 47 0.003256392 ubox
26 48 0.008429826 ubox
26 55 0.037775987 ubox
27 31 0.003725514 ubox
27 35 0.004740263 ubox
27 36 0.097412975 ubox
27 40 0.008193333 ubox
27 42 0.867463455 ubox
27 43 0.333084411 ubox
27 54 0.037849732 ubox
28 35 0.097752957 ubox
28 36 0.025080070 ubox
28 38 0.051585053 ubox
28 40 0.881658593 ubox
28 42 0.344625129 ubox
28 53 0.038005628 ubox
29 34 0.100351370 ubox
29 37 0.051657888 ubox
29 39 0.926610873 ubox
29 41 0.354966406 ubox
29 52 0.038052096 ubox
30 36 0.050096008 ubox
30 38 0.927367674 ubox
30 40 0.353474904 ubox
30 42 0.005101669 ubox
31 37 0.926662975 ubox
31 39 0.353380536 ubox
31 41 0.005151747 ubox
31 50 0.037181467 ubox
31 51 0.008041795 ubox
32 37 0.042734699 ubox
32 49 0.036528053 ubox
32 50 0.008040421 ubox
33 37 0.053609596 ubox
33 39 0.004899643 ubox
33 49 0.008254182 ubox
34 38 0.019386519 ubox
34 47 0.037196047 ubox
34 48 0.008632891 ubox
35 46 0.038945615 ubox
36 45 0.039005635 ubox
40 69 0.004359815 ubox
41 68 0.006102960 ubox
42 67 0.006028962 ubox
42 70 0.012798963 ubox
43 69 0.012834782 ubox
45 63 0.003949007 ubox
45 65 0.004618011 ubox
45 66 0.081924258 ubox
46 65 0.083143340 ubox
47 64 0.020725043 ubox
48 64 0.273708523 ubox
49 61 0.020908307 ubox
49 62 0.176392050 ubox
49 63 0.977243781 ubox
50 60 0.020990530 ubox
50 61 0.177644067 ubox
50 62 0.979029355 ubox
50 63 0.087564321 ubox
51 59 0.020773696 ubox
51 60 0.177975041 ubox
51 61 0.978981897 ubox
51 62 0.087590088 ubox
52 58 0.021930399 ubox
52 59 0.164897158 ubox
52 60 0.977905235 ubox
52 61 0.087436568 ubox
53 57 0.029395127 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
17 48 0.9500000 lbox
18 47 0.9500000 lbox
19 46 0.9500000 lbox
20 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
31 37 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
showpage
end
%%EOF
