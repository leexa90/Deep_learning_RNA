%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAGGACGUGCUAAUCUGCGAUAAGCGUCGGUAAGGUGAUAUGAACCGUUAUAACCGGCGAUUU\
) def
/coor [
[124.12825012 140.34671021]
[113.69139862 144.97305298]
[102.44713593 146.94721985]
[91.05855560 146.15278625]
[80.19728088 142.63662720]
[70.50381470 136.60606384]
[62.54981232 128.41676331]
[56.80433655 118.55165863]
[42.25386810 122.19636536]
[27.70339966 125.84106445]
[19.79436874 139.52400208]
[4.50517178 143.52600098]
[-9.09338188 135.47274780]
[-12.93351078 120.14208984]
[-4.73693466 106.62944794]
[10.63346291 102.95161438]
[24.05869675 111.29059601]
[38.60916519 107.64589691]
[53.15963364 104.00119019]
[55.49085236 84.86840820]
[65.30389404 68.27919769]
[80.94921875 57.02213287]
[99.79691315 52.98949051]
[118.67874908 56.85914230]
[134.42074585 67.98061371]
[146.89279175 59.64706039]
[159.36483765 51.31350708]
[171.83688354 42.97995377]
[184.30892944 34.64640045]
[196.78097534 26.31284714]
[209.25302124 17.97929382]
[211.38533020 -2.52744412]
[227.24177551 -15.27378178]
[247.18530273 -13.01023102]
[257.79190063 -23.61683273]
[268.39849854 -34.22343445]
[266.85543823 -49.78469849]
[275.71862793 -62.66794968]
[290.80310059 -66.79010773]
[304.98648071 -60.20481110]
[311.57177734 -46.02144241]
[307.44961548 -30.93695259]
[294.56637573 -22.07377625]
[279.00509644 -23.61683273]
[268.39849854 -13.01023102]
[257.79190063 -2.40362906]
[260.88937378 7.30050802]
[260.01196289 17.50894547]
[255.24894714 26.64789200]
[247.29217529 33.29078674]
[237.33586121 36.38091278]
[226.89750671 35.39931870]
[217.58657837 30.45133781]
[205.11453247 38.78489304]
[192.64248657 47.11844635]
[180.17044067 55.45199966]
[167.69839478 63.78555298]
[155.22634888 72.11910248]
[142.75430298 80.45265961]
[146.20544434 91.33477783]
[146.93173218 102.72789764]
[144.89035034 113.96015930]
[140.20166016 124.36914825]
] def
/pairs [
[8 19]
[9 18]
[10 17]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[34 46]
[35 45]
[36 44]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
