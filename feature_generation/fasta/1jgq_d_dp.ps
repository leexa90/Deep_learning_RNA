%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1jgq_d)
} def

/sequence { (\
UCCGUGAUAACAAAGCGGUUAUGUACCGGAUUUUUAUUCCGGCUAUCGGGGUUCAAUUCCCCGUCGCGGAGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.025325358 ubox
1 70 0.934628922 ubox
1 71 0.016193723 ubox
2 18 0.004687294 ubox
2 29 0.027722311 ubox
2 42 0.003855037 ubox
2 69 0.999217174 ubox
3 17 0.004739424 ubox
3 28 0.027727818 ubox
3 41 0.004972921 ubox
3 68 0.999498748 ubox
4 11 0.004120871 ubox
4 16 0.004846418 ubox
4 26 0.016088459 ubox
4 27 0.023197040 ubox
4 40 0.007559983 ubox
4 67 0.999473075 ubox
5 10 0.004095733 ubox
5 15 0.004761112 ubox
5 25 0.022243062 ubox
5 66 0.998794574 ubox
6 22 0.004020888 ubox
6 24 0.021594721 ubox
6 26 0.006099289 ubox
6 38 0.008887150 ubox
6 64 0.003536863 ubox
6 65 0.994676726 ubox
7 19 0.005104305 ubox
7 20 0.003700664 ubox
7 22 0.745791709 ubox
7 24 0.019709321 ubox
7 37 0.011939039 ubox
7 46 0.003770370 ubox
7 64 0.621361873 ubox
8 12 0.005861353 ubox
8 13 0.010995543 ubox
8 14 0.010058275 ubox
8 15 0.006691716 ubox
8 17 0.004951628 ubox
8 18 0.005920245 ubox
8 21 0.874754599 ubox
8 23 0.019556391 ubox
8 25 0.016405822 ubox
8 36 0.013608076 ubox
8 45 0.004680287 ubox
8 63 0.325873553 ubox
9 19 0.007651891 ubox
9 20 0.911532365 ubox
9 22 0.016292712 ubox
9 24 0.014104607 ubox
9 35 0.014029419 ubox
9 44 0.004654654 ubox
9 64 0.003297137 ubox
10 19 0.918740715 ubox
10 20 0.008257207 ubox
10 22 0.006231329 ubox
10 24 0.145450696 ubox
10 34 0.013530979 ubox
10 64 0.008843062 ubox
11 15 0.014180819 ubox
11 17 0.064078230 ubox
11 18 0.918056533 ubox
11 23 0.151793200 ubox
11 63 0.013429283 ubox
12 19 0.008049075 ubox
12 20 0.016702634 ubox
12 22 0.144610525 ubox
12 24 0.003263521 ubox
12 32 0.012434333 ubox
12 33 0.005211885 ubox
12 46 0.004876332 ubox
13 19 0.018686438 ubox
13 20 0.087070057 ubox
13 22 0.014267263 ubox
13 24 0.004033446 ubox
13 31 0.013300689 ubox
13 32 0.005581587 ubox
14 19 0.085433743 ubox
14 20 0.063341452 ubox
14 22 0.014285972 ubox
14 24 0.011435950 ubox
14 31 0.005475498 ubox
14 44 0.030788532 ubox
15 19 0.044953687 ubox
15 20 0.012394466 ubox
15 22 0.006044040 ubox
15 24 0.273679109 ubox
15 43 0.031893391 ubox
15 47 0.005394016 ubox
15 64 0.004451901 ubox
16 23 0.280788255 ubox
16 28 0.023966083 ubox
16 41 0.003448834 ubox
16 42 0.030320199 ubox
16 48 0.018793188 ubox
16 63 0.006054654 ubox
17 22 0.244610220 ubox
17 24 0.011037431 ubox
17 26 0.008723497 ubox
17 27 0.045054848 ubox
17 40 0.004280237 ubox
17 43 0.003851389 ubox
17 44 0.010118246 ubox
17 47 0.039996574 ubox
17 62 0.005677622 ubox
17 73 0.003681976 ubox
18 22 0.006033439 ubox
18 24 0.005236607 ubox
18 26 0.046459099 ubox
18 39 0.004277132 ubox
18 40 0.003367777 ubox
18 43 0.010625829 ubox
18 46 0.038829120 ubox
18 47 0.018501644 ubox
18 61 0.004498470 ubox
18 72 0.003696960 ubox
19 23 0.003176559 ubox
19 25 0.046352708 ubox
19 42 0.003580510 ubox
19 45 0.036700414 ubox
19 71 0.003682113 ubox
20 25 0.005530861 ubox
20 45 0.015292590 ubox
20 70 0.003401181 ubox
21 37 0.004001130 ubox
21 44 0.017421845 ubox
21 46 0.050560609 ubox
22 36 0.004039967 ubox
22 45 0.061985530 ubox
22 48 0.005365633 ubox
23 35 0.003941993 ubox
23 43 0.079347062 ubox
23 44 0.065100854 ubox
23 46 0.637612540 ubox
23 47 0.079401185 ubox
23 67 0.003475211 ubox
24 42 0.026581307 ubox
24 45 0.678610068 ubox
24 66 0.003347988 ubox
25 44 0.682362827 ubox
25 46 0.015249801 ubox
26 41 0.005221402 ubox
26 42 0.995498150 ubox
27 41 0.998455673 ubox
27 42 0.003502191 ubox
28 39 0.013709567 ubox
28 40 0.999081488 ubox
28 60 0.014351868 ubox
29 38 0.018407308 ubox
29 39 0.999024452 ubox
29 47 0.008677070 ubox
29 59 0.015445079 ubox
30 35 0.009542687 ubox
30 37 0.122088744 ubox
30 38 0.982909944 ubox
30 46 0.008674131 ubox
30 58 0.015181193 ubox
31 36 0.166964785 ubox
31 45 0.008497770 ubox
32 36 0.152649719 ubox
32 56 0.012390808 ubox
33 55 0.012876585 ubox
34 42 0.003218229 ubox
35 41 0.003166806 ubox
36 52 0.015782170 ubox
37 51 0.015906284 ubox
37 71 0.019756631 ubox
38 50 0.015932904 ubox
38 70 0.026097797 ubox
39 49 0.016064882 ubox
39 69 0.026785443 ubox
40 48 0.016187899 ubox
40 68 0.026765866 ubox
41 47 0.017229093 ubox
41 67 0.023668267 ubox
41 73 0.012519206 ubox
42 46 0.011264348 ubox
42 47 0.004463668 ubox
42 67 0.013999542 ubox
42 72 0.012713011 ubox
43 48 0.005584809 ubox
43 63 0.007391910 ubox
43 66 0.019168078 ubox
43 71 0.012753757 ubox
44 63 0.003600740 ubox
44 66 0.005441356 ubox
44 70 0.012540024 ubox
45 64 0.084294244 ubox
46 63 0.022751774 ubox
47 63 0.908833472 ubox
48 60 0.008068685 ubox
48 61 0.075386986 ubox
48 62 0.996170729 ubox
49 59 0.008094849 ubox
49 60 0.076473796 ubox
49 61 0.996352009 ubox
49 62 0.032855495 ubox
50 58 0.008026194 ubox
50 59 0.077316367 ubox
50 60 0.996281655 ubox
50 61 0.032984997 ubox
51 57 0.009641953 ubox
51 58 0.072273863 ubox
51 59 0.995175316 ubox
51 60 0.033036808 ubox
52 56 0.022433069 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
showpage
end
%%EOF
