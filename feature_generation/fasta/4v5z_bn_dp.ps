%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v5z_bn)
} def

/sequence { (\
GAAGCCCGGGGCGCCUGUGCGGGGCCCGAAGUCUCGGGCCCCCUCGAUGCUCGAGUGUCCGUAGCUCCCCCGGGCUCU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.005209447 ubox
1 77 0.691543328 ubox
1 78 0.082765126 ubox
2 76 0.489100463 ubox
2 78 0.051046100 ubox
3 76 0.838508751 ubox
3 78 0.006918077 ubox
4 75 0.999786473 ubox
4 77 0.003565659 ubox
5 74 0.999991089 ubox
6 73 0.999991178 ubox
7 72 0.999961435 ubox
8 68 0.006022691 ubox
8 69 0.005537332 ubox
8 70 0.157807444 ubox
8 71 0.987397141 ubox
9 67 0.006702011 ubox
9 68 0.006198608 ubox
9 69 0.223155499 ubox
9 70 0.974714530 ubox
10 51 0.004942483 ubox
10 59 0.004079300 ubox
10 66 0.010716827 ubox
10 67 0.006813893 ubox
10 68 0.273259418 ubox
10 69 0.961780891 ubox
10 70 0.003938188 ubox
11 18 0.011631639 ubox
11 20 0.091537184 ubox
11 50 0.020912603 ubox
11 52 0.016414048 ubox
11 58 0.008840027 ubox
11 62 0.005774687 ubox
11 65 0.035354828 ubox
11 66 0.005787259 ubox
11 67 0.315215602 ubox
11 68 0.941728529 ubox
11 69 0.004772698 ubox
12 17 0.024636820 ubox
12 19 0.095842994 ubox
12 21 0.102120627 ubox
12 46 0.009731590 ubox
12 49 0.023484614 ubox
12 57 0.024035041 ubox
12 61 0.017560946 ubox
12 64 0.046799194 ubox
13 18 0.062189791 ubox
13 20 0.253208713 ubox
13 45 0.009676546 ubox
13 48 0.022070653 ubox
13 50 0.107568485 ubox
13 52 0.003841799 ubox
13 56 0.023395723 ubox
13 58 0.004756465 ubox
13 60 0.015022427 ubox
13 62 0.019222519 ubox
13 65 0.797725000 ubox
13 66 0.204595716 ubox
13 67 0.312488830 ubox
13 68 0.005041476 ubox
14 19 0.252258987 ubox
14 46 0.008561549 ubox
14 49 0.107394263 ubox
14 55 0.023238717 ubox
14 57 0.005406868 ubox
14 61 0.020244230 ubox
14 64 0.765365829 ubox
15 19 0.016239152 ubox
15 21 0.005413124 ubox
15 46 0.024212930 ubox
15 49 0.007990892 ubox
15 53 0.005005826 ubox
15 55 0.006647371 ubox
15 57 0.010353405 ubox
15 61 0.079771239 ubox
15 64 0.420516511 ubox
16 46 0.098342198 ubox
16 47 0.045639010 ubox
16 53 0.021231702 ubox
16 54 0.006036106 ubox
16 61 0.365676979 ubox
16 63 0.469623594 ubox
16 64 0.032630691 ubox
17 43 0.010320031 ubox
17 44 0.010906444 ubox
17 45 0.145147556 ubox
17 48 0.012732124 ubox
17 50 0.006304779 ubox
17 52 0.025609061 ubox
17 58 0.006502437 ubox
17 59 0.063844794 ubox
17 60 0.404104749 ubox
17 62 0.434779102 ubox
17 65 0.111127598 ubox
17 66 0.017181282 ubox
17 67 0.074583931 ubox
18 46 0.022749353 ubox
18 47 0.013357769 ubox
18 49 0.006247662 ubox
18 57 0.020843292 ubox
18 61 0.339376841 ubox
18 63 0.578082186 ubox
18 64 0.063327497 ubox
19 43 0.170104214 ubox
19 44 0.030845779 ubox
19 45 0.035719546 ubox
19 48 0.004532626 ubox
19 50 0.027827302 ubox
19 56 0.025108481 ubox
19 58 0.472343467 ubox
19 59 0.105957866 ubox
19 60 0.341965149 ubox
19 62 0.602215178 ubox
19 65 0.092008150 ubox
20 46 0.007568744 ubox
20 49 0.027848910 ubox
20 55 0.024128441 ubox
20 57 0.490619432 ubox
20 61 0.605753678 ubox
20 64 0.092005989 ubox
21 41 0.005755969 ubox
21 42 0.916211756 ubox
21 43 0.035716107 ubox
21 45 0.003766900 ubox
21 48 0.003929030 ubox
21 56 0.036678723 ubox
21 58 0.007046434 ubox
21 59 0.034294097 ubox
21 60 0.376792004 ubox
22 40 0.004908026 ubox
22 41 0.958970111 ubox
22 42 0.036395001 ubox
22 58 0.003603758 ubox
22 59 0.280201175 ubox
23 39 0.003587047 ubox
23 40 0.998903508 ubox
23 41 0.033800222 ubox
23 58 0.024910340 ubox
24 39 0.999685804 ubox
24 40 0.023948188 ubox
24 56 0.003607216 ubox
25 38 0.999982536 ubox
25 55 0.003760267 ubox
26 37 0.999981850 ubox
27 36 0.999964892 ubox
27 53 0.004873357 ubox
28 33 0.004439954 ubox
28 35 0.998867914 ubox
28 52 0.004880423 ubox
29 34 0.934214493 ubox
29 51 0.003457508 ubox
30 34 0.022390045 ubox
30 51 0.003447001 ubox
31 50 0.004873064 ubox
32 49 0.004787902 ubox
34 47 0.004829413 ubox
35 46 0.004886479 ubox
36 45 0.004877659 ubox
37 44 0.004579531 ubox
38 43 0.004506398 ubox
40 57 0.003623914 ubox
41 57 0.127353433 ubox
42 46 0.003292939 ubox
42 55 0.015488032 ubox
42 57 0.201095965 ubox
42 64 0.004593471 ubox
43 49 0.010047010 ubox
43 55 0.942350081 ubox
43 57 0.010277712 ubox
43 61 0.010882107 ubox
43 64 0.023673197 ubox
44 54 0.950104728 ubox
44 61 0.011889601 ubox
44 63 0.024825459 ubox
45 53 0.951092507 ubox
45 61 0.037851074 ubox
46 50 0.005255776 ubox
46 51 0.005026330 ubox
46 52 0.950002715 ubox
46 59 0.164808818 ubox
46 60 0.029183739 ubox
46 66 0.003182973 ubox
46 67 0.177034762 ubox
46 68 0.024231303 ubox
47 51 0.826529351 ubox
47 56 0.004126490 ubox
47 58 0.167533638 ubox
47 62 0.009425168 ubox
47 66 0.175192477 ubox
48 55 0.004174245 ubox
48 57 0.166946394 ubox
48 61 0.009620779 ubox
48 63 0.008082933 ubox
49 56 0.166533140 ubox
49 58 0.015840178 ubox
49 60 0.009610953 ubox
49 62 0.008905960 ubox
49 65 0.221126488 ubox
50 55 0.166429615 ubox
50 57 0.016896239 ubox
50 61 0.008865220 ubox
50 64 0.221304816 ubox
51 63 0.218238462 ubox
52 57 0.009643732 ubox
52 61 0.220466107 ubox
53 59 0.021486302 ubox
53 60 0.218314512 ubox
53 62 0.007396879 ubox
53 67 0.129268268 ubox
54 58 0.023112336 ubox
54 66 0.130136565 ubox
55 59 0.042754341 ubox
55 60 0.017709782 ubox
55 65 0.130885043 ubox
55 67 0.011082959 ubox
56 61 0.012415512 ubox
56 63 0.030133565 ubox
56 64 0.129892048 ubox
57 62 0.028243929 ubox
57 65 0.090387559 ubox
57 66 0.006411295 ubox
57 67 0.016692765 ubox
58 63 0.012587758 ubox
58 64 0.086870011 ubox
59 64 0.022869165 ubox
60 64 0.011467817 ubox
61 65 0.015232616 ubox
61 66 0.005732914 ubox
61 67 0.033241143 ubox
61 68 0.008591250 ubox
64 68 0.003556987 ubox
3 76 0.9500000 lbox
4 75 0.9500000 lbox
5 74 0.9500000 lbox
6 73 0.9500000 lbox
7 72 0.9500000 lbox
8 71 0.9500000 lbox
9 70 0.9500000 lbox
10 69 0.9500000 lbox
11 68 0.9500000 lbox
13 65 0.9500000 lbox
14 64 0.9500000 lbox
18 63 0.9500000 lbox
19 62 0.9500000 lbox
20 61 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
46 52 0.9500000 lbox
47 51 0.9500000 lbox
showpage
end
%%EOF
