%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3j7r_s5)
} def

/sequence { (\
CCCGGAUAGCUCAGGGUAGAGCAGGGGAUUGAAAAUCCCCGUGUCCUUGGUUCGAUUCCGAGUCCGGGCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.006688085 ubox
1 15 0.006707120 ubox
1 16 0.070420093 ubox
1 67 0.009172831 ubox
1 68 0.958599938 ubox
2 14 0.006717399 ubox
2 15 0.071166770 ubox
2 16 0.004599491 ubox
2 66 0.006709417 ubox
2 67 0.972022405 ubox
2 68 0.006000205 ubox
3 14 0.070961211 ubox
3 15 0.004615197 ubox
3 54 0.004472739 ubox
3 60 0.005344872 ubox
3 66 0.972097152 ubox
3 67 0.004637167 ubox
4 10 0.004016706 ubox
4 11 0.010400608 ubox
4 12 0.017434313 ubox
4 46 0.018187357 ubox
4 53 0.004523178 ubox
4 59 0.005535623 ubox
4 65 0.972007658 ubox
4 72 0.033544130 ubox
5 10 0.012652503 ubox
5 11 0.014752267 ubox
5 12 0.061415307 ubox
5 45 0.018882056 ubox
5 52 0.004336381 ubox
5 58 0.005565454 ubox
5 64 0.971887614 ubox
5 71 0.023025736 ubox
5 72 0.022514506 ubox
6 11 0.056634853 ubox
6 44 0.019462997 ubox
6 51 0.004244751 ubox
6 56 0.004668067 ubox
6 57 0.005320075 ubox
6 63 0.945523262 ubox
7 18 0.018182433 ubox
7 23 0.047619009 ubox
7 41 0.003279826 ubox
7 43 0.019647781 ubox
7 50 0.003566932 ubox
7 54 0.012143798 ubox
7 55 0.008905494 ubox
7 60 0.005952444 ubox
7 61 0.018585308 ubox
7 62 0.819147936 ubox
8 17 0.019722976 ubox
8 42 0.018049766 ubox
8 51 0.023735118 ubox
8 52 0.376379397 ubox
8 56 0.012800521 ubox
8 57 0.015046764 ubox
8 63 0.006880897 ubox
9 17 0.022977693 ubox
9 22 0.571757198 ubox
9 51 0.633312663 ubox
9 52 0.026701041 ubox
9 53 0.012265156 ubox
9 56 0.011946997 ubox
9 58 0.013542943 ubox
9 59 0.030021080 ubox
9 63 0.086634664 ubox
9 69 0.005680466 ubox
10 15 0.020349495 ubox
10 16 0.023531581 ubox
10 19 0.006053636 ubox
10 21 0.573011778 ubox
10 49 0.008122353 ubox
10 50 0.649804501 ubox
10 54 0.017608519 ubox
10 60 0.036521335 ubox
10 62 0.118343658 ubox
10 68 0.005682367 ubox
11 15 0.021205673 ubox
11 18 0.005747315 ubox
11 20 0.573045323 ubox
11 49 0.135043790 ubox
11 50 0.375990969 ubox
11 55 0.011839231 ubox
11 61 0.121038078 ubox
11 67 0.005620951 ubox
12 19 0.572543393 ubox
12 49 0.793841328 ubox
12 50 0.008498368 ubox
12 54 0.011641014 ubox
12 60 0.120245702 ubox
12 66 0.005528466 ubox
13 17 0.028442356 ubox
13 47 0.089877641 ubox
13 48 0.799846867 ubox
13 52 0.004573923 ubox
14 46 0.092638083 ubox
14 47 0.800453342 ubox
14 48 0.005036914 ubox
14 51 0.004742304 ubox
14 52 0.007990709 ubox
14 53 0.008511895 ubox
14 58 0.087148313 ubox
14 59 0.078622225 ubox
14 65 0.003795819 ubox
15 45 0.092305368 ubox
15 46 0.801274032 ubox
15 47 0.006618765 ubox
15 51 0.008637460 ubox
15 52 0.008311506 ubox
15 57 0.086943951 ubox
15 58 0.078608862 ubox
15 59 0.008963970 ubox
15 64 0.003792523 ubox
16 22 0.004069438 ubox
16 44 0.053445951 ubox
16 45 0.799994068 ubox
16 46 0.007445753 ubox
16 51 0.007509123 ubox
16 56 0.088341455 ubox
16 57 0.071834421 ubox
16 58 0.009083820 ubox
17 21 0.003902993 ubox
17 43 0.056178313 ubox
17 49 0.011620074 ubox
17 50 0.003873709 ubox
17 54 0.003796457 ubox
17 55 0.087060302 ubox
18 42 0.029283712 ubox
18 44 0.183117085 ubox
18 47 0.035227946 ubox
18 48 0.010026463 ubox
18 56 0.004316299 ubox
19 42 0.056439988 ubox
19 44 0.057887713 ubox
19 45 0.045606892 ubox
19 46 0.037471903 ubox
19 47 0.006759268 ubox
19 48 0.009263517 ubox
19 52 0.013701516 ubox
19 53 0.110835571 ubox
19 72 0.003848869 ubox
20 42 0.100724685 ubox
20 44 0.065593461 ubox
20 47 0.009449658 ubox
20 51 0.015064680 ubox
20 52 0.110992801 ubox
21 40 0.010971260 ubox
21 42 0.544805808 ubox
21 44 0.553205202 ubox
21 45 0.012677763 ubox
21 46 0.008339009 ubox
21 51 0.101370695 ubox
22 41 0.550993128 ubox
22 43 0.560066948 ubox
22 49 0.026345982 ubox
22 50 0.097818017 ubox
23 42 0.540307280 ubox
23 44 0.010787489 ubox
23 47 0.010437971 ubox
23 48 0.033148078 ubox
24 39 0.011944438 ubox
24 40 0.993903291 ubox
24 46 0.009414360 ubox
24 47 0.015588697 ubox
24 48 0.057730630 ubox
25 38 0.011278215 ubox
25 39 0.995136834 ubox
25 40 0.050335540 ubox
25 45 0.008589637 ubox
25 46 0.014883565 ubox
25 47 0.073191294 ubox
25 59 0.035580442 ubox
26 37 0.010545953 ubox
26 38 0.995384892 ubox
26 39 0.045716730 ubox
26 44 0.007588822 ubox
26 45 0.014388996 ubox
26 46 0.073652403 ubox
26 58 0.035637950 ubox
27 36 0.008750347 ubox
27 37 0.995611246 ubox
27 38 0.040533022 ubox
27 44 0.012411306 ubox
27 45 0.073723906 ubox
27 57 0.035637489 ubox
28 36 0.994118801 ubox
28 42 0.009248017 ubox
28 44 0.073683348 ubox
28 56 0.035695322 ubox
29 33 0.007639144 ubox
29 34 0.027235587 ubox
29 35 0.977270221 ubox
29 41 0.008551712 ubox
29 43 0.071009945 ubox
29 55 0.035728851 ubox
30 34 0.813926325 ubox
30 35 0.083234539 ubox
30 41 0.047601237 ubox
30 54 0.035715175 ubox
31 37 0.009586640 ubox
31 38 0.006797984 ubox
31 39 0.013601597 ubox
31 40 0.058809254 ubox
31 53 0.035744582 ubox
32 36 0.008442192 ubox
32 52 0.035590116 ubox
33 51 0.034830928 ubox
35 42 0.003468935 ubox
36 41 0.003259499 ubox
37 50 0.008827909 ubox
38 49 0.008797655 ubox
38 50 0.006727974 ubox
39 49 0.006382970 ubox
39 50 0.033597685 ubox
40 49 0.034082107 ubox
40 60 0.005089305 ubox
41 45 0.033454522 ubox
41 46 0.044309655 ubox
41 47 0.005720854 ubox
41 48 0.033532672 ubox
41 53 0.003855123 ubox
41 58 0.035008727 ubox
41 59 0.015103435 ubox
41 71 0.231010431 ubox
41 72 0.017652493 ubox
42 49 0.010078008 ubox
42 50 0.005265118 ubox
42 54 0.003905865 ubox
42 60 0.003361840 ubox
42 70 0.232848417 ubox
43 47 0.003310509 ubox
43 48 0.013030133 ubox
43 51 0.004987128 ubox
43 53 0.005247492 ubox
43 56 0.044339809 ubox
43 59 0.004142247 ubox
43 63 0.005757235 ubox
43 64 0.003337067 ubox
43 69 0.233363305 ubox
43 71 0.013323227 ubox
44 49 0.004408168 ubox
44 50 0.012524587 ubox
44 55 0.046259366 ubox
44 61 0.013222062 ubox
44 68 0.222558736 ubox
44 70 0.013232820 ubox
45 49 0.018365182 ubox
45 50 0.010933228 ubox
45 54 0.046413547 ubox
45 60 0.013904845 ubox
45 62 0.016327286 ubox
45 67 0.222237025 ubox
45 68 0.068969288 ubox
46 50 0.007608247 ubox
46 54 0.004336722 ubox
46 60 0.006589091 ubox
46 62 0.449189260 ubox
46 66 0.219057922 ubox
46 67 0.069245942 ubox
46 68 0.019693598 ubox
47 55 0.007799020 ubox
47 60 0.004345180 ubox
47 61 0.501844491 ubox
47 62 0.003431253 ubox
47 66 0.053024430 ubox
47 67 0.022954685 ubox
48 54 0.008647505 ubox
48 55 0.003336576 ubox
48 60 0.507607580 ubox
48 61 0.008739848 ubox
48 66 0.057708754 ubox
48 73 0.003994413 ubox
49 53 0.008815299 ubox
49 58 0.012827782 ubox
49 59 0.512099961 ubox
49 63 0.006409983 ubox
49 64 0.081459985 ubox
49 65 0.216178614 ubox
49 72 0.005078774 ubox
50 56 0.005594245 ubox
50 57 0.013676555 ubox
50 58 0.511601617 ubox
50 59 0.012351894 ubox
50 63 0.079329645 ubox
50 64 0.217146703 ubox
50 71 0.005072581 ubox
51 55 0.011815378 ubox
51 61 0.019826479 ubox
51 62 0.260726671 ubox
51 70 0.004867936 ubox
52 60 0.007718926 ubox
52 61 0.719985563 ubox
52 62 0.003633042 ubox
53 60 0.781644226 ubox
53 62 0.012325212 ubox
54 58 0.016752581 ubox
54 59 0.772028014 ubox
54 64 0.003271300 ubox
55 63 0.004264161 ubox
56 61 0.005668151 ubox
56 62 0.004540504 ubox
57 61 0.005665916 ubox
57 68 0.005674188 ubox
58 67 0.007321225 ubox
59 66 0.007332315 ubox
60 65 0.007247403 ubox
66 72 0.003410477 ubox
67 71 0.003375565 ubox
68 72 0.006306395 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
showpage
end
%%EOF
