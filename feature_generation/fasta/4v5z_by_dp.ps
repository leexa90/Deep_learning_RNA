%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v5z_by)
} def

/sequence { (\
UCUACGGCAUACCACCCUGAACGCGCCCGAUCUCGUCUGAUCUCGGAAGCUAAGCAGGGUCGGGCCUGGAGAGUACUUGGUGGGAGACCGCCUGGGAAUACCGGGUCUGUAGUUU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003957006 ubox
1 7 0.011523178 ubox
1 9 0.009744248 ubox
1 70 0.030477181 ubox
1 72 0.006941844 ubox
1 111 0.005013853 ubox
1 112 0.008820760 ubox
2 6 0.015897880 ubox
2 7 0.041815032 ubox
2 69 0.034575685 ubox
2 71 0.007571056 ubox
2 109 0.004131821 ubox
2 112 0.883974812 ubox
3 9 0.004253648 ubox
3 11 0.009884331 ubox
3 68 0.034559574 ubox
3 70 0.006275604 ubox
3 111 0.894150699 ubox
3 112 0.007986933 ubox
4 10 0.010072427 ubox
4 67 0.034178679 ubox
4 110 0.894027835 ubox
4 113 0.074540973 ubox
4 114 0.005741891 ubox
4 115 0.005003888 ubox
5 62 0.008561574 ubox
5 68 0.006810760 ubox
5 90 0.009347184 ubox
5 109 0.887881923 ubox
5 112 0.080504353 ubox
6 10 0.005369542 ubox
6 12 0.080845364 ubox
6 13 0.560838550 ubox
6 15 0.003280127 ubox
6 61 0.013148943 ubox
6 66 0.040334874 ubox
6 67 0.003388117 ubox
6 89 0.021097504 ubox
6 107 0.037162899 ubox
6 108 0.741913514 ubox
6 114 0.062118392 ubox
6 115 0.004832102 ubox
7 12 0.558067421 ubox
7 13 0.024852530 ubox
7 60 0.007707125 ubox
7 61 0.011301997 ubox
7 65 0.040536940 ubox
7 66 0.003236283 ubox
7 88 0.021125855 ubox
7 106 0.021814338 ubox
7 107 0.720484589 ubox
7 108 0.006502926 ubox
7 110 0.044987048 ubox
7 113 0.076602610 ubox
7 114 0.005057976 ubox
8 59 0.004775374 ubox
8 62 0.004752031 ubox
8 63 0.009802502 ubox
8 64 0.041760161 ubox
8 68 0.007206276 ubox
8 86 0.012232093 ubox
8 105 0.035158800 ubox
8 109 0.046725203 ubox
8 112 0.077618813 ubox
9 67 0.007041107 ubox
9 106 0.049670813 ubox
9 108 0.037403581 ubox
9 110 0.011262755 ubox
9 113 0.007119655 ubox
9 115 0.004618951 ubox
10 62 0.006180734 ubox
10 63 0.006038161 ubox
10 64 0.009765619 ubox
10 84 0.003463096 ubox
10 85 0.010956726 ubox
10 105 0.021136127 ubox
10 109 0.009893429 ubox
10 111 0.043711768 ubox
10 112 0.007140806 ubox
11 60 0.003376610 ubox
11 81 0.004736848 ubox
11 106 0.009399029 ubox
11 108 0.008014623 ubox
11 110 0.043779836 ubox
11 113 0.017391840 ubox
12 62 0.132075318 ubox
12 63 0.732617406 ubox
12 64 0.039825008 ubox
12 80 0.004940999 ubox
12 83 0.030768285 ubox
12 104 0.003289068 ubox
12 105 0.006252464 ubox
12 109 0.040634061 ubox
12 112 0.018658123 ubox
13 62 0.737065682 ubox
13 63 0.041468483 ubox
13 79 0.004943652 ubox
13 82 0.030887922 ubox
13 103 0.003290444 ubox
13 104 0.006148077 ubox
13 109 0.004413648 ubox
13 112 0.009790958 ubox
14 60 0.967705718 ubox
14 78 0.004675767 ubox
14 81 0.030902438 ubox
14 106 0.008909470 ubox
15 59 0.999144277 ubox
15 80 0.030903052 ubox
15 105 0.009005755 ubox
16 58 0.999439649 ubox
16 79 0.030876547 ubox
16 104 0.009005007 ubox
17 57 0.999437174 ubox
17 71 0.004466630 ubox
17 73 0.025381866 ubox
17 103 0.008956045 ubox
18 56 0.999136462 ubox
18 70 0.004354647 ubox
18 72 0.025253080 ubox
18 75 0.004522515 ubox
19 55 0.998437465 ubox
19 74 0.004541350 ubox
19 76 0.015043583 ubox
20 51 0.016018400 ubox
21 51 0.101250647 ubox
21 74 0.014785862 ubox
22 49 0.010883115 ubox
22 54 0.043879068 ubox
22 68 0.026969990 ubox
22 73 0.014904712 ubox
23 50 0.984850118 ubox
23 51 0.049767012 ubox
23 55 0.006553955 ubox
23 66 0.009259615 ubox
23 67 0.026253684 ubox
24 45 0.005935210 ubox
24 49 0.986037984 ubox
24 54 0.007374595 ubox
24 69 0.003603765 ubox
24 71 0.011314155 ubox
25 44 0.006828640 ubox
25 50 0.146418220 ubox
25 65 0.033002600 ubox
26 45 0.019038336 ubox
26 46 0.232456413 ubox
26 49 0.145930221 ubox
26 64 0.033066088 ubox
27 45 0.232055809 ubox
27 46 0.969000261 ubox
27 63 0.033068033 ubox
28 45 0.970017435 ubox
28 46 0.009936995 ubox
28 62 0.033068269 ubox
29 42 0.420298793 ubox
29 43 0.011630670 ubox
29 44 0.905448987 ubox
29 61 0.033067870 ubox
30 41 0.481394550 ubox
30 43 0.862629813 ubox
30 60 0.033054461 ubox
31 39 0.005135950 ubox
31 40 0.663693741 ubox
31 59 0.032714634 ubox
32 39 0.674483868 ubox
32 58 0.032643860 ubox
32 59 0.004412965 ubox
33 39 0.008034816 ubox
33 40 0.722518248 ubox
33 57 0.031205448 ubox
33 58 0.004438591 ubox
34 39 0.725914369 ubox
34 45 0.003340486 ubox
34 49 0.012002206 ubox
34 57 0.007384987 ubox
35 41 0.008464694 ubox
35 42 0.033099597 ubox
35 44 0.003408015 ubox
35 55 0.024267991 ubox
36 40 0.008328470 ubox
36 47 0.022776948 ubox
36 54 0.015894458 ubox
37 46 0.026271505 ubox
37 49 0.004641218 ubox
37 54 0.016089181 ubox
37 57 0.003378369 ubox
38 45 0.026241348 ubox
38 48 0.004586528 ubox
38 52 0.006870309 ubox
38 53 0.016040688 ubox
38 56 0.003663428 ubox
39 44 0.026016968 ubox
39 51 0.006558484 ubox
39 55 0.003655003 ubox
40 51 0.005103951 ubox
41 47 0.003964922 ubox
42 46 0.004038715 ubox
42 49 0.014665371 ubox
43 48 0.013617167 ubox
44 49 0.004488427 ubox
49 55 0.010999706 ubox
50 54 0.010972599 ubox
59 110 0.004663528 ubox
60 111 0.034838332 ubox
60 112 0.006339648 ubox
61 109 0.438600399 ubox
61 112 0.006677107 ubox
62 77 0.003705345 ubox
62 107 0.014906638 ubox
62 108 0.635356780 ubox
63 76 0.004056882 ubox
63 106 0.011685448 ubox
63 107 0.668669328 ubox
63 108 0.014838999 ubox
64 74 0.004392451 ubox
64 81 0.043748332 ubox
64 106 0.974728747 ubox
64 107 0.033159243 ubox
65 73 0.004236775 ubox
65 80 0.045288569 ubox
65 83 0.004204840 ubox
65 84 0.003667764 ubox
65 104 0.011472708 ubox
65 105 0.996425558 ubox
66 73 0.008248283 ubox
66 79 0.045271793 ubox
66 82 0.004241331 ubox
66 83 0.003675196 ubox
66 103 0.011383470 ubox
66 104 0.997366089 ubox
67 72 0.008471531 ubox
67 80 0.009022170 ubox
67 82 0.003429213 ubox
67 103 0.996623777 ubox
68 76 0.010098232 ubox
68 77 0.037096181 ubox
68 101 0.003634637 ubox
68 102 0.997344395 ubox
69 76 0.039103650 ubox
69 78 0.023823831 ubox
69 101 0.995890398 ubox
69 102 0.007289487 ubox
70 74 0.004423053 ubox
70 77 0.026809886 ubox
70 99 0.226939545 ubox
70 108 0.004392398 ubox
70 110 0.004929601 ubox
70 115 0.010839462 ubox
71 76 0.026944389 ubox
71 78 0.003507367 ubox
71 99 0.162848843 ubox
71 101 0.012635838 ubox
71 102 0.004360678 ubox
71 107 0.004686336 ubox
71 114 0.025314318 ubox
72 77 0.003471888 ubox
72 99 0.498276407 ubox
72 106 0.004221337 ubox
72 108 0.009863911 ubox
72 113 0.026514683 ubox
73 88 0.004411559 ubox
73 99 0.353493432 ubox
73 101 0.018970303 ubox
73 107 0.010087339 ubox
74 87 0.004414563 ubox
74 94 0.016514393 ubox
74 95 0.035487820 ubox
74 96 0.124222933 ubox
74 97 0.230377114 ubox
74 98 0.351724513 ubox
74 100 0.034867073 ubox
74 111 0.027127913 ubox
75 93 0.016380471 ubox
75 99 0.033517683 ubox
75 106 0.009598531 ubox
75 110 0.027270185 ubox
75 113 0.003910692 ubox
76 86 0.005033279 ubox
76 94 0.140745396 ubox
76 95 0.911282412 ubox
76 96 0.326441602 ubox
76 104 0.003694199 ubox
76 105 0.009814451 ubox
76 109 0.027214186 ubox
76 112 0.004204842 ubox
77 85 0.005048079 ubox
77 94 0.861660709 ubox
77 95 0.324314528 ubox
77 96 0.005940227 ubox
77 97 0.007708024 ubox
77 104 0.009714223 ubox
77 111 0.003953119 ubox
78 84 0.005003035 ubox
78 90 0.009636332 ubox
78 94 0.256892035 ubox
78 95 0.006441668 ubox
78 96 0.007793148 ubox
78 103 0.009139609 ubox
79 89 0.034304598 ubox
79 92 0.996393376 ubox
79 93 0.035340219 ubox
79 102 0.008547438 ubox
79 107 0.004229940 ubox
80 88 0.034339667 ubox
80 91 0.997324464 ubox
80 92 0.025439269 ubox
80 101 0.008544322 ubox
80 107 0.003238059 ubox
81 87 0.034160656 ubox
81 90 0.997258750 ubox
81 100 0.008520311 ubox
82 88 0.003451655 ubox
82 89 0.998705324 ubox
82 91 0.003346874 ubox
82 99 0.008235728 ubox
83 88 0.998074317 ubox
83 89 0.011917112 ubox
84 88 0.013757685 ubox
84 89 0.006589471 ubox
85 108 0.004188665 ubox
86 107 0.004335483 ubox
87 106 0.003693619 ubox
88 95 0.007045032 ubox
88 96 0.004386593 ubox
89 94 0.007037996 ubox
89 95 0.004391095 ubox
90 106 0.062362202 ubox
90 107 0.010631379 ubox
91 105 0.067591155 ubox
92 104 0.068054976 ubox
93 100 0.003630786 ubox
93 103 0.068884437 ubox
93 104 0.003513218 ubox
94 99 0.003864201 ubox
94 102 0.069991655 ubox
95 101 0.069979914 ubox
95 102 0.006089276 ubox
96 101 0.006255850 ubox
2 112 0.9500000 lbox
3 111 0.9500000 lbox
4 110 0.9500000 lbox
5 109 0.9500000 lbox
6 108 0.9500000 lbox
7 107 0.9500000 lbox
12 63 0.9500000 lbox
13 62 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
23 50 0.9500000 lbox
24 49 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
64 106 0.9500000 lbox
65 105 0.9500000 lbox
66 104 0.9500000 lbox
67 103 0.9500000 lbox
68 102 0.9500000 lbox
69 101 0.9500000 lbox
76 95 0.9500000 lbox
77 94 0.9500000 lbox
79 92 0.9500000 lbox
80 91 0.9500000 lbox
81 90 0.9500000 lbox
82 89 0.9500000 lbox
83 88 0.9500000 lbox
showpage
end
%%EOF
