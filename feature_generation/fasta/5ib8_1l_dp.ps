%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:51 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5ib8_1l)
} def

/sequence { (\
GGGUCGUUAGCUCAGUUGGUAGAGCAGUUGACUUUUAAUCAAUUGGUCGCAGGUUCGAAUCCUGCACGACCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 34 0.003838700 ubox
1 72 0.999211805 ubox
2 33 0.005677283 ubox
2 71 0.999965041 ubox
2 72 0.003499694 ubox
3 32 0.005876507 ubox
3 70 0.999967962 ubox
4 31 0.005879395 ubox
4 69 0.999852736 ubox
5 30 0.005880062 ubox
5 68 0.999942718 ubox
6 11 0.005140714 ubox
6 13 0.006300829 ubox
6 20 0.010256113 ubox
6 29 0.005877475 ubox
6 32 0.010010548 ubox
6 67 0.996692104 ubox
7 14 0.003595159 ubox
7 15 0.005022168 ubox
7 18 0.005836909 ubox
7 19 0.119207653 ubox
7 21 0.011277616 ubox
7 22 0.019543123 ubox
7 23 0.004213057 ubox
7 27 0.014443276 ubox
7 31 0.010218914 ubox
7 66 0.924912540 ubox
8 14 0.011776877 ubox
8 15 0.011757849 ubox
8 18 0.326714800 ubox
8 19 0.014016445 ubox
8 21 0.537096502 ubox
8 22 0.007610735 ubox
8 26 0.037625313 ubox
8 27 0.016256329 ubox
8 30 0.010676413 ubox
8 64 0.013328585 ubox
8 66 0.039028296 ubox
9 16 0.018094088 ubox
9 17 0.345998584 ubox
9 20 0.556919684 ubox
9 28 0.006075086 ubox
9 29 0.015965141 ubox
9 33 0.007509342 ubox
9 47 0.010602079 ubox
9 63 0.013485739 ubox
10 16 0.351651361 ubox
10 17 0.009326297 ubox
10 20 0.406777498 ubox
10 25 0.353227540 ubox
10 28 0.015356667 ubox
10 32 0.008125763 ubox
10 47 0.244507293 ubox
10 48 0.181079727 ubox
10 62 0.013426735 ubox
10 65 0.012262507 ubox
11 15 0.350100465 ubox
11 18 0.569294661 ubox
11 19 0.417588587 ubox
11 22 0.010467235 ubox
11 24 0.367022416 ubox
11 27 0.015428006 ubox
11 46 0.260888405 ubox
11 49 0.003183784 ubox
11 64 0.011857984 ubox
12 18 0.366287874 ubox
12 19 0.091200009 ubox
12 21 0.016994807 ubox
12 23 0.367139793 ubox
12 26 0.014316995 ubox
12 31 0.010639992 ubox
12 45 0.041717284 ubox
12 46 0.237381432 ubox
12 58 0.011840906 ubox
13 18 0.199108561 ubox
13 19 0.033216370 ubox
13 22 0.367120838 ubox
13 24 0.004065858 ubox
13 30 0.011057132 ubox
13 45 0.380457054 ubox
13 46 0.004193100 ubox
13 57 0.011909897 ubox
14 20 0.058861753 ubox
14 29 0.011223553 ubox
14 44 0.382399765 ubox
14 54 0.005320083 ubox
14 55 0.005298972 ubox
15 20 0.020815336 ubox
15 25 0.015643409 ubox
15 28 0.010548185 ubox
15 43 0.382607775 ubox
15 54 0.004870150 ubox
15 55 0.003527195 ubox
15 56 0.004228118 ubox
15 60 0.005819864 ubox
16 21 0.021826611 ubox
16 23 0.003382156 ubox
16 24 0.015743538 ubox
16 27 0.010878598 ubox
16 42 0.382765417 ubox
16 52 0.006853131 ubox
16 53 0.004408176 ubox
16 58 0.008212914 ubox
16 59 0.005913215 ubox
17 21 0.008491315 ubox
17 22 0.003713473 ubox
17 23 0.015599575 ubox
17 26 0.011869066 ubox
17 41 0.382791927 ubox
17 51 0.006948678 ubox
17 52 0.004095605 ubox
17 53 0.003208062 ubox
17 57 0.008403527 ubox
17 58 0.005730633 ubox
18 25 0.011967305 ubox
18 40 0.382954921 ubox
18 50 0.006626401 ubox
18 56 0.008562668 ubox
19 36 0.003592642 ubox
19 39 0.380225765 ubox
19 48 0.005452485 ubox
19 50 0.009712500 ubox
19 55 0.007948881 ubox
19 56 0.005471006 ubox
20 37 0.120723281 ubox
20 38 0.349269521 ubox
20 49 0.009399869 ubox
21 33 0.013269537 ubox
21 34 0.008138478 ubox
21 35 0.259280016 ubox
21 36 0.163327524 ubox
22 29 0.003404369 ubox
22 32 0.013370714 ubox
22 33 0.007198449 ubox
22 34 0.309188463 ubox
22 35 0.158356298 ubox
22 36 0.138968124 ubox
22 48 0.844784738 ubox
22 56 0.004515009 ubox
23 28 0.003751828 ubox
23 33 0.314316773 ubox
23 34 0.150330804 ubox
23 35 0.141978846 ubox
23 36 0.043507244 ubox
23 47 0.844207004 ubox
23 55 0.004534216 ubox
24 29 0.004637307 ubox
24 32 0.317660729 ubox
24 33 0.129289541 ubox
24 34 0.135500645 ubox
24 35 0.041782892 ubox
24 36 0.004048863 ubox
24 47 0.009146785 ubox
24 48 0.004791039 ubox
24 54 0.004540149 ubox
25 30 0.259772250 ubox
25 45 0.852750212 ubox
25 46 0.009126802 ubox
25 53 0.004537566 ubox
26 33 0.145690880 ubox
26 34 0.007653682 ubox
26 35 0.006381668 ubox
26 43 0.003612369 ubox
26 44 0.867177121 ubox
27 32 0.147362935 ubox
27 33 0.008460463 ubox
27 34 0.007969411 ubox
27 39 0.017994252 ubox
27 40 0.005406444 ubox
27 43 0.871881855 ubox
27 44 0.003814778 ubox
27 48 0.003590435 ubox
27 50 0.003710611 ubox
28 38 0.019479483 ubox
28 42 0.872618124 ubox
29 37 0.020533385 ubox
29 38 0.003509333 ubox
29 41 0.872849717 ubox
29 49 0.015403846 ubox
30 36 0.020455037 ubox
30 40 0.873216344 ubox
30 48 0.298052411 ubox
31 35 0.017928505 ubox
31 36 0.008676588 ubox
31 39 0.833481863 ubox
31 47 0.298385804 ubox
32 45 0.010108830 ubox
32 46 0.298295138 ubox
33 37 0.174421450 ubox
33 38 0.135702402 ubox
33 42 0.007837961 ubox
33 45 0.293245617 ubox
34 38 0.038287359 ubox
34 41 0.014022194 ubox
34 42 0.030887558 ubox
34 45 0.013629518 ubox
35 41 0.031902151 ubox
35 42 0.075756429 ubox
35 45 0.004364323 ubox
35 46 0.005458948 ubox
36 41 0.069654311 ubox
36 42 0.099376542 ubox
36 45 0.018336126 ubox
37 43 0.017144770 ubox
37 44 0.032566346 ubox
38 43 0.026085824 ubox
38 44 0.016823028 ubox
38 47 0.018744420 ubox
39 46 0.019617438 ubox
40 45 0.021122290 ubox
45 71 0.005794813 ubox
46 67 0.030566374 ubox
46 70 0.005863712 ubox
47 66 0.031801150 ubox
47 69 0.005910148 ubox
48 68 0.005878271 ubox
49 65 0.998636120 ubox
50 64 0.999796459 ubox
51 63 0.999595650 ubox
52 61 0.016021709 ubox
52 62 0.999697312 ubox
53 60 0.021730422 ubox
53 61 0.998513070 ubox
53 62 0.003332186 ubox
54 58 0.020033281 ubox
54 59 0.120629177 ubox
55 59 0.152013862 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
11 18 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
25 45 0.9500000 lbox
26 44 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
