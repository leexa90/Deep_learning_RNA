%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUACGGCCAUACCACCCUGAACGCGCCCGAUCUCGUCUGAUCUCGGAAGCUAAGCAGGGUCGGGCCUGGUUAGUACUUGGAUGGGAGACCGCCUGGGAAUACCGGGUGCUGUAGGCU\
) def
/coor [
[88.31176758 215.77049255]
[97.92926788 202.92979431]
[97.13764191 187.95069885]
[96.34600830 172.97160339]
[95.55438232 157.99250793]
[94.76274872 143.01341248]
[93.97112274 128.03431702]
[93.17948914 113.05522156]
[84.04701996 124.95471954]
[69.05722046 124.40145111]
[60.82681656 111.86109924]
[66.28321075 97.88871002]
[80.83392334 94.24466705]
[67.40647125 87.55859375]
[53.89194107 81.05033875]
[40.29267883 74.72103119]
[26.69341660 68.39173126]
[13.09415531 62.06242752]
[-0.50510663 55.73312378]
[-14.10436821 49.40382004]
[-28.71385765 57.80765152]
[-45.29468536 55.91292191]
[-57.38948441 44.65518951]
[-60.40546799 28.57767868]
[-74.16706848 22.60956001]
[-88.71570587 28.17506790]
[-102.58689880 21.92650795]
[-107.80310822 8.02230644]
[-121.56470490 2.05418730]
[-135.32629395 -3.91393209]
[-149.08789062 -9.88205147]
[-163.63653564 -4.31654263]
[-177.50773621 -10.56510353]
[-182.72393799 -24.46930504]
[-196.48553467 -30.43742371]
[-212.70684814 -28.02892685]
[-222.69001770 -41.03924179]
[-216.16522217 -56.08447266]
[-199.84458923 -57.68737411]
[-190.51741028 -44.19902039]
[-176.75581360 -38.23090363]
[-163.04031372 -43.92481613]
[-148.99908447 -38.06833267]
[-143.11978149 -23.64364815]
[-129.35818481 -17.67552948]
[-115.59658051 -11.70740986]
[-101.83498383 -5.73929024]
[-88.11948395 -11.43320370]
[-74.07824707 -5.57672119]
[-68.19894409 8.84796333]
[-54.43734741 14.81608200]
[-43.55516815 6.96266270]
[-30.10228539 5.53220177]
[-17.61293983 11.00891495]
[-9.42209053 22.04810333]
[-7.77506590 35.80455780]
[5.82419634 42.13386154]
[19.42345810 48.46316528]
[33.02272034 54.79246902]
[46.62198257 61.12176895]
[60.22124481 67.45107269]
[67.70701599 67.42030334]
[74.09255219 74.13114166]
[87.51999664 80.81721497]
[115.49456787 85.81843567]
[130.33671570 83.64808655]
[145.17887878 81.47773743]
[160.02102661 79.30738068]
[174.86318970 77.13703156]
[189.70533752 74.96668243]
[204.54750061 72.79633331]
[209.06604004 59.48625565]
[218.85159302 49.48847198]
[231.93684387 44.73083496]
[245.72636414 46.09586334]
[257.51135254 53.25768280]
[265.00180054 64.75739288]
[279.89608765 62.97958374]
[292.68194580 53.66121674]
[306.23654175 59.83554077]
[321.13082886 58.05773163]
[329.40219116 53.88698959]
[336.44104004 56.43494034]
[351.37704468 55.05091476]
[366.31307983 53.66688919]
[379.37808228 43.75541687]
[394.38720703 50.36286545]
[395.90032959 66.69205475]
[382.36090088 75.94492340]
[367.69708252 68.60290527]
[352.76107788 69.98692322]
[337.82507324 71.37094879]
[322.90863037 72.95200348]
[308.01434326 74.72981262]
[296.29382324 83.92102051]
[281.67388916 77.87385559]
[266.77960205 79.65166473]
[260.82165527 94.60970306]
[248.08230591 104.60805511]
[231.95181274 106.86656189]
[216.78326416 100.68091583]
[206.71784973 87.63848877]
[191.87568665 89.80883789]
[177.03353882 91.97918701]
[162.19137573 94.14953613]
[147.34922791 96.31989288]
[132.50706482 98.49024200]
[117.66491699 100.66059113]
[108.15858459 112.26359558]
[108.95021820 127.24269104]
[109.74184418 142.22178650]
[110.53347778 157.20088196]
[111.32510376 172.17997742]
[112.11673737 187.15907288]
[112.90836334 202.13816833]
[123.82574463 213.89361572]
[121.29946136 229.73651123]
[107.26745605 237.51354980]
] def
/pairs [
[2 115]
[3 114]
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[13 64]
[14 63]
[15 61]
[16 60]
[17 59]
[18 58]
[19 57]
[20 56]
[24 51]
[25 50]
[28 47]
[29 46]
[30 45]
[31 44]
[34 41]
[35 40]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[77 97]
[78 96]
[80 94]
[81 93]
[83 92]
[84 91]
[85 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
