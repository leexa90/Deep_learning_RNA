%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:30 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCCAGUGCUCUGAAUGUCAAAGUGAAGAAAUUCAACCAAGCGCGGGUAAACGGCGGGAGUAACUAUGACUCUCUUAAGGUAGCCAAAUGCCUCGUCAUCUAAUUAGUGACG\
) def
/coor [
[67.93656158 114.45029449]
[53.26146698 117.55536652]
[38.58636856 120.66044617]
[23.91127014 123.76551819]
[16.03262329 128.66748047]
[8.78528881 126.74695587]
[-5.97045374 129.44288635]
[-20.72619629 132.13882446]
[-35.48193741 134.83476257]
[-50.23767853 137.53070068]
[-65.46215057 152.47598267]
[-84.71455383 145.26101685]
[-99.19440460 149.17686462]
[-113.67425537 153.09269714]
[-128.15411377 157.00854492]
[-142.63397217 160.92439270]
[-153.93572998 171.99600220]
[-168.24153137 167.84954834]
[-182.72138977 171.76538086]
[-188.12258911 186.31208801]
[-201.06121826 194.87782288]
[-216.56208801 194.16888428]
[-228.66481018 184.45787048]
[-232.71563721 169.47886658]
[-227.15695190 154.99160767]
[-214.12615967 146.56674194]
[-198.63389587 147.44380188]
[-186.63723755 157.28553772]
[-172.15737915 153.36968994]
[-161.89131165 142.57815552]
[-146.54980469 146.44453430]
[-132.06996155 142.52868652]
[-117.59010315 138.61285400]
[-103.11024475 134.69700623]
[-88.63039398 130.78115845]
[-85.42033386 122.24013519]
[-78.48069000 116.10411072]
[-69.34063721 113.89878845]
[-60.09707260 116.26389313]
[-52.93361664 122.77495575]
[-38.17787552 120.07902527]
[-23.42213249 117.38308716]
[-8.66639042 114.68714905]
[6.08935165 111.99121094]
[20.80619431 109.09042358]
[35.48129272 105.98534393]
[50.15638733 102.88027191]
[64.83148956 99.77519226]
[65.79053497 91.83988190]
[68.51662445 84.32607269]
[72.86893463 77.62187958]
[78.62266541 72.07359314]
[85.48060608 67.96779633]
[93.08852386 65.51657867]
[101.05344391 64.84654999]
[108.96395111 65.99231720]
[115.79237366 52.63669968]
[122.62080383 39.28107834]
[129.44923401 25.92546082]
[136.27766418 12.56984234]
[143.10609436 -0.78577608]
[136.84977722 -15.11729908]
[141.31886292 -30.10267067]
[154.40315247 -38.66625977]
[169.92468262 -36.76459503]
[180.55464172 -25.29559135]
[181.27388000 -9.67455769]
[171.74281311 2.72273088]
[156.46171570 6.04265356]
[149.63328552 19.39827156]
[142.80485535 32.75389099]
[135.97642517 46.10950851]
[129.14799500 59.46512985]
[122.31956482 72.82074738]
[128.82005310 77.46136475]
[134.31710815 83.67057037]
[138.43173218 91.22138977]
[140.83853149 99.79566956]
[155.82550049 100.42102051]
[170.81245422 101.04637909]
[185.79940796 101.67173767]
[200.78637695 102.29709625]
[212.24673462 91.41428375]
[228.04336548 91.90618896]
[238.80441284 103.48097229]
[238.14552307 119.27151489]
[226.45761108 129.90957642]
[210.67491150 129.08378601]
[200.16101074 117.28404999]
[185.17405701 116.65869904]
[170.18710327 116.03334045]
[155.20013428 115.40798187]
[140.21318054 114.78262329]
[132.65307617 127.73811340]
[140.57040405 140.47843933]
[148.48773193 153.21876526]
[156.40505981 165.95909119]
[164.32238770 178.69941711]
[172.23971558 191.43974304]
[187.74427795 193.47508240]
[198.27500916 205.03526306]
[198.85961914 220.66191101]
[189.22209167 232.97660828]
[173.91294861 236.16473389]
[160.16070557 228.72094727]
[154.45875549 214.15998840]
[159.49938965 199.35707092]
[151.58206177 186.61674500]
[143.66473389 173.87641907]
[135.74740601 161.13609314]
[127.83007050 148.39576721]
[119.91274261 135.65544128]
] def
/pairs [
[1 48]
[2 47]
[3 46]
[4 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[12 35]
[13 34]
[14 33]
[15 32]
[16 31]
[18 29]
[19 28]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[94 112]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
