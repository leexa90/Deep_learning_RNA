%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3q1q_c)
} def

/sequence { (\
GGCCAGGUAGCUCAGUUGGUAGAGCACUGGAUAUGGGCACCCCCUAAGUCCAGGUGUCGGCGGUUCGAUUCCGCCCCUGGCCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 82 0.999203007 ubox
1 84 0.003576210 ubox
1 85 0.006984937 ubox
2 81 0.999976009 ubox
2 84 0.004736360 ubox
3 80 0.999995559 ubox
4 79 0.999988198 ubox
5 78 0.999747006 ubox
6 76 0.005629908 ubox
6 77 0.999921706 ubox
7 27 0.008885923 ubox
7 75 0.004260207 ubox
7 76 0.994541380 ubox
7 77 0.003646892 ubox
8 18 0.047701742 ubox
8 21 0.083422701 ubox
8 22 0.010071846 ubox
8 23 0.005977974 ubox
8 26 0.079101077 ubox
8 54 0.003892839 ubox
8 56 0.007593648 ubox
9 16 0.003345362 ubox
9 17 0.052170300 ubox
9 20 0.087849592 ubox
9 55 0.007804672 ubox
10 16 0.053503351 ubox
10 20 0.074980721 ubox
10 25 0.985269140 ubox
10 74 0.004571794 ubox
11 15 0.053303956 ubox
11 18 0.090589671 ubox
11 19 0.076851851 ubox
11 22 0.019030699 ubox
11 24 0.988864772 ubox
11 73 0.004576738 ubox
12 18 0.067410329 ubox
12 19 0.016999672 ubox
12 21 0.018806570 ubox
12 23 0.989189545 ubox
12 30 0.005511266 ubox
13 18 0.037168897 ubox
13 19 0.014349482 ubox
13 22 0.989074238 ubox
13 29 0.007606960 ubox
14 20 0.151110961 ubox
14 28 0.007652277 ubox
14 70 0.004034545 ubox
15 20 0.049208514 ubox
15 25 0.017183574 ubox
15 27 0.007661669 ubox
15 69 0.004311175 ubox
16 21 0.038358869 ubox
16 23 0.006493787 ubox
16 24 0.017201034 ubox
16 26 0.005625892 ubox
16 68 0.004330655 ubox
17 21 0.010685484 ubox
17 22 0.007109123 ubox
17 23 0.017412531 ubox
17 26 0.007910760 ubox
17 67 0.004312768 ubox
18 25 0.010029673 ubox
18 58 0.004069315 ubox
18 66 0.004304680 ubox
19 25 0.004192812 ubox
19 58 0.009317008 ubox
19 65 0.003512469 ubox
20 24 0.003957234 ubox
21 57 0.003393579 ubox
22 57 0.005908361 ubox
22 58 0.098540508 ubox
23 57 0.089937053 ubox
24 55 0.046696385 ubox
24 57 0.104776130 ubox
24 58 0.024782207 ubox
25 54 0.053052690 ubox
25 56 0.143855234 ubox
26 55 0.199360171 ubox
26 57 0.021181508 ubox
27 35 0.005125408 ubox
27 53 0.984097124 ubox
27 54 0.154590255 ubox
27 56 0.016751778 ubox
28 52 0.995944861 ubox
28 53 0.076210095 ubox
29 51 0.999652623 ubox
30 50 0.999686132 ubox
30 58 0.015654980 ubox
31 49 0.998552437 ubox
31 57 0.015677759 ubox
32 46 0.075140977 ubox
32 47 0.044603711 ubox
32 48 0.967450347 ubox
32 56 0.015568496 ubox
33 45 0.110258468 ubox
33 55 0.014684018 ubox
34 46 0.843923410 ubox
34 47 0.034246521 ubox
34 48 0.004960493 ubox
34 52 0.012723378 ubox
34 54 0.009405966 ubox
35 41 0.003556489 ubox
35 42 0.017087119 ubox
35 43 0.165869149 ubox
35 44 0.520726686 ubox
35 45 0.835390964 ubox
35 51 0.016108568 ubox
36 40 0.003527215 ubox
36 41 0.017153794 ubox
36 42 0.167050563 ubox
36 43 0.522597479 ubox
36 44 0.835361639 ubox
36 45 0.009906130 ubox
36 50 0.016128471 ubox
36 58 0.018136773 ubox
37 41 0.165163118 ubox
37 42 0.517865573 ubox
37 43 0.829941287 ubox
37 44 0.010552974 ubox
37 49 0.016116587 ubox
37 57 0.018295980 ubox
38 48 0.016130579 ubox
38 56 0.018343675 ubox
39 55 0.018339692 ubox
40 54 0.018273928 ubox
41 53 0.018202998 ubox
53 58 0.018204544 ubox
53 72 0.011975243 ubox
53 75 0.006833421 ubox
54 58 0.092323391 ubox
54 61 0.003614325 ubox
54 71 0.014052800 ubox
54 72 0.003486103 ubox
54 74 0.008979352 ubox
54 76 0.005112913 ubox
55 60 0.003582748 ubox
55 73 0.008967125 ubox
56 69 0.015851876 ubox
56 72 0.007494093 ubox
56 75 0.004180932 ubox
56 76 0.008255468 ubox
57 68 0.017976032 ubox
58 67 0.018031803 ubox
59 66 0.017953009 ubox
59 74 0.003180505 ubox
59 75 0.997746671 ubox
59 76 0.006693159 ubox
60 65 0.012693377 ubox
60 74 0.999777471 ubox
60 75 0.005552896 ubox
61 73 0.999793359 ubox
62 71 0.011513905 ubox
62 72 0.999704347 ubox
62 75 0.004067816 ubox
63 69 0.005055406 ubox
63 70 0.015074789 ubox
63 71 0.998607441 ubox
63 74 0.004074587 ubox
64 68 0.020947691 ubox
64 73 0.003894560 ubox
1 82 0.9500000 lbox
2 81 0.9500000 lbox
3 80 0.9500000 lbox
4 79 0.9500000 lbox
5 78 0.9500000 lbox
6 77 0.9500000 lbox
7 76 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
27 53 0.9500000 lbox
28 52 0.9500000 lbox
29 51 0.9500000 lbox
30 50 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
59 75 0.9500000 lbox
60 74 0.9500000 lbox
61 73 0.9500000 lbox
62 72 0.9500000 lbox
63 71 0.9500000 lbox
showpage
end
%%EOF
