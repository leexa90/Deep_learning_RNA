%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGACCGGUAGCCUAGCCAGGACAGGGCGGCGGCCUCCUAAGCCGCAGGUCCGGGGUUCAAAUCCCCGCCGGUCCGC\
) def
/coor [
[131.80572510 223.88159180]
[130.58308411 208.93150330]
[129.36044312 193.98141479]
[128.13780212 179.03132629]
[126.91516876 164.08123779]
[125.69252777 149.13114929]
[124.46989441 134.18106079]
[123.24725342 119.23097992]
[107.51512146 127.14158630]
[91.29171753 124.66270447]
[80.37268066 114.06607819]
[66.06948853 118.58477020]
[51.76628876 123.10346222]
[41.09920502 135.55918884]
[25.03053856 132.28352356]
[20.09035683 116.64617920]
[31.36069679 104.73351288]
[47.24759674 108.80026245]
[61.55079269 104.28157043]
[75.85398865 99.76287842]
[79.48664856 84.59608459]
[92.17049408 73.99414825]
[109.60889435 72.99376678]
[124.99096680 83.09683990]
[123.76832581 68.14675140]
[122.54568481 53.19666290]
[121.32305145 38.24657440]
[110.47921753 23.52849770]
[118.25791931 7.93435526]
[116.42649841 -6.95342207]
[114.59508514 -21.84119987]
[112.76367188 -36.72897720]
[110.93225861 -51.61675644]
[97.71791840 -59.97828674]
[93.01911163 -74.89321899]
[99.05448151 -89.31918335]
[112.97430420 -96.44467163]
[128.20605469 -92.90525055]
[137.55778503 -80.37213135]
[136.61389160 -64.76306152]
[125.82003784 -53.44816971]
[127.65145111 -38.56039047]
[129.48286438 -23.67261505]
[131.31428528 -8.78483677]
[133.14569092 6.10294056]
[142.58757019 13.94403553]
[144.08886719 26.53268242]
[136.27313232 37.02393341]
[137.49577332 51.97402191]
[138.71841431 66.92411041]
[139.94105530 81.87419891]
[150.43891907 92.58843994]
[165.36096191 94.11578369]
[180.28298950 95.64312744]
[195.20503235 97.17047119]
[206.29739380 86.14805603]
[221.88395691 84.88594818]
[234.60523987 93.98007202]
[238.45462036 109.13646698]
[231.61456299 123.19873810]
[217.31471252 129.52711487]
[202.30703735 125.13353729]
[193.67768860 112.09250641]
[178.75564575 110.56516266]
[163.83361816 109.03781891]
[148.91157532 107.51047516]
[138.19734192 118.00833893]
[139.41998291 132.95843506]
[140.64262390 147.90852356]
[141.86526489 162.85861206]
[143.08789062 177.80870056]
[144.31053162 192.75878906]
[145.53317261 207.70887756]
[146.75581360 222.65896606]
[154.07307434 237.95256042]
[141.40277100 249.21754456]
] def
/pairs [
[1 74]
[2 73]
[3 72]
[4 71]
[5 70]
[6 69]
[7 68]
[8 67]
[11 20]
[12 19]
[13 18]
[24 51]
[25 50]
[26 49]
[27 48]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[52 66]
[53 65]
[54 64]
[55 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
