%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1fir_a)
} def

/sequence { (\
GCCCGGAUAGCUCAGUCGGUAGAGCAUCAGACUUUUAAUCUGAGGGUCCAGGGUUCAAGUCCCUGUUCGGGCGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.003899617 ubox
1 72 0.999185946 ubox
1 74 0.007423270 ubox
1 75 0.004774739 ubox
2 53 0.004281624 ubox
2 71 0.999955713 ubox
2 73 0.006766031 ubox
3 52 0.004285268 ubox
3 70 0.999967366 ubox
3 71 0.005890614 ubox
4 51 0.004283119 ubox
4 69 0.999938248 ubox
4 70 0.005853412 ubox
5 28 0.009519143 ubox
5 49 0.008567919 ubox
5 67 0.006831484 ubox
5 68 0.994207653 ubox
6 17 0.012283547 ubox
6 27 0.009795892 ubox
6 28 0.700385436 ubox
6 48 0.023885161 ubox
6 66 0.010901517 ubox
6 67 0.687536759 ubox
6 68 0.023983204 ubox
7 16 0.012312947 ubox
7 27 0.703236126 ubox
7 47 0.024024607 ubox
7 66 0.631089490 ubox
7 67 0.031210222 ubox
8 15 0.012054445 ubox
8 21 0.012338684 ubox
8 26 0.698257937 ubox
8 29 0.022079926 ubox
8 46 0.023680821 ubox
8 65 0.298255247 ubox
9 20 0.012978218 ubox
9 27 0.050085273 ubox
9 64 0.198018055 ubox
9 66 0.012299579 ubox
9 67 0.003964780 ubox
10 16 0.003852987 ubox
10 20 0.022297658 ubox
10 25 0.997070043 ubox
10 28 0.003655981 ubox
10 47 0.004805356 ubox
10 63 0.044938053 ubox
11 15 0.004271320 ubox
11 18 0.013629376 ubox
11 19 0.023186675 ubox
11 24 0.997903713 ubox
11 44 0.034014078 ubox
11 46 0.005028002 ubox
11 59 0.005877951 ubox
12 18 0.020703791 ubox
12 19 0.006670990 ubox
12 23 0.997680776 ubox
12 43 0.034159608 ubox
12 45 0.004910505 ubox
12 58 0.005674054 ubox
13 18 0.012697292 ubox
13 19 0.006258690 ubox
13 22 0.997483425 ubox
13 42 0.034193784 ubox
13 44 0.004795050 ubox
13 65 0.004630484 ubox
14 20 0.152412656 ubox
14 41 0.034140733 ubox
14 64 0.004948806 ubox
15 20 0.049623963 ubox
15 25 0.006296366 ubox
15 32 0.003451384 ubox
15 40 0.034028620 ubox
15 61 0.011181710 ubox
15 62 0.005643876 ubox
15 63 0.005028227 ubox
16 21 0.018601145 ubox
16 23 0.014197063 ubox
16 24 0.003721871 ubox
16 31 0.003797057 ubox
16 43 0.003555206 ubox
17 22 0.017256228 ubox
17 30 0.003796848 ubox
17 42 0.003722244 ubox
17 59 0.013077131 ubox
18 25 0.004127601 ubox
18 28 0.006268950 ubox
18 41 0.003616249 ubox
18 60 0.005664444 ubox
18 61 0.004046641 ubox
18 62 0.034984146 ubox
19 27 0.006248713 ubox
19 36 0.010443377 ubox
19 40 0.003593674 ubox
19 60 0.003744555 ubox
19 61 0.034988794 ubox
20 26 0.006121592 ubox
20 37 0.013278035 ubox
20 57 0.006746986 ubox
20 58 0.010554681 ubox
20 59 0.008369081 ubox
21 35 0.029377709 ubox
21 36 0.012908487 ubox
21 60 0.004389632 ubox
22 28 0.005329332 ubox
22 34 0.031215926 ubox
22 35 0.012357161 ubox
22 48 0.031779728 ubox
22 56 0.040028513 ubox
23 27 0.004642976 ubox
23 33 0.031606743 ubox
23 34 0.011718214 ubox
23 47 0.031821959 ubox
23 55 0.040088457 ubox
24 32 0.031822087 ubox
24 33 0.010421186 ubox
24 47 0.004240478 ubox
24 54 0.040103514 ubox
25 30 0.026097642 ubox
25 44 0.004778022 ubox
25 45 0.031621413 ubox
25 46 0.005393935 ubox
25 53 0.040078636 ubox
26 47 0.005545574 ubox
26 54 0.005931826 ubox
27 43 0.153062196 ubox
27 46 0.004051952 ubox
27 50 0.009638073 ubox
27 51 0.009689647 ubox
27 52 0.015859982 ubox
27 53 0.006213608 ubox
28 42 0.166148189 ubox
28 51 0.017990127 ubox
28 52 0.006682348 ubox
29 41 0.166230680 ubox
29 47 0.004633560 ubox
30 40 0.166246019 ubox
30 47 0.005618131 ubox
30 48 0.980063427 ubox
30 49 0.020486648 ubox
30 61 0.055038890 ubox
31 39 0.158680795 ubox
31 47 0.982844328 ubox
31 60 0.055267246 ubox
32 44 0.012673180 ubox
32 45 0.046434950 ubox
32 46 0.982666956 ubox
32 59 0.055290965 ubox
33 37 0.033207213 ubox
33 38 0.025836482 ubox
33 43 0.013164992 ubox
33 44 0.057868301 ubox
33 45 0.980715048 ubox
33 58 0.054876488 ubox
34 38 0.007301393 ubox
34 42 0.013841266 ubox
34 43 0.067653000 ubox
34 44 0.976598815 ubox
34 45 0.014480471 ubox
34 57 0.051124611 ubox
34 58 0.003651025 ubox
35 42 0.069024319 ubox
35 43 0.977388719 ubox
35 44 0.020278962 ubox
35 57 0.004750504 ubox
36 42 0.968714221 ubox
36 43 0.023310330 ubox
36 44 0.003713570 ubox
37 41 0.806551691 ubox
37 54 0.020504283 ubox
37 55 0.015666807 ubox
38 47 0.003816283 ubox
38 54 0.016519837 ubox
39 46 0.003961312 ubox
39 52 0.051566350 ubox
39 53 0.015083355 ubox
40 45 0.004073121 ubox
40 51 0.053652602 ubox
40 52 0.013398735 ubox
41 50 0.054107154 ubox
41 51 0.011273503 ubox
42 48 0.005455775 ubox
42 49 0.054030273 ubox
43 47 0.005921928 ubox
43 64 0.028650699 ubox
44 48 0.014504395 ubox
44 49 0.016464065 ubox
44 62 0.003397132 ubox
44 63 0.058204142 ubox
44 68 0.003608801 ubox
45 49 0.005192741 ubox
45 61 0.003411195 ubox
45 62 0.058419238 ubox
45 67 0.004591521 ubox
45 68 0.005397829 ubox
46 61 0.058373335 ubox
46 66 0.004503840 ubox
46 67 0.006629569 ubox
46 68 0.008948321 ubox
47 59 0.003652429 ubox
48 59 0.050349248 ubox
48 65 0.005937058 ubox
49 59 0.010923299 ubox
49 65 0.948681149 ubox
50 55 0.004047947 ubox
50 64 0.976148197 ubox
51 56 0.042052929 ubox
51 62 0.031600429 ubox
51 63 0.995081608 ubox
51 64 0.011468010 ubox
52 56 0.009804196 ubox
52 61 0.032390821 ubox
52 62 0.995164565 ubox
52 63 0.017125598 ubox
53 60 0.025678899 ubox
53 61 0.994133940 ubox
53 62 0.017349072 ubox
54 58 0.020242710 ubox
54 59 0.151685270 ubox
55 59 0.085909703 ubox
59 72 0.003739319 ubox
60 71 0.003464298 ubox
61 70 0.003465162 ubox
62 69 0.003455782 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 28 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
34 44 0.9500000 lbox
35 43 0.9500000 lbox
36 42 0.9500000 lbox
37 41 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
