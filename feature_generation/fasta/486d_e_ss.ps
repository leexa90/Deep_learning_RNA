%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCCGUGAUAGUUUAAUGGUCAGAAUGGGCGCUUGUCGCGUGCCAGAUCGGGGUUCAAUUCCCCGUCGCGGAG\
) def
/coor [
[90.89698792 224.67997742]
[90.25165558 209.69387817]
[89.60632324 194.70776367]
[88.96099091 179.72164917]
[88.31565857 164.73553467]
[87.67032623 149.74942017]
[87.02499390 134.76330566]
[86.37965393 119.77719879]
[74.33912659 128.72291565]
[59.37900925 129.81596375]
[46.16606522 122.71539307]
[38.82204819 109.63619995]
[39.63790131 94.65840149]
[48.35912323 82.45429230]
[62.26514816 76.83090973]
[77.01802826 79.54245758]
[88.01534271 89.74257660]
[82.95249939 75.62281799]
[77.88965607 61.50305939]
[72.82681274 47.38330078]
[68.79260254 44.29314804]
[66.40967560 40.39249802]
[65.72061920 36.38290024]
[66.50556183 32.89253235]
[68.33797455 30.38713646]
[65.76857758 15.60883522]
[63.19917679 0.83053398]
[60.31240463 -13.88906288]
[57.10959244 -28.54314041]
[53.90677643 -43.19721603]
[50.70396423 -57.85129547]
[38.02975082 -67.68714142]
[37.96156311 -83.73004913]
[50.55171204 -93.67327118]
[66.14211273 -89.88922119]
[72.77313995 -75.28070068]
[65.35803986 -61.05410767]
[68.56085205 -46.40003204]
[71.76367188 -31.74595451]
[74.96648407 -17.09187698]
[79.61378479 -11.04682636]
[77.97747803 -1.73886323]
[80.54687500 13.03943825]
[83.11627197 27.81773949]
[86.94657135 42.32045746]
[92.00941467 56.44021606]
[97.07225800 70.55997467]
[102.13510132 84.67973328]
[113.91985321 93.95980835]
[128.83311462 95.57052612]
[143.74638367 97.18125153]
[158.65965271 98.79196930]
[169.81344604 87.83171844]
[185.40682983 86.65674591]
[198.07707214 95.82183075]
[201.84169006 110.99949646]
[194.92314148 125.02332306]
[180.58815002 131.27168274]
[165.60525513 126.79428864]
[157.04893494 113.70523834]
[142.13566589 112.09451294]
[127.22240448 110.48379517]
[112.30913544 108.87307739]
[101.36576843 119.13186646]
[102.01110077 134.11798096]
[102.65643311 149.10409546]
[103.30177307 164.09020996]
[103.94710541 179.07630920]
[104.59243774 194.06242371]
[105.23777008 209.04853821]
[105.88310242 224.03465271]
[108.90042114 243.18003845]
] def
/pairs [
[1 71]
[2 70]
[3 69]
[4 68]
[5 67]
[6 66]
[7 65]
[8 64]
[17 48]
[18 47]
[19 46]
[20 45]
[25 44]
[26 43]
[27 42]
[28 40]
[29 39]
[30 38]
[31 37]
[49 63]
[50 62]
[51 61]
[52 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
