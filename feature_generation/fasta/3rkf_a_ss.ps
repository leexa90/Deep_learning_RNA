%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGCCAUAUAACUGCGUGGAUAUAGCACGCAGGUUUCUACCGGGCACUGUAAAUGUCCGACUAUGGUC\
) def
/coor [
[92.50000000 231.58494568]
[92.50000000 216.58494568]
[92.50000000 201.58494568]
[92.50000000 186.58494568]
[92.50000000 171.58494568]
[92.50000000 156.58494568]
[92.50000000 141.58494568]
[77.04402924 135.47650146]
[65.13901520 123.88033295]
[58.62649918 108.59021759]
[58.51387405 91.97132111]
[44.52679062 86.55269623]
[30.53970718 81.13407135]
[16.55262375 75.71544647]
[2.56554008 70.29682159]
[-11.42154312 64.87819672]
[-25.40862656 59.45957565]
[-39.02070236 67.15667725]
[-54.38624573 64.25251007]
[-64.25010681 52.11833572]
[-63.95488358 36.48353958]
[-53.63996506 24.73039246]
[-38.17573929 22.40837288]
[-24.86394501 30.61386681]
[-19.99000168 45.47249222]
[-6.00291824 50.89111710]
[7.98416519 56.30974197]
[21.97124863 61.72836685]
[35.95833206 67.14698792]
[49.94541550 72.56561279]
[63.93249893 77.98423767]
[70.43446350 69.80998230]
[78.74281311 63.48027420]
[88.34994507 59.38184738]
[98.66886139 57.76510620]
[109.06911469 58.72882843]
[118.91526031 62.21413803]
[127.60572052 68.00808716]
[134.60952759 75.75667572]
[139.49876404 84.98648834]
[154.24336243 82.23024750]
[168.98796082 79.47399902]
[183.73255920 76.71775818]
[198.47715759 73.96151733]
[213.22175598 71.20527649]
[220.74296570 57.49523163]
[235.33586121 51.87548828]
[250.11010742 56.99951172]
[258.08975220 70.44789886]
[255.50708008 85.87073517]
[243.58151245 95.98581696]
[227.94395447 96.01712799]
[215.97799683 85.94986725]
[201.23339844 88.70611572]
[186.48880005 91.46235657]
[171.74420166 94.21859741]
[156.99960327 96.97483826]
[142.25500488 99.73108673]
[137.86576843 118.75477600]
[125.39325714 133.77485657]
[107.50000000 141.58494568]
[107.50000000 156.58494568]
[107.50000000 171.58494568]
[107.50000000 186.58494568]
[107.50000000 201.58494568]
[107.50000000 216.58494568]
[107.50000000 231.58494568]
] def
/pairs [
[1 67]
[2 66]
[3 65]
[4 64]
[5 63]
[6 62]
[7 61]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[40 58]
[41 57]
[42 56]
[43 55]
[44 54]
[45 53]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
