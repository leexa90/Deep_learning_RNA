%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4pr6_b)
} def

/sequence { (\
GCCGGCAUGGUCCCAGCCUCCUCGCUGGCGCCGGCUGGGCAACACCAUUGCACUCCGGUGGCGAAUGGGAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 29 0.013973347 ubox
1 35 0.025920142 ubox
1 40 0.854721265 ubox
1 43 0.032215879 ubox
1 59 0.003180106 ubox
1 62 0.003280779 ubox
1 71 0.006126762 ubox
2 28 0.014038256 ubox
2 34 0.025965755 ubox
2 38 0.698033997 ubox
2 39 0.714228715 ubox
2 58 0.003298741 ubox
2 61 0.003227359 ubox
3 27 0.014038486 ubox
3 33 0.025965333 ubox
3 37 0.842797943 ubox
3 38 0.536863791 ubox
3 57 0.003301439 ubox
3 60 0.003180413 ubox
4 18 0.003585152 ubox
4 26 0.014028057 ubox
4 32 0.025931847 ubox
4 35 0.004509038 ubox
4 36 0.964799054 ubox
4 53 0.003811064 ubox
4 56 0.003286779 ubox
5 17 0.003590180 ubox
5 25 0.014038511 ubox
5 31 0.025923725 ubox
5 35 0.996142697 ubox
5 36 0.053732395 ubox
5 51 0.007670064 ubox
6 16 0.003585428 ubox
6 24 0.014026377 ubox
6 30 0.025791563 ubox
6 33 0.006474150 ubox
6 34 0.995855295 ubox
6 37 0.004324202 ubox
6 50 0.007964499 ubox
7 36 0.004184192 ubox
7 48 0.005776854 ubox
7 49 0.005704485 ubox
8 15 0.003510853 ubox
8 33 0.886349034 ubox
8 47 0.008034991 ubox
9 14 0.003558605 ubox
9 18 0.007864884 ubox
9 21 0.011578015 ubox
9 29 0.010047967 ubox
9 31 0.003655932 ubox
9 32 0.999365963 ubox
9 46 0.008181599 ubox
10 17 0.007873130 ubox
10 20 0.011561026 ubox
10 29 0.011796437 ubox
10 31 0.999474685 ubox
10 45 0.008180413 ubox
11 16 0.007472462 ubox
11 28 0.004232348 ubox
11 30 0.974454420 ubox
11 44 0.008085930 ubox
12 28 0.026687922 ubox
12 30 0.163413832 ubox
12 39 0.008695692 ubox
12 69 0.003249823 ubox
13 27 0.018944267 ubox
13 28 0.998595891 ubox
13 38 0.008711146 ubox
13 68 0.003245896 ubox
14 27 0.999630502 ubox
14 37 0.008712991 ubox
14 67 0.003234536 ubox
15 26 0.999579967 ubox
15 36 0.008711928 ubox
16 25 0.999812943 ubox
16 29 0.007157019 ubox
16 35 0.008713934 ubox
17 24 0.997072375 ubox
17 28 0.007182177 ubox
17 34 0.008712818 ubox
18 24 0.045707743 ubox
18 27 0.007181824 ubox
18 33 0.008675605 ubox
20 28 0.005771633 ubox
20 69 0.003240006 ubox
21 27 0.005784191 ubox
21 30 0.004872367 ubox
21 68 0.003237959 ubox
23 28 0.004710858 ubox
27 62 0.003216445 ubox
29 60 0.003930492 ubox
30 40 0.012956034 ubox
30 59 0.004531034 ubox
30 62 0.005690690 ubox
31 39 0.012965910 ubox
31 58 0.004562557 ubox
31 61 0.005690084 ubox
32 38 0.012960436 ubox
32 57 0.004563019 ubox
32 60 0.005675573 ubox
33 56 0.004581287 ubox
33 59 0.004080431 ubox
34 55 0.004568233 ubox
34 59 0.003982817 ubox
35 58 0.005609226 ubox
36 44 0.009638157 ubox
36 47 0.005945177 ubox
36 57 0.005613088 ubox
37 43 0.010911005 ubox
37 46 0.006708021 ubox
37 54 0.003201672 ubox
37 56 0.005654670 ubox
38 43 0.010188403 ubox
38 45 0.006734129 ubox
38 53 0.004273001 ubox
38 55 0.005639250 ubox
39 43 0.018244322 ubox
39 51 0.060538459 ubox
39 62 0.010498007 ubox
39 71 0.018838388 ubox
40 50 0.060626837 ubox
40 61 0.010445419 ubox
40 63 0.004591821 ubox
40 67 0.010287571 ubox
40 68 0.003309794 ubox
40 69 0.020611697 ubox
41 49 0.059994431 ubox
41 66 0.010082141 ubox
42 48 0.053195807 ubox
43 50 0.003731148 ubox
43 60 0.017209331 ubox
43 63 0.029483420 ubox
43 67 0.016151344 ubox
43 68 0.011623177 ubox
43 69 0.403312018 ubox
44 49 0.003204479 ubox
44 59 0.017303971 ubox
44 66 0.015980883 ubox
45 58 0.017315397 ubox
45 61 0.037258062 ubox
45 67 0.012829003 ubox
45 68 0.992886605 ubox
45 69 0.061481284 ubox
46 57 0.017301029 ubox
46 60 0.037323421 ubox
46 67 0.995085771 ubox
46 68 0.055105329 ubox
47 59 0.037307953 ubox
47 66 0.992334851 ubox
48 58 0.037256562 ubox
48 63 0.015679248 ubox
48 64 0.508273752 ubox
48 65 0.851681867 ubox
49 57 0.037043222 ubox
49 61 0.006085448 ubox
49 63 0.717488841 ubox
49 64 0.672641162 ubox
49 65 0.005978510 ubox
50 56 0.036556513 ubox
50 59 0.005341863 ubox
50 62 0.965496908 ubox
51 58 0.005411867 ubox
51 60 0.700688400 ubox
51 61 0.707837946 ubox
51 63 0.020621872 ubox
52 59 0.960943300 ubox
53 57 0.009217956 ubox
53 58 0.977465830 ubox
53 60 0.181571229 ubox
53 61 0.017737139 ubox
53 63 0.006284414 ubox
53 69 0.003924485 ubox
54 58 0.009098943 ubox
54 60 0.016639727 ubox
54 64 0.003471518 ubox
54 69 0.009644594 ubox
54 70 0.057274086 ubox
55 60 0.007905756 ubox
55 61 0.011117815 ubox
55 63 0.003446312 ubox
55 68 0.012019989 ubox
55 69 0.061899109 ubox
56 60 0.011364867 ubox
56 61 0.003555123 ubox
56 63 0.006742463 ubox
56 67 0.012051991 ubox
56 68 0.061909702 ubox
57 62 0.006899743 ubox
57 66 0.011608262 ubox
58 66 0.061381195 ubox
59 64 0.004665385 ubox
59 65 0.061374389 ubox
62 68 0.005249058 ubox
62 69 0.006232993 ubox
2 38 0.9500000 lbox
3 37 0.9500000 lbox
4 36 0.9500000 lbox
5 35 0.9500000 lbox
6 34 0.9500000 lbox
8 33 0.9500000 lbox
9 32 0.9500000 lbox
10 31 0.9500000 lbox
11 30 0.9500000 lbox
13 28 0.9500000 lbox
14 27 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
17 24 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 59 0.9500000 lbox
53 58 0.9500000 lbox
showpage
end
%%EOF
