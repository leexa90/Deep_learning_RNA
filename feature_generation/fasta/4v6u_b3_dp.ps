%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:42 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v6u_b3)
} def

/sequence { (\
CGGCGGCCAUAGCGGGGGGGCCACACCCGGUCUCAUUUCGAACCCGGAAGUUAAGCCCCCCAGCGAUCCCGGUUGUACUGCCCUCCGAGAGGGGGCGGGAAGCCGGGGACGCCGCCGGCCACUAUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 117 0.912883063 ubox
1 118 0.020229719 ubox
2 113 0.003268752 ubox
2 116 0.926832737 ubox
2 119 0.012072138 ubox
2 120 0.039116756 ubox
2 122 0.044087803 ubox
2 123 0.334660242 ubox
2 125 0.005044166 ubox
2 126 0.006258948 ubox
3 112 0.003269022 ubox
3 115 0.926878782 ubox
3 119 0.039135534 ubox
3 122 0.351506388 ubox
3 123 0.004945204 ubox
3 125 0.004014001 ubox
4 111 0.003268981 ubox
4 114 0.926866402 ubox
4 117 0.029836949 ubox
4 118 0.028149702 ubox
5 110 0.003229987 ubox
5 113 0.926822093 ubox
5 116 0.040360556 ubox
5 120 0.372954472 ubox
6 13 0.057798168 ubox
6 112 0.924811390 ubox
6 115 0.040419035 ubox
6 116 0.006480188 ubox
6 119 0.373082324 ubox
7 12 0.057686310 ubox
7 14 0.005116709 ubox
7 15 0.003924933 ubox
7 108 0.004765263 ubox
7 111 0.920919667 ubox
7 114 0.040249910 ubox
7 118 0.373079548 ubox
8 12 0.005694376 ubox
8 14 0.022438581 ubox
8 65 0.060491238 ubox
8 107 0.005543226 ubox
8 108 0.080023439 ubox
8 111 0.058588683 ubox
8 117 0.372850516 ubox
9 67 0.210714611 ubox
10 65 0.029616369 ubox
10 66 0.208701120 ubox
10 107 0.004403408 ubox
10 108 0.035856971 ubox
10 109 0.044160886 ubox
10 117 0.004397713 ubox
11 67 0.013764038 ubox
12 64 0.917729968 ubox
12 67 0.005375902 ubox
12 110 0.005978082 ubox
12 112 0.009169671 ubox
12 113 0.005428287 ubox
12 115 0.372064085 ubox
12 116 0.008326028 ubox
13 63 0.915510189 ubox
13 65 0.049257914 ubox
13 108 0.007308322 ubox
13 111 0.009353792 ubox
13 114 0.372314553 ubox
14 61 0.071026003 ubox
14 64 0.049096185 ubox
14 110 0.009703655 ubox
14 113 0.368480496 ubox
15 60 0.068133417 ubox
15 61 0.993860471 ubox
15 112 0.018212293 ubox
16 59 0.064773044 ubox
16 60 0.997645646 ubox
16 61 0.005891537 ubox
17 58 0.061226855 ubox
17 59 0.997878596 ubox
17 60 0.005340112 ubox
18 57 0.057461151 ubox
18 58 0.998105669 ubox
18 59 0.004711458 ubox
19 56 0.053415450 ubox
19 57 0.998332660 ubox
19 58 0.003979499 ubox
20 56 0.998558585 ubox
21 55 0.997866948 ubox
22 50 0.017339282 ubox
22 55 0.026467877 ubox
23 51 0.931355367 ubox
23 52 0.052814460 ubox
24 50 0.940955185 ubox
25 51 0.279851230 ubox
25 52 0.010955576 ubox
26 47 0.074761745 ubox
26 50 0.284489021 ubox
27 46 0.073640152 ubox
27 47 0.996253027 ubox
28 46 0.997216493 ubox
29 44 0.135301382 ubox
29 45 0.990751955 ubox
30 43 0.177066565 ubox
30 44 0.983499895 ubox
31 40 0.010054873 ubox
31 41 0.193638446 ubox
31 42 0.198621481 ubox
32 40 0.211858856 ubox
33 40 0.028128799 ubox
33 41 0.958075689 ubox
33 42 0.024413373 ubox
34 40 0.963539570 ubox
36 40 0.004871428 ubox
36 41 0.005467373 ubox
36 42 0.005383129 ubox
36 49 0.003625232 ubox
37 41 0.004941708 ubox
37 48 0.003796728 ubox
38 47 0.003819352 ubox
39 46 0.003842794 ubox
40 45 0.003804834 ubox
62 67 0.003640227 ubox
63 110 0.015947726 ubox
63 112 0.378531654 ubox
63 113 0.004427442 ubox
64 108 0.004840899 ubox
64 111 0.380207168 ubox
65 110 0.604167968 ubox
67 107 0.004470797 ubox
67 108 0.715189824 ubox
67 109 0.173621891 ubox
68 106 0.004611287 ubox
68 107 0.986367978 ubox
68 108 0.158297911 ubox
69 105 0.003267404 ubox
69 106 0.991569958 ubox
69 107 0.129404593 ubox
70 105 0.995752343 ubox
70 106 0.091730576 ubox
71 104 0.999932168 ubox
72 103 0.999975770 ubox
72 104 0.005013574 ubox
73 101 0.010451856 ubox
73 102 0.998209274 ubox
74 99 0.003658687 ubox
74 100 0.013251182 ubox
74 101 0.979256812 ubox
74 102 0.035431018 ubox
76 98 0.003890941 ubox
76 99 0.077348326 ubox
76 100 0.083378634 ubox
76 101 0.013754187 ubox
78 97 0.024304748 ubox
78 98 0.998838256 ubox
78 99 0.014710822 ubox
79 97 0.998763512 ubox
79 98 0.010842712 ubox
80 96 0.999946503 ubox
81 93 0.005064408 ubox
81 94 0.005639550 ubox
81 95 0.997222500 ubox
82 92 0.006815782 ubox
82 93 0.007674746 ubox
82 94 0.994459420 ubox
82 95 0.074016644 ubox
83 91 0.008303256 ubox
83 92 0.009064499 ubox
83 93 0.991569627 ubox
83 94 0.104530399 ubox
84 90 0.011536295 ubox
84 91 0.009472945 ubox
84 92 0.525342804 ubox
84 93 0.127807435 ubox
85 89 0.013186107 ubox
85 91 0.516666228 ubox
85 92 0.850187854 ubox
85 93 0.009919313 ubox
86 91 0.853145318 ubox
86 92 0.013382018 ubox
117 122 0.038593627 ubox
117 123 0.013747376 ubox
117 126 0.011764118 ubox
118 122 0.029317401 ubox
118 123 0.018834442 ubox
118 125 0.017270894 ubox
118 126 0.010834578 ubox
121 125 0.008461425 ubox
1 117 0.9500000 lbox
2 116 0.9500000 lbox
3 115 0.9500000 lbox
4 114 0.9500000 lbox
5 113 0.9500000 lbox
6 112 0.9500000 lbox
7 111 0.9500000 lbox
12 64 0.9500000 lbox
13 63 0.9500000 lbox
15 61 0.9500000 lbox
16 60 0.9500000 lbox
17 59 0.9500000 lbox
18 58 0.9500000 lbox
19 57 0.9500000 lbox
20 56 0.9500000 lbox
21 55 0.9500000 lbox
23 51 0.9500000 lbox
24 50 0.9500000 lbox
27 47 0.9500000 lbox
28 46 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
68 107 0.9500000 lbox
69 106 0.9500000 lbox
70 105 0.9500000 lbox
71 104 0.9500000 lbox
72 103 0.9500000 lbox
73 102 0.9500000 lbox
74 101 0.9500000 lbox
78 98 0.9500000 lbox
79 97 0.9500000 lbox
80 96 0.9500000 lbox
81 95 0.9500000 lbox
82 94 0.9500000 lbox
83 93 0.9500000 lbox
85 92 0.9500000 lbox
86 91 0.9500000 lbox
showpage
end
%%EOF
