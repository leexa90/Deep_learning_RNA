%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:34 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3j9w_ax)
} def

/sequence { (\
GGUCCGGUAGUUCAGUUGGUUAGAAUGCCUGCCUGUCACGCAGGAGGUCGCGGGUUCGAGUCCCGUCCGGACCGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.999119609 ubox
1 75 0.003597955 ubox
1 76 0.013899413 ubox
2 72 0.999886983 ubox
2 75 0.012921903 ubox
3 71 0.999814642 ubox
3 74 0.009646004 ubox
4 70 0.999977946 ubox
5 69 0.999962448 ubox
6 13 0.007092682 ubox
6 29 0.023320002 ubox
6 67 0.006313341 ubox
6 68 0.999434013 ubox
7 12 0.007516346 ubox
7 13 0.015791884 ubox
7 26 0.005100683 ubox
7 28 0.024712747 ubox
7 67 0.990429379 ubox
7 68 0.004082444 ubox
8 14 0.016623913 ubox
8 15 0.018842298 ubox
8 18 0.053813152 ubox
8 19 0.010100219 ubox
8 22 0.069025055 ubox
8 23 0.019131752 ubox
8 24 0.019582702 ubox
8 25 0.010880673 ubox
8 27 0.035288811 ubox
8 31 0.006484336 ubox
8 65 0.016669669 ubox
9 16 0.027674040 ubox
9 17 0.058343358 ubox
9 20 0.041832713 ubox
9 21 0.071773098 ubox
9 26 0.052883445 ubox
9 30 0.007256428 ubox
9 48 0.003261999 ubox
9 66 0.070273548 ubox
10 16 0.050364506 ubox
10 17 0.025892540 ubox
10 20 0.054720909 ubox
10 21 0.063710914 ubox
10 26 0.763748516 ubox
10 28 0.009581830 ubox
10 29 0.007046516 ubox
10 39 0.006113585 ubox
10 49 0.011386889 ubox
10 62 0.006294585 ubox
10 63 0.009442425 ubox
10 64 0.022316505 ubox
10 66 0.008085113 ubox
10 67 0.003207552 ubox
11 15 0.016529452 ubox
11 18 0.050389764 ubox
11 19 0.040848038 ubox
11 22 0.016302085 ubox
11 23 0.017667012 ubox
11 24 0.029889154 ubox
11 25 0.809864023 ubox
11 27 0.010206688 ubox
11 38 0.006054012 ubox
11 46 0.003806954 ubox
11 60 0.006689813 ubox
11 65 0.003338309 ubox
12 18 0.037496486 ubox
12 19 0.136450286 ubox
12 22 0.019267077 ubox
12 23 0.030159898 ubox
12 24 0.829471537 ubox
12 25 0.009631904 ubox
12 27 0.004472684 ubox
12 45 0.004126105 ubox
12 47 0.003417347 ubox
12 59 0.007213226 ubox
13 18 0.173442987 ubox
13 19 0.051437887 ubox
13 23 0.830619330 ubox
13 27 0.047842336 ubox
13 31 0.017184486 ubox
13 35 0.008629499 ubox
13 44 0.004032747 ubox
13 46 0.004553197 ubox
13 58 0.007222684 ubox
13 60 0.005539336 ubox
14 20 0.072098187 ubox
14 21 0.274461410 ubox
14 26 0.050386915 ubox
14 30 0.017251555 ubox
14 34 0.008652843 ubox
14 56 0.005117147 ubox
14 61 0.037097951 ubox
15 20 0.198810252 ubox
15 21 0.155595763 ubox
15 26 0.228942879 ubox
15 28 0.007157983 ubox
15 29 0.010687808 ubox
15 32 0.020999304 ubox
15 33 0.007153329 ubox
15 49 0.013236025 ubox
15 55 0.004902760 ubox
15 64 0.004152024 ubox
16 22 0.061699696 ubox
16 23 0.029676116 ubox
16 24 0.069796350 ubox
16 25 0.243292487 ubox
16 27 0.007916334 ubox
16 31 0.025355310 ubox
16 54 0.005338989 ubox
16 59 0.051495662 ubox
17 22 0.041084432 ubox
17 23 0.074717552 ubox
17 24 0.246437106 ubox
17 25 0.027913099 ubox
17 27 0.005480802 ubox
17 31 0.005856478 ubox
17 50 0.006550580 ubox
17 53 0.005844621 ubox
17 58 0.051760878 ubox
17 65 0.005900353 ubox
18 26 0.019254439 ubox
18 29 0.097824362 ubox
18 49 0.021050788 ubox
18 57 0.051795085 ubox
18 63 0.015701630 ubox
18 64 0.007260437 ubox
19 26 0.045665163 ubox
19 28 0.099499216 ubox
19 48 0.008696125 ubox
19 49 0.022371771 ubox
19 51 0.008404775 ubox
19 56 0.050038227 ubox
19 62 0.015756462 ubox
19 63 0.007181923 ubox
20 24 0.009989212 ubox
20 25 0.044852966 ubox
20 27 0.098726681 ubox
20 50 0.008178418 ubox
20 60 0.008917665 ubox
21 25 0.010090754 ubox
21 27 0.008270356 ubox
21 31 0.006042888 ubox
21 53 0.005306886 ubox
21 54 0.025348941 ubox
21 59 0.007706117 ubox
22 26 0.012399719 ubox
22 30 0.006866411 ubox
23 29 0.006934451 ubox
23 48 0.003716908 ubox
23 49 0.122454698 ubox
23 51 0.016710981 ubox
23 57 0.017685252 ubox
24 48 0.104066906 ubox
24 56 0.017693050 ubox
25 48 0.012094802 ubox
25 55 0.017272480 ubox
26 45 0.009585243 ubox
26 46 0.020786375 ubox
26 47 0.012433107 ubox
26 50 0.051270619 ubox
26 52 0.003524673 ubox
26 54 0.016900723 ubox
27 48 0.895575002 ubox
27 49 0.292117357 ubox
27 51 0.006503243 ubox
27 55 0.006915996 ubox
28 44 0.106004164 ubox
28 47 0.987486569 ubox
28 50 0.006194324 ubox
28 52 0.004147445 ubox
28 54 0.007171178 ubox
29 43 0.106209424 ubox
29 46 0.987971412 ubox
29 47 0.042905795 ubox
29 53 0.007179530 ubox
30 42 0.106237458 ubox
30 45 0.984317566 ubox
30 46 0.044355114 ubox
30 47 0.008250794 ubox
30 50 0.003409626 ubox
30 52 0.007168730 ubox
31 41 0.106279844 ubox
31 48 0.022609759 ubox
31 49 0.009672073 ubox
31 51 0.007106051 ubox
31 55 0.003869482 ubox
32 40 0.105696490 ubox
32 43 0.030582742 ubox
32 44 0.992186689 ubox
32 47 0.024975854 ubox
32 50 0.006099593 ubox
32 54 0.004064362 ubox
33 40 0.010056633 ubox
33 43 0.993457432 ubox
33 46 0.025034035 ubox
33 53 0.004076135 ubox
34 38 0.017479368 ubox
34 42 0.993672439 ubox
34 45 0.024693815 ubox
34 47 0.003498005 ubox
34 52 0.004072829 ubox
35 39 0.007945823 ubox
35 41 0.993565511 ubox
35 51 0.004095368 ubox
36 40 0.929473404 ubox
36 43 0.018015885 ubox
36 44 0.010445060 ubox
36 45 0.005660970 ubox
36 50 0.004034266 ubox
37 43 0.011612814 ubox
37 44 0.006098977 ubox
38 48 0.004768361 ubox
39 47 0.004910400 ubox
41 47 0.003391505 ubox
44 49 0.006013424 ubox
46 63 0.005921860 ubox
46 68 0.022898647 ubox
46 73 0.004173029 ubox
47 62 0.005942751 ubox
47 67 0.022987306 ubox
47 72 0.004179514 ubox
48 71 0.004169870 ubox
49 60 0.005882088 ubox
49 65 0.021230469 ubox
49 70 0.004146642 ubox
50 64 0.021807631 ubox
50 66 0.951721189 ubox
50 67 0.027237307 ubox
51 58 0.006678098 ubox
51 65 0.996270347 ubox
52 57 0.006624211 ubox
52 63 0.023776778 ubox
52 64 0.998092591 ubox
53 62 0.024738549 ubox
53 63 0.998083573 ubox
53 64 0.005090292 ubox
54 61 0.019907845 ubox
54 62 0.997047656 ubox
54 63 0.005832631 ubox
55 59 0.020185719 ubox
55 60 0.152038703 ubox
56 60 0.086155277 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 46 0.9500000 lbox
30 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
showpage
end
%%EOF
