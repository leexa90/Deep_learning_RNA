%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:25 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCACGCAGGCGGUUUGUUAAGUCAGAUGUGAAAUCCCCGGGCUCAACCUGGGAACUGCAUCUGAUACUGGCAAGCUUGAGUCUCGUACGAAGACUGACGCUCAGGUGCGUCGACUUGGAGGUUGUGCUUCGUGGCUUCCGGAGCUAACGCGUUAAGUCGAC\
) def
/coor [
[223.40600586 183.23588562]
[210.56349182 175.48538208]
[197.72099304 167.73489380]
[184.87849426 159.98440552]
[171.25167847 165.93820190]
[156.55815125 162.68788147]
[146.47816467 151.27529907]
[145.03437805 135.93835449]
[132.19187927 128.18786621]
[119.34937286 120.43737793]
[106.50686646 112.68688965]
[92.31464386 107.83087921]
[77.41606903 106.08948517]
[62.51749420 104.34809113]
[47.61891937 102.60669708]
[32.72034454 100.86530304]
[17.82176781 99.12390900]
[2.92319322 97.38251495]
[-11.97538185 95.64112091]
[-28.68026543 103.33465576]
[-42.35580063 92.37056732]
[-57.28534317 90.91840363]
[-72.21488190 89.46623993]
[-87.14442444 88.01408386]
[-102.07396698 86.56192017]
[-117.00350952 85.10975647]
[-131.93304443 83.65759277]
[-146.86259460 82.20542908]
[-161.79212952 80.75326538]
[-170.16348267 91.73866272]
[-182.77476501 97.09880066]
[-196.27835083 95.52738953]
[-207.14704895 87.54292297]
[-212.59542847 75.32476044]
[-227.49400330 73.58336639]
[-242.39257812 71.84197235]
[-257.29116821 70.10057831]
[-271.89627075 76.18346405]
[-283.63922119 67.02092743]
[-298.53781128 65.27953339]
[-310.77792358 75.27728271]
[-326.49386597 73.60858154]
[-336.36166382 61.26344681]
[-334.52688599 45.56602097]
[-322.07812500 35.82931137]
[-306.40097046 37.82993698]
[-296.79641724 50.38096237]
[-281.89782715 52.12235641]
[-268.35836792 45.91491699]
[-255.54975891 55.20200348]
[-240.65118408 56.94339752]
[-225.75260925 58.68479156]
[-210.85403442 60.42618561]
[-200.14363098 48.01550674]
[-183.98841858 44.38051224]
[-168.69096375 51.14166641]
[-160.33996582 65.82372284]
[-145.41043091 67.27588654]
[-130.48089600 68.72805023]
[-115.55134583 70.18021393]
[-100.62180328 71.63237762]
[-85.69226074 73.08454132]
[-70.76271820 74.53670502]
[-55.83317947 75.98886108]
[-40.90363693 77.44102478]
[-31.33648491 69.98833466]
[-18.85778999 71.10807037]
[-10.23398876 80.74254608]
[4.66458702 82.48394012]
[19.56316185 84.22533417]
[34.46173859 85.96672821]
[49.36031342 87.70812225]
[64.25888824 89.44951630]
[79.15746307 91.19091034]
[94.05603790 92.93230438]
[93.12283325 87.96031952]
[93.85431671 82.55494690]
[89.50811005 67.34241486]
[99.97196198 56.74255371]
[103.43120575 42.14688110]
[106.89044189 27.55120659]
[110.34967804 12.95553398]
[113.80891418 -1.64013886]
[117.12647247 -16.26866722]
[111.60686493 -31.71100998]
[122.42534637 -44.03548050]
[138.45278931 -40.56371689]
[143.20153809 -24.86717415]
[131.78648376 -13.09310913]
[133.45208740 -5.85447502]
[128.40458679 1.81909919]
[124.94535065 16.41477203]
[121.48611450 31.01044464]
[118.02687836 45.60611725]
[114.56763458 60.20178986]
[119.16127014 74.37034607]
[108.44998932 86.01418304]
[114.25735474 99.84438324]
[127.09986115 107.59487915]
[139.94236755 115.34536743]
[152.78486633 123.09585571]
[167.02726746 117.22557831]
[181.82240295 120.82521057]
[191.54598999 132.31068420]
[192.62898254 147.14190674]
[205.47148132 154.89239502]
[218.31399536 162.64288330]
[231.15649414 170.39337158]
[244.07354736 178.01898193]
[257.06393433 185.51898193]
[270.05429077 193.01898193]
[283.04467773 200.51898193]
[296.03506470 208.01898193]
[309.02545166 215.51898193]
[322.01583862 223.01898193]
[335.00619507 230.51898193]
[347.99658203 238.01898193]
[360.98696899 245.51898193]
[376.80691528 245.71836853]
[383.96041870 258.78271484]
[397.02291870 266.15640259]
[410.15628052 273.40307617]
[423.28964233 280.64978027]
[436.42303467 287.89645386]
[445.49758911 289.31527710]
[449.73883057 295.41314697]
[462.72921753 302.91314697]
[475.71957397 310.41314697]
[488.70996094 317.91314697]
[501.70034790 325.41314697]
[514.69073486 332.91314697]
[523.73608398 334.50765991]
[527.85827637 340.68661499]
[544.25592041 340.46347046]
[552.41436768 354.68920898]
[543.94091797 368.72961426]
[527.55236816 368.14111328]
[520.10778809 353.52911377]
[507.19073486 345.90353394]
[494.20034790 338.40353394]
[481.20996094 330.90353394]
[468.21957397 323.40353394]
[455.22921753 315.90353394]
[442.23883057 308.40353394]
[429.17633057 301.02984619]
[416.04296875 293.78314209]
[402.90957642 286.53646851]
[389.77621460 279.28976440]
[382.36398315 278.80932617]
[376.46041870 271.77307129]
[361.56961060 272.11013794]
[353.48696899 258.50936890]
[340.49658203 251.00935364]
[327.50619507 243.50935364]
[314.51583862 236.00935364]
[301.52545166 228.50935364]
[288.53506470 221.00935364]
[275.54467773 213.50935364]
[262.55429077 206.00935364]
[249.56391907 198.50935364]
[236.57354736 191.00935364]
] def
/pairs [
[1 108]
[2 107]
[3 106]
[4 105]
[8 101]
[9 100]
[10 99]
[11 98]
[12 75]
[13 74]
[14 73]
[15 72]
[16 71]
[17 70]
[18 69]
[19 68]
[21 65]
[22 64]
[23 63]
[24 62]
[25 61]
[26 60]
[27 59]
[28 58]
[29 57]
[34 53]
[35 52]
[36 51]
[37 50]
[39 48]
[40 47]
[77 97]
[79 95]
[80 94]
[81 93]
[82 92]
[83 91]
[84 89]
[109 161]
[110 160]
[111 159]
[112 158]
[113 157]
[114 156]
[115 155]
[116 154]
[117 153]
[118 152]
[120 150]
[121 148]
[122 147]
[123 146]
[124 145]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
