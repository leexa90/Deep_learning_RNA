%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:27 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GACUCGGGGUGCCCUUCUGCGUGAAGGCUGAGAAAUACCCGUAUCACCUGAUCUGGAUAAUGCCAGCGUAGGGAAGUU\
) def
/coor [
[129.56536865 115.57482147]
[115.06370544 111.74057770]
[102.48703766 118.93596649]
[88.47888184 115.23220825]
[81.10205078 102.76110077]
[66.60037231 98.92684937]
[52.09870148 95.09259796]
[37.59702682 91.25834656]
[19.47972488 105.19594574]
[-2.95146441 102.30808258]
[-16.65158463 84.61836243]
[-31.64861870 84.91659546]
[-46.64565277 85.21482849]
[-55.43443680 88.58782196]
[-62.24211884 85.21482849]
[-77.23915863 84.91659546]
[-92.23619080 84.61836243]
[-104.75340271 94.65324402]
[-120.37101746 90.98312378]
[-127.10852814 76.42340088]
[-119.79750061 62.14305115]
[-104.04632568 59.09673309]
[-91.93795776 69.62132263]
[-76.94092560 69.91955566]
[-61.94388580 70.21778870]
[-46.94388580 70.21778870]
[-31.94685173 69.91955566]
[-16.94981766 69.62132263]
[-13.85469532 61.75217438]
[-8.61628532 55.07920456]
[-1.66205108 50.17249298]
[6.43314743 47.45696259]
[14.99456692 47.17559433]
[23.30381393 49.36778641]
[30.65912819 53.86471176]
[36.43465042 60.30223083]
[40.13365936 68.15031433]
[41.43127823 76.75667572]
[55.93294907 80.59092712]
[70.43462372 84.42517853]
[84.93629456 88.25942230]
[97.51296234 81.06403351]
[111.52111816 84.76779175]
[118.89794922 97.23889923]
[133.39962769 101.07315063]
[155.32264709 91.73584747]
[172.94381714 106.77372742]
[187.94085693 107.07196045]
[202.93789673 107.37019348]
[217.93492126 107.66842651]
[229.28245544 96.99737549]
[244.48733521 97.51346588]
[254.59062195 108.39736176]
[269.58764648 108.69559479]
[284.58468628 108.99382782]
[299.58172607 109.29206085]
[310.80194092 98.16180420]
[326.60552979 98.30895233]
[337.61654663 109.64620209]
[337.30230713 125.44736481]
[325.84927368 136.33789062]
[310.05233765 135.85662842]
[299.28347778 124.28909302]
[284.28646851 123.99085999]
[269.28942871 123.69262695]
[254.29238892 123.39439392]
[243.76438904 133.86802673]
[228.55101013 133.77920532]
[217.63668823 122.66545868]
[202.63966370 122.36722565]
[187.64262390 122.06899261]
[172.64558411 121.77075958]
[169.01914978 128.10304260]
[163.46334839 132.91502380]
[156.58009338 135.63926697]
[149.13049316 135.93701172]
[141.95080566 133.73992920]
[135.85853577 129.26167297]
] def
/pairs [
[1 45]
[2 44]
[5 41]
[6 40]
[7 39]
[8 38]
[11 28]
[12 27]
[13 26]
[15 25]
[16 24]
[17 23]
[47 72]
[48 71]
[49 70]
[50 69]
[53 66]
[54 65]
[55 64]
[56 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
