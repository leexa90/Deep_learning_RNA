%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1zn1_b)
} def

/sequence { (\
GGCCGUAACUAUAACGGUCCUAAGGUAGCGAAAUUCCUUGUCGGGUAAGUUCCGACCUG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.004417513 ubox
1 19 0.857091575 ubox
1 20 0.487355125 ubox
1 21 0.013952946 ubox
1 37 0.003199409 ubox
1 57 0.017452248 ubox
1 58 0.005304518 ubox
2 18 0.872810451 ubox
2 19 0.485133715 ubox
2 20 0.012101776 ubox
2 26 0.003897631 ubox
2 56 0.011018304 ubox
2 57 0.004845914 ubox
3 17 0.999898369 ubox
3 25 0.003983101 ubox
4 16 0.999916639 ubox
4 24 0.003981381 ubox
4 30 0.005861547 ubox
4 54 0.006816810 ubox
5 12 0.004342470 ubox
5 15 0.999370138 ubox
5 29 0.005925992 ubox
5 53 0.006819915 ubox
6 11 0.010184851 ubox
6 13 0.158433411 ubox
6 14 0.968462994 ubox
6 28 0.005858381 ubox
7 12 0.207813539 ubox
7 51 0.006360814 ubox
8 12 0.148525501 ubox
8 18 0.003756352 ubox
8 26 0.005707344 ubox
8 50 0.006866122 ubox
9 17 0.003896664 ubox
9 25 0.005856663 ubox
9 49 0.006872926 ubox
10 14 0.004132829 ubox
10 16 0.003779688 ubox
10 24 0.005713291 ubox
10 48 0.006287532 ubox
11 46 0.003299327 ubox
12 22 0.004374204 ubox
12 45 0.003184233 ubox
13 21 0.004380096 ubox
15 43 0.006218276 ubox
16 42 0.006225508 ubox
17 41 0.005989744 ubox
18 31 0.007283980 ubox
19 25 0.010365062 ubox
19 30 0.012368365 ubox
20 24 0.012538627 ubox
20 25 0.020455847 ubox
20 28 0.044201710 ubox
20 30 0.009913794 ubox
20 40 0.038157559 ubox
20 59 0.019535193 ubox
21 27 0.044553150 ubox
21 28 0.004869103 ubox
21 30 0.004152458 ubox
21 31 0.004308886 ubox
21 32 0.007878543 ubox
21 40 0.210551049 ubox
21 59 0.019386826 ubox
22 26 0.039553610 ubox
22 35 0.005980114 ubox
22 38 0.014664163 ubox
22 39 0.848421832 ubox
22 58 0.017618668 ubox
23 34 0.006691025 ubox
23 35 0.004971323 ubox
23 38 0.923222478 ubox
23 39 0.043138676 ubox
23 58 0.282718112 ubox
24 29 0.037562453 ubox
24 34 0.005388747 ubox
24 35 0.019196575 ubox
24 36 0.021235015 ubox
24 37 0.932742413 ubox
24 38 0.039684400 ubox
24 53 0.012292221 ubox
24 57 0.292022997 ubox
24 58 0.007689392 ubox
25 29 0.008653961 ubox
25 34 0.025906008 ubox
25 35 0.020556758 ubox
25 36 0.930962274 ubox
25 37 0.039898231 ubox
25 39 0.008135899 ubox
25 52 0.012304772 ubox
25 56 0.291702229 ubox
25 57 0.008279958 ubox
26 30 0.008771959 ubox
26 31 0.023128128 ubox
26 32 0.029099010 ubox
26 33 0.057223702 ubox
26 40 0.004382607 ubox
26 54 0.007511660 ubox
26 55 0.272711840 ubox
26 59 0.014855453 ubox
27 34 0.493807609 ubox
27 35 0.263583444 ubox
27 38 0.048312750 ubox
27 39 0.011893803 ubox
27 51 0.024265092 ubox
27 58 0.018315501 ubox
28 34 0.230349558 ubox
28 35 0.040246479 ubox
28 36 0.006727116 ubox
28 37 0.052225274 ubox
28 38 0.012425373 ubox
28 39 0.003619626 ubox
28 41 0.072176698 ubox
28 42 0.003277135 ubox
28 50 0.025281575 ubox
28 52 0.012710497 ubox
28 53 0.251924972 ubox
28 57 0.018595955 ubox
29 40 0.075971076 ubox
29 43 0.006907938 ubox
29 49 0.025490387 ubox
29 54 0.056715620 ubox
30 34 0.010465660 ubox
30 35 0.023754543 ubox
30 36 0.059668708 ubox
30 37 0.024876200 ubox
30 39 0.076544310 ubox
30 42 0.007189528 ubox
30 50 0.008147647 ubox
30 51 0.040688615 ubox
30 52 0.267771157 ubox
30 53 0.053025829 ubox
30 57 0.005795378 ubox
31 35 0.052677417 ubox
31 38 0.073005874 ubox
31 39 0.011159185 ubox
31 41 0.006817099 ubox
31 50 0.042324414 ubox
31 51 0.267574603 ubox
32 38 0.011239326 ubox
32 39 0.010438144 ubox
32 46 0.004492120 ubox
32 50 0.246245043 ubox
32 51 0.048659218 ubox
33 38 0.009244782 ubox
33 39 0.008822046 ubox
33 41 0.003512979 ubox
33 46 0.020251227 ubox
33 50 0.055427939 ubox
34 40 0.003750428 ubox
34 45 0.018997126 ubox
34 47 0.023067223 ubox
34 48 0.163069284 ubox
34 49 0.057692999 ubox
35 44 0.017604353 ubox
35 45 0.107853806 ubox
35 47 0.165833794 ubox
35 48 0.043561522 ubox
36 43 0.017563440 ubox
36 44 0.113684983 ubox
36 45 0.254694829 ubox
36 59 0.012001720 ubox
37 43 0.113740017 ubox
37 44 0.254682396 ubox
37 45 0.024841946 ubox
37 49 0.010069227 ubox
37 59 0.078748962 ubox
38 43 0.232643783 ubox
38 44 0.024421480 ubox
38 45 0.003892014 ubox
38 48 0.010107009 ubox
38 59 0.014005363 ubox
39 43 0.019567046 ubox
39 44 0.004361312 ubox
39 47 0.010050945 ubox
39 59 0.012184234 ubox
40 46 0.009339318 ubox
40 56 0.924068879 ubox
40 57 0.058581943 ubox
40 58 0.005016000 ubox
41 55 0.946998669 ubox
42 54 0.954203137 ubox
42 59 0.092542466 ubox
43 52 0.003759903 ubox
43 53 0.954011255 ubox
43 57 0.005593375 ubox
43 58 0.098880692 ubox
44 51 0.004747770 ubox
44 52 0.953534335 ubox
44 53 0.028441417 ubox
44 56 0.005528964 ubox
44 57 0.099610436 ubox
45 50 0.021815838 ubox
45 51 0.900246002 ubox
45 52 0.038115525 ubox
45 56 0.099611811 ubox
46 54 0.003297718 ubox
46 55 0.098791981 ubox
47 51 0.007468759 ubox
49 53 0.015530425 ubox
1 19 0.9500000 lbox
2 18 0.9500000 lbox
3 17 0.9500000 lbox
4 16 0.9500000 lbox
5 15 0.9500000 lbox
6 14 0.9500000 lbox
22 39 0.9500000 lbox
23 38 0.9500000 lbox
24 37 0.9500000 lbox
25 36 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
showpage
end
%%EOF
