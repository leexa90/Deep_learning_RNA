%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:30 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGCCGUAACUAUAACGGUCUCGGGUAAGUUCCGACUGAUACCGCCCAAGAGUUCAUAUCGACGGCGGUGUUUGGAUGGCUGUUCGCCAUCUGCUCCUAGUACGAGAGGACCGGAGUGG\
) def
/coor [
[83.57910919 136.44819641]
[76.02202606 149.40545654]
[68.46493530 162.36271667]
[60.90785217 175.31996155]
[53.35076904 188.27722168]
[45.79368210 201.23448181]
[51.24728012 215.89027405]
[45.95574188 230.60534668]
[32.41756821 238.43171692]
[17.02507401 235.67398071]
[7.04612112 223.63427734]
[7.19246769 207.99737549]
[17.39501381 196.14654541]
[32.83642960 193.67739868]
[40.39351273 180.72013855]
[47.95059586 167.76287842]
[55.50768280 154.80561829]
[63.06476593 141.84837341]
[70.62184906 128.89111328]
[62.22666550 116.46047211]
[47.38451004 118.63082123]
[32.54235458 120.80117035]
[17.70019722 122.97152710]
[2.85804224 125.14187622]
[-7.83992147 137.09733582]
[-23.84833336 136.04362488]
[-32.88690948 122.78905487]
[-28.02202797 107.50139618]
[-12.98561001 101.90803528]
[0.68769228 110.29972076]
[15.52984810 108.12937164]
[30.37200356 105.95901489]
[45.21415710 103.78866577]
[60.05631638 101.61831665]
[64.01006317 87.84597015]
[72.27992249 77.03503418]
[83.31626892 70.36624146]
[79.02124786 55.99430084]
[74.72622681 41.62235641]
[70.43119812 27.25041199]
[66.13617706 12.87846756]
[61.84115601 -1.49347675]
[57.54613113 -15.86542130]
[53.25111008 -30.23736572]
[48.95608521 -44.60931015]
[34.46664429 -49.84020233]
[25.93534088 -62.45250702]
[26.46028137 -77.49207306]
[35.63069534 -89.19853973]
[31.33567429 -103.57048798]
[16.90923882 -109.60472107]
[9.78265667 -123.52397919]
[13.32088089 -138.75602722]
[25.85327148 -148.10873413]
[41.46241379 -147.16606140]
[52.77815247 -136.37309265]
[54.45753860 -120.82594299]
[45.70761871 -107.86550903]
[50.00263977 -93.49356079]
[64.09258270 -88.73839569]
[72.78352356 -76.45298004]
[72.57141876 -61.22772598]
[63.32802963 -48.90433121]
[67.62305450 -34.53238678]
[71.91807556 -20.16044426]
[76.21309662 -5.78849936]
[80.50812531 8.58344460]
[84.80314636 22.95538902]
[89.09816742 37.32733154]
[93.39318848 51.69927597]
[97.68820953 66.07122040]
[120.26120758 69.35150909]
[137.28512573 87.04072571]
[151.19946289 81.43795013]
[165.11380005 75.83517456]
[179.02813721 70.23239899]
[192.94248962 64.62961578]
[206.85682678 59.02684402]
[220.77116394 53.42406464]
[228.35461426 39.28649902]
[244.16130066 36.54270554]
[256.06567383 47.29748917]
[254.93572998 63.30070114]
[241.63825989 72.27604675]
[226.37394714 67.33840942]
[212.45959473 72.94118500]
[198.54525757 78.54396057]
[184.63092041 84.14673615]
[170.71658325 89.74951172]
[156.80223083 95.35228729]
[142.88789368 100.95507050]
[139.93727112 115.66199493]
[150.61364746 126.19836426]
[161.29002380 136.73472595]
[171.96638489 147.27110291]
[182.64276123 157.80746460]
[195.60321045 158.52438354]
[204.28454590 167.62567139]
[204.38134766 179.80052185]
[214.77587891 190.61503601]
[229.91731262 195.20280457]
[233.15855408 209.74047852]
[249.05355835 213.77542114]
[253.24568176 229.62969971]
[241.42242432 240.99378967]
[225.74653625 236.17729187]
[222.34403992 220.13499451]
[207.94609070 216.32073975]
[203.96134949 201.00956726]
[193.56683350 190.19503784]
[176.50999451 186.30351257]
[172.10639954 168.48384094]
[161.43002319 157.94747925]
[150.75364685 147.41110229]
[140.07727051 136.87474060]
[129.40089417 126.33837128]
[119.82666016 134.27793884]
[108.22263336 138.86444092]
] def
/pairs [
[1 19]
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[20 34]
[21 33]
[22 32]
[23 31]
[24 30]
[37 71]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[49 59]
[50 58]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[92 116]
[93 115]
[94 114]
[95 113]
[96 112]
[99 110]
[100 109]
[102 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
