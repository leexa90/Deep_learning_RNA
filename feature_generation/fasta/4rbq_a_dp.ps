%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4rbq_a)
} def

/sequence { (\
GAGAAGAAAGGGAAAUUUUUUUUUUUUUUUU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.006472822 ubox
1 23 0.010170888 ubox
1 24 0.063044815 ubox
1 25 0.070949874 ubox
1 26 0.126816170 ubox
1 27 0.098162891 ubox
1 28 0.150275112 ubox
1 29 0.204479825 ubox
1 30 0.351962699 ubox
1 31 0.427415912 ubox
2 21 0.007430628 ubox
2 22 0.011626556 ubox
2 23 0.072442952 ubox
2 24 0.081439784 ubox
2 25 0.145680127 ubox
2 26 0.112558087 ubox
2 27 0.172549053 ubox
2 28 0.234732641 ubox
2 29 0.404116862 ubox
2 30 0.500612569 ubox
2 31 0.340608744 ubox
3 20 0.007755646 ubox
3 21 0.012039575 ubox
3 22 0.075765833 ubox
3 23 0.085066341 ubox
3 24 0.152318702 ubox
3 25 0.117422976 ubox
3 26 0.180246407 ubox
3 27 0.245107073 ubox
3 28 0.422053600 ubox
3 29 0.524960139 ubox
3 30 0.431937810 ubox
3 31 0.247979463 ubox
4 19 0.007793856 ubox
4 20 0.011984831 ubox
4 21 0.076262701 ubox
4 22 0.085511019 ubox
4 23 0.153292386 ubox
4 24 0.117926801 ubox
4 25 0.181280281 ubox
4 26 0.246410023 ubox
4 27 0.424438863 ubox
4 28 0.527573853 ubox
4 29 0.441747685 ubox
4 30 0.274559797 ubox
4 31 0.240343217 ubox
5 18 0.007784366 ubox
5 19 0.011858498 ubox
5 20 0.076357761 ubox
5 21 0.085498964 ubox
5 22 0.153447159 ubox
5 23 0.117773791 ubox
5 24 0.181312696 ubox
5 25 0.246353104 ubox
5 26 0.424470880 ubox
5 27 0.527007299 ubox
5 28 0.443432386 ubox
5 29 0.279664698 ubox
5 30 0.281789620 ubox
5 31 0.096475390 ubox
6 17 0.007764237 ubox
6 18 0.011756324 ubox
6 19 0.076605401 ubox
6 20 0.085665304 ubox
6 21 0.153902570 ubox
6 22 0.117853983 ubox
6 23 0.181683135 ubox
6 24 0.246753135 ubox
6 25 0.425208363 ubox
6 26 0.527253376 ubox
6 27 0.444770332 ubox
6 28 0.281810018 ubox
6 29 0.296513978 ubox
6 30 0.126390067 ubox
6 31 0.075325846 ubox
7 16 0.007651055 ubox
7 17 0.011573675 ubox
7 18 0.076737781 ubox
7 19 0.085701016 ubox
7 20 0.154154495 ubox
7 21 0.117794618 ubox
7 22 0.181863156 ubox
7 23 0.246891372 ubox
7 24 0.425589422 ubox
7 25 0.527066165 ubox
7 26 0.445182899 ubox
7 27 0.281874004 ubox
7 28 0.298731882 ubox
7 29 0.129504283 ubox
7 30 0.083535174 ubox
7 31 0.017791503 ubox
8 16 0.010612419 ubox
8 17 0.076716891 ubox
8 18 0.085579465 ubox
8 19 0.154219517 ubox
8 20 0.117543554 ubox
8 21 0.181783118 ubox
8 22 0.246679781 ubox
8 23 0.425386176 ubox
8 24 0.526108319 ubox
8 25 0.444928606 ubox
8 26 0.281378664 ubox
8 27 0.299465410 ubox
8 28 0.130127390 ubox
8 29 0.085288854 ubox
8 30 0.020797609 ubox
8 31 0.011352788 ubox
9 16 0.074607065 ubox
9 17 0.085073454 ubox
9 18 0.154069751 ubox
9 19 0.117021562 ubox
9 20 0.181486043 ubox
9 21 0.246236926 ubox
9 22 0.424893933 ubox
9 23 0.524722302 ubox
9 24 0.444271963 ubox
9 25 0.280583838 ubox
9 26 0.299731702 ubox
9 27 0.130126924 ubox
9 28 0.085630492 ubox
9 29 0.021361980 ubox
9 30 0.013611342 ubox
10 16 0.081271284 ubox
10 17 0.149185311 ubox
10 18 0.115187433 ubox
10 19 0.180351110 ubox
10 20 0.244941010 ubox
10 21 0.423508449 ubox
10 22 0.522220620 ubox
10 23 0.442787827 ubox
10 24 0.278975709 ubox
10 25 0.299651041 ubox
10 26 0.129858251 ubox
10 27 0.085619599 ubox
10 28 0.021477544 ubox
10 29 0.014341040 ubox
10 30 0.003604903 ubox
11 16 0.133147127 ubox
11 17 0.107372060 ubox
11 18 0.169132019 ubox
11 19 0.243014270 ubox
11 20 0.422585842 ubox
11 21 0.520612953 ubox
11 22 0.442736621 ubox
11 23 0.278403380 ubox
11 24 0.300809190 ubox
11 25 0.130060254 ubox
11 26 0.085815508 ubox
11 27 0.021548567 ubox
11 28 0.014690157 ubox
11 29 0.003893132 ubox
12 16 0.070118394 ubox
12 17 0.134062620 ubox
12 18 0.235654691 ubox
12 19 0.413572147 ubox
12 20 0.520271749 ubox
12 21 0.444597775 ubox
12 22 0.279272105 ubox
12 23 0.303826252 ubox
12 24 0.131114831 ubox
12 25 0.086508283 ubox
12 26 0.021718685 ubox
12 27 0.014964283 ubox
12 28 0.004024213 ubox
13 17 0.201422433 ubox
13 18 0.383664254 ubox
13 19 0.512795923 ubox
13 20 0.440211375 ubox
13 21 0.279110867 ubox
13 22 0.305247831 ubox
13 23 0.131479998 ubox
13 24 0.086783735 ubox
13 25 0.021758774 ubox
13 26 0.015044753 ubox
13 27 0.004032598 ubox
14 18 0.391214917 ubox
14 19 0.383635842 ubox
14 20 0.271025125 ubox
14 21 0.303055107 ubox
14 22 0.131172624 ubox
14 23 0.086731056 ubox
14 24 0.021658818 ubox
14 25 0.015051063 ubox
14 26 0.004001895 ubox
15 19 0.207044097 ubox
15 20 0.289523929 ubox
15 21 0.128536532 ubox
15 22 0.084296487 ubox
15 23 0.021262388 ubox
15 24 0.014985053 ubox
15 25 0.003890046 ubox
1 30 0.9500000 lbox
2 29 0.9500000 lbox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
showpage
end
%%EOF
