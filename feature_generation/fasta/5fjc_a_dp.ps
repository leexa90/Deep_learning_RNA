%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:49 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5fjc_a)
} def

/sequence { (\
GCUUAUCAAGAGAGGGGGAGUGACUGGCGCGAAGAACCCCGGCAACCAGAAAUGGUGCCAAUUCCUGCAGCGGAAACGUUGAAAGAUGAGCCG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 91 0.992230302 ubox
1 92 0.094405091 ubox
2 90 0.999923345 ubox
3 89 0.999660434 ubox
4 88 0.999300653 ubox
5 87 0.998763363 ubox
6 13 0.029376850 ubox
6 82 0.006240394 ubox
6 86 0.998195451 ubox
6 89 0.003689941 ubox
7 12 0.037629568 ubox
7 14 0.008018703 ubox
7 67 0.006266376 ubox
7 81 0.007028471 ubox
7 85 0.994682299 ubox
7 88 0.004372065 ubox
8 63 0.007189718 ubox
8 66 0.017640081 ubox
8 80 0.007870580 ubox
8 87 0.003966195 ubox
9 62 0.007064256 ubox
9 63 0.005235700 ubox
9 66 0.160587962 ubox
9 79 0.006871075 ubox
9 80 0.004399836 ubox
10 40 0.008862609 ubox
10 62 0.004165317 ubox
10 63 0.010159665 ubox
10 64 0.074780095 ubox
10 65 0.165458457 ubox
10 66 0.009848206 ubox
10 68 0.006968935 ubox
10 77 0.003734403 ubox
10 79 0.004701932 ubox
10 80 0.012896341 ubox
11 62 0.010318494 ubox
11 63 0.073954183 ubox
11 66 0.071898922 ubox
11 79 0.011968704 ubox
11 80 0.014465613 ubox
12 39 0.006192819 ubox
12 40 0.061803005 ubox
12 43 0.003354962 ubox
12 62 0.050086128 ubox
12 63 0.030707334 ubox
12 64 0.159651875 ubox
12 65 0.072910007 ubox
12 66 0.004780841 ubox
12 68 0.008052005 ubox
12 77 0.008724645 ubox
12 79 0.012651391 ubox
12 80 0.035303340 ubox
13 62 0.030583498 ubox
13 63 0.153047331 ubox
13 66 0.132428884 ubox
13 79 0.034156880 ubox
13 80 0.006044478 ubox
14 38 0.011832347 ubox
14 39 0.091112298 ubox
14 40 0.943584913 ubox
14 62 0.048116254 ubox
14 63 0.004113040 ubox
14 64 0.017169330 ubox
14 65 0.136145562 ubox
14 66 0.009776799 ubox
14 68 0.026657877 ubox
14 77 0.011157668 ubox
15 37 0.011844325 ubox
15 38 0.091294471 ubox
15 39 0.944764570 ubox
15 40 0.245795857 ubox
15 63 0.009879789 ubox
15 64 0.134725012 ubox
15 65 0.010595696 ubox
15 66 0.011312800 ubox
15 77 0.025879300 ubox
16 25 0.004002889 ubox
16 37 0.091316065 ubox
16 38 0.944729807 ubox
16 39 0.246334117 ubox
16 40 0.187412838 ubox
16 63 0.020292123 ubox
16 64 0.009047815 ubox
16 65 0.011805509 ubox
16 66 0.043492043 ubox
17 24 0.004795614 ubox
17 37 0.944293300 ubox
17 38 0.246409501 ubox
17 39 0.187889668 ubox
17 40 0.023321149 ubox
17 62 0.006364388 ubox
17 63 0.004565348 ubox
17 64 0.011680095 ubox
17 65 0.045070684 ubox
18 24 0.005517927 ubox
18 28 0.004515726 ubox
18 30 0.064395930 ubox
18 37 0.244664142 ubox
18 38 0.187951617 ubox
18 39 0.023335230 ubox
18 63 0.011195009 ubox
18 64 0.045109505 ubox
19 25 0.013768415 ubox
19 62 0.010414172 ubox
19 63 0.044982820 ubox
20 24 0.013938526 ubox
20 25 0.004316236 ubox
20 28 0.141891295 ubox
20 30 0.873774726 ubox
20 37 0.189100094 ubox
20 38 0.003437109 ubox
20 62 0.043695532 ubox
21 26 0.006129836 ubox
21 27 0.141215627 ubox
21 29 0.873627813 ubox
21 31 0.178450327 ubox
21 32 0.107762823 ubox
21 33 0.128766099 ubox
21 34 0.079507220 ubox
21 35 0.031519469 ubox
21 36 0.191925609 ubox
21 60 0.003401811 ubox
21 61 0.042967119 ubox
22 28 0.868701232 ubox
22 30 0.186141607 ubox
22 37 0.003563181 ubox
22 40 0.003761274 ubox
22 59 0.003647735 ubox
24 29 0.176192687 ubox
24 31 0.139143016 ubox
24 34 0.209733503 ubox
24 42 0.003993212 ubox
25 29 0.017076681 ubox
25 31 0.045317211 ubox
25 32 0.046276252 ubox
25 33 0.209025673 ubox
25 34 0.009192441 ubox
25 35 0.004729159 ubox
25 36 0.007030202 ubox
25 41 0.004516260 ubox
25 60 0.031354012 ubox
26 30 0.050717929 ubox
26 38 0.012568274 ubox
26 39 0.009824696 ubox
26 40 0.025245736 ubox
26 59 0.031714629 ubox
27 37 0.012619166 ubox
27 38 0.009850814 ubox
27 39 0.025229999 ubox
27 58 0.031716480 ubox
28 34 0.037307502 ubox
28 57 0.031691913 ubox
29 37 0.015417481 ubox
29 38 0.018465836 ubox
29 40 0.004153296 ubox
29 43 0.022151513 ubox
29 56 0.020233580 ubox
30 34 0.012060680 ubox
30 41 0.011944450 ubox
30 42 0.021000444 ubox
30 55 0.020002591 ubox
31 37 0.013032756 ubox
31 38 0.007064399 ubox
31 39 0.003687153 ubox
31 40 0.014862411 ubox
32 53 0.012476257 ubox
34 38 0.003473360 ubox
34 39 0.005732566 ubox
34 40 0.005706659 ubox
37 49 0.005680304 ubox
38 49 0.003895268 ubox
39 49 0.006828552 ubox
41 46 0.006233255 ubox
41 47 0.011994583 ubox
41 59 0.998252892 ubox
41 65 0.003631282 ubox
42 46 0.011818779 ubox
42 58 0.999418328 ubox
42 59 0.004655655 ubox
42 64 0.003205272 ubox
43 57 0.998705115 ubox
44 56 0.704430322 ubox
45 56 0.705683229 ubox
46 54 0.008019792 ubox
46 55 0.999600331 ubox
47 54 0.999665234 ubox
48 53 0.964348361 ubox
49 53 0.007528668 ubox
59 67 0.013254437 ubox
59 81 0.007515302 ubox
60 66 0.037836753 ubox
60 79 0.004096034 ubox
60 80 0.013394328 ubox
61 66 0.041960091 ubox
61 79 0.014153471 ubox
61 87 0.007184373 ubox
62 67 0.045502090 ubox
62 74 0.003480638 ubox
62 75 0.094998966 ubox
62 76 0.005622038 ubox
62 78 0.011789674 ubox
62 82 0.011224057 ubox
62 83 0.051048392 ubox
62 84 0.032706567 ubox
62 86 0.007770670 ubox
63 67 0.018642353 ubox
63 74 0.109785230 ubox
63 75 0.005004050 ubox
63 81 0.004058809 ubox
63 82 0.058017223 ubox
63 83 0.029285632 ubox
63 84 0.040243735 ubox
63 85 0.007822244 ubox
63 86 0.031238397 ubox
64 73 0.111270840 ubox
64 81 0.046977812 ubox
64 85 0.040049335 ubox
65 72 0.111143482 ubox
65 73 0.007604331 ubox
65 81 0.011620714 ubox
65 85 0.074270234 ubox
66 70 0.005971523 ubox
66 72 0.007860028 ubox
66 81 0.005308381 ubox
66 82 0.155481553 ubox
66 83 0.183501850 ubox
66 84 0.126775831 ubox
67 71 0.013643470 ubox
67 79 0.005729243 ubox
67 80 0.004065900 ubox
68 78 0.005709616 ubox
68 81 0.987686702 ubox
69 80 0.991523430 ubox
70 79 0.993146898 ubox
71 78 0.993685725 ubox
72 77 0.990941384 ubox
73 77 0.007077466 ubox
77 81 0.006456107 ubox
79 84 0.003403469 ubox
1 91 0.9500000 lbox
2 90 0.9500000 lbox
3 89 0.9500000 lbox
4 88 0.9500000 lbox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
7 85 0.9500000 lbox
14 40 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
44 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
68 81 0.9500000 lbox
69 80 0.9500000 lbox
70 79 0.9500000 lbox
71 78 0.9500000 lbox
72 77 0.9500000 lbox
showpage
end
%%EOF
