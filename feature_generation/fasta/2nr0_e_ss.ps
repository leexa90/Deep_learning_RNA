%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:27 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGAGGUGGUGGAAUUGGUAGACACGCUACCUUGAGGUGGUAGUGCCCAAUAGGGCUUACGGGUUCAAGUCCCGUCCUCGG\
) def
/coor [
[104.56588745 256.63082886]
[103.98425293 241.64212036]
[103.40262604 226.65339661]
[102.82099152 211.66467285]
[102.23936462 196.67596436]
[101.36718750 181.70133972]
[100.20480347 166.74644470]
[99.04241943 151.79154968]
[95.28681183 145.19670105]
[98.13642120 136.23617554]
[97.55478668 121.24745178]
[89.87811279 134.13421631]
[74.92661285 135.33950806]
[65.28476715 123.84886932]
[69.06799316 109.33380127]
[83.09206390 104.01145172]
[68.43206024 100.83589172]
[53.77205276 97.66033173]
[39.11204529 94.48477173]
[24.45203590 91.30921936]
[10.23925877 98.75075531]
[-4.38157177 92.14690399]
[-8.19460583 76.56356812]
[1.72519040 63.95495224]
[17.76819801 63.99330521]
[27.62759399 76.64920807]
[42.28760147 79.82476807]
[56.94760895 83.00032806]
[71.60762024 86.17588043]
[86.26762390 89.35144043]
[100.36301422 84.22113800]
[109.55202484 72.36524963]
[118.74102783 60.50935745]
[127.93003845 48.65346909]
[137.11904907 36.79758072]
[139.45753479 21.15015030]
[153.36978149 15.83048153]
[155.70826721 0.18305223]
[169.62049866 -5.13661575]
[178.80950928 -16.99250603]
[187.99851990 -28.84839630]
[197.18753052 -40.70428467]
[200.07971191 -49.65117264]
[206.96992493 -52.83256531]
[216.61174011 -64.32323456]
[226.25355530 -75.81389618]
[235.89537048 -87.30456543]
[238.20863342 -103.53974152]
[253.52415466 -109.40207672]
[266.08663940 -98.86090851]
[262.97286987 -82.76008606]
[247.38604736 -77.66275024]
[237.74423218 -66.17208099]
[228.10241699 -54.68141937]
[218.46060181 -43.19075012]
[209.04341125 -31.51527786]
[199.85440063 -19.65938759]
[190.66540527 -7.80349779]
[181.47639465 4.05239248]
[179.79516602 18.85180855]
[165.22566223 25.01948929]
[163.54443359 39.81890488]
[148.97494507 45.98658752]
[139.78593445 57.84247589]
[130.59692383 69.69836426]
[121.40791321 81.55426025]
[112.21890259 93.41014862]
[118.36277008 104.98989105]
[112.54351044 120.66581726]
[113.12513733 135.65454102]
[113.99731445 150.62916565]
[115.15969849 165.58406067]
[116.32208252 180.53895569]
[120.19267273 189.10807800]
[117.22808075 196.09432983]
[117.80971527 211.08305359]
[118.39134216 226.07176208]
[118.97297668 241.06048584]
[119.55460358 256.04919434]
[122.49051666 275.20724487]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[5 75]
[6 73]
[7 72]
[8 71]
[10 70]
[11 69]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[31 67]
[32 66]
[33 65]
[34 64]
[35 63]
[37 61]
[39 59]
[40 58]
[41 57]
[42 56]
[44 55]
[45 54]
[46 53]
[47 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
