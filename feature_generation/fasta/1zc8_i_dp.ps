%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1zc8_i)
} def

/sequence { (\
AUCGCGUGGAAGCCCUGCCUGGGGUUGAAGCGUUAAAACUUAAUCAGGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.011063567 ubox
1 33 0.030282165 ubox
1 34 0.101152307 ubox
1 40 0.005129085 ubox
1 41 0.007009110 ubox
1 44 0.006268979 ubox
2 9 0.004396872 ubox
2 10 0.025792774 ubox
2 32 0.007800920 ubox
2 35 0.221622418 ubox
2 36 0.053270225 ubox
2 37 0.051458042 ubox
2 38 0.013866826 ubox
2 42 0.004547616 ubox
2 43 0.006875242 ubox
2 46 0.003407420 ubox
2 48 0.027503397 ubox
3 8 0.006791598 ubox
3 9 0.027612144 ubox
3 12 0.004291985 ubox
3 32 0.280710829 ubox
3 47 0.037206294 ubox
3 48 0.011608432 ubox
4 13 0.119281541 ubox
4 14 0.011680999 ubox
4 15 0.013869062 ubox
4 18 0.011413058 ubox
4 31 0.292314345 ubox
4 33 0.902248394 ubox
4 34 0.048182243 ubox
4 39 0.008551295 ubox
4 45 0.006005056 ubox
4 49 0.064739857 ubox
5 12 0.119614020 ubox
5 17 0.013302686 ubox
5 30 0.292211087 ubox
5 32 0.941206155 ubox
5 48 0.065159442 ubox
6 13 0.023092216 ubox
6 14 0.005604020 ubox
6 15 0.015423158 ubox
6 16 0.014375335 ubox
6 31 0.942995242 ubox
7 11 0.003237881 ubox
7 12 0.022760823 ubox
7 27 0.012138250 ubox
7 28 0.058995215 ubox
7 29 0.089502110 ubox
7 30 0.939462452 ubox
7 32 0.004778096 ubox
7 46 0.064001510 ubox
8 13 0.008376278 ubox
8 14 0.020764420 ubox
8 15 0.053351249 ubox
8 16 0.008998285 ubox
8 26 0.007954547 ubox
8 31 0.007194472 ubox
8 45 0.063692573 ubox
9 13 0.020478448 ubox
9 14 0.053262464 ubox
9 15 0.009400549 ubox
9 25 0.003329756 ubox
9 26 0.060189593 ubox
9 44 0.039371023 ubox
9 45 0.006563482 ubox
10 25 0.042808828 ubox
10 26 0.232482309 ubox
10 41 0.008058283 ubox
10 44 0.008187277 ubox
11 25 0.235294905 ubox
11 26 0.935125236 ubox
11 40 0.008428304 ubox
12 25 0.957438386 ubox
12 26 0.015188475 ubox
12 39 0.007801792 ubox
12 49 0.008686124 ubox
13 23 0.244001250 ubox
13 24 0.959072319 ubox
13 48 0.007238978 ubox
14 22 0.245856951 ubox
14 23 0.958607306 ubox
14 24 0.006416427 ubox
14 47 0.005291253 ubox
14 48 0.028797516 ubox
15 21 0.247582963 ubox
15 22 0.957890028 ubox
15 23 0.008153836 ubox
15 47 0.029461386 ubox
16 21 0.896097902 ubox
16 22 0.009494626 ubox
16 46 0.029862788 ubox
17 45 0.029799956 ubox
17 49 0.137836479 ubox
18 48 0.139613094 ubox
19 47 0.140009799 ubox
20 42 0.020691539 ubox
20 43 0.003399994 ubox
20 46 0.139741600 ubox
21 40 0.012486647 ubox
21 41 0.020712789 ubox
21 45 0.138218939 ubox
22 39 0.015047365 ubox
22 40 0.022169366 ubox
22 41 0.067521067 ubox
22 44 0.113660760 ubox
22 45 0.006533368 ubox
23 39 0.022553641 ubox
23 40 0.121059882 ubox
23 41 0.007480395 ubox
23 44 0.007423646 ubox
23 45 0.020502975 ubox
24 31 0.006488533 ubox
24 39 0.122411838 ubox
24 44 0.036890833 ubox
25 30 0.006186169 ubox
25 36 0.024922288 ubox
25 37 0.009426750 ubox
25 38 0.121836476 ubox
25 42 0.005507187 ubox
25 43 0.044757355 ubox
26 35 0.030377316 ubox
26 36 0.013160513 ubox
26 37 0.119464680 ubox
26 42 0.045589958 ubox
26 43 0.008029701 ubox
26 46 0.004010952 ubox
27 31 0.005913850 ubox
27 34 0.033954041 ubox
27 39 0.009220751 ubox
27 41 0.041090362 ubox
27 45 0.005248649 ubox
28 33 0.030985432 ubox
28 34 0.019554219 ubox
28 40 0.033807695 ubox
28 41 0.064862662 ubox
28 44 0.004933534 ubox
29 33 0.015985444 ubox
29 34 0.026793022 ubox
29 40 0.070867119 ubox
29 41 0.004706146 ubox
30 34 0.005456559 ubox
30 39 0.074435069 ubox
30 40 0.005077839 ubox
30 41 0.004441325 ubox
30 45 0.003179553 ubox
30 49 0.009091434 ubox
31 48 0.009160693 ubox
32 39 0.032345457 ubox
32 41 0.003882901 ubox
32 44 0.047730914 ubox
32 45 0.012298388 ubox
32 49 0.009598464 ubox
33 37 0.004817623 ubox
33 38 0.030456433 ubox
33 42 0.011095279 ubox
33 43 0.072012645 ubox
33 46 0.005370868 ubox
33 47 0.005464836 ubox
33 48 0.010542231 ubox
34 38 0.009441581 ubox
34 42 0.112585658 ubox
34 43 0.020171005 ubox
34 46 0.010132308 ubox
34 47 0.013537524 ubox
34 48 0.007286228 ubox
35 40 0.014681884 ubox
35 41 0.114157119 ubox
35 44 0.013656005 ubox
36 40 0.087482397 ubox
36 41 0.022287431 ubox
36 44 0.010958390 ubox
37 41 0.011373053 ubox
37 44 0.018016236 ubox
38 44 0.011445038 ubox
39 47 0.201184013 ubox
39 48 0.325401001 ubox
40 46 0.193227694 ubox
40 47 0.322013826 ubox
40 48 0.025267867 ubox
41 46 0.269048189 ubox
41 47 0.031733634 ubox
41 48 0.021544571 ubox
44 48 0.008198123 ubox
4 33 0.9500000 lbox
5 32 0.9500000 lbox
6 31 0.9500000 lbox
7 30 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
showpage
end
%%EOF
