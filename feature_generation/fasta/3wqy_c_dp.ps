%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3wqy_c)
} def

/sequence { (\
GGGCUCGUAGCUCAGCGGGAGAGCGCCGCCUUUGCGAGGCGGAGGCCGCGGGUUCAAAUCCCGCCGAGUCCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.004547156 ubox
1 13 0.014001496 ubox
1 71 0.997092789 ubox
1 73 0.012016970 ubox
1 74 0.037463163 ubox
2 12 0.014099034 ubox
2 70 0.997836514 ubox
2 71 0.030449613 ubox
2 73 0.036889078 ubox
2 74 0.025563836 ubox
3 11 0.014319962 ubox
3 69 0.997486173 ubox
3 70 0.030625092 ubox
3 71 0.008963308 ubox
3 73 0.025569956 ubox
4 10 0.014414122 ubox
4 68 0.998078437 ubox
5 9 0.012998970 ubox
5 67 0.997875878 ubox
5 72 0.011353932 ubox
6 66 0.997932024 ubox
7 11 0.008267364 ubox
7 13 0.025663266 ubox
7 16 0.003289856 ubox
7 24 0.003867686 ubox
7 26 0.018315153 ubox
7 27 0.012287055 ubox
7 64 0.005268133 ubox
7 65 0.993644096 ubox
7 70 0.018575876 ubox
7 71 0.016114585 ubox
7 73 0.018947460 ubox
7 74 0.003271685 ubox
8 14 0.016078234 ubox
8 15 0.003575520 ubox
8 22 0.005900841 ubox
8 23 0.003968213 ubox
8 25 0.018691072 ubox
8 63 0.006246441 ubox
8 72 0.018786450 ubox
9 69 0.004638413 ubox
10 16 0.018544679 ubox
10 24 0.153435263 ubox
10 26 0.007013709 ubox
10 35 0.011393103 ubox
10 46 0.006564088 ubox
10 64 0.027193999 ubox
10 65 0.023507562 ubox
10 69 0.056539089 ubox
10 70 0.012766615 ubox
11 15 0.018556356 ubox
11 18 0.004866747 ubox
11 19 0.015848761 ubox
11 21 0.052868760 ubox
11 23 0.153782088 ubox
11 25 0.007036854 ubox
11 34 0.011403063 ubox
11 44 0.003520352 ubox
11 45 0.006381295 ubox
11 63 0.025104941 ubox
11 66 0.003377273 ubox
11 68 0.059930481 ubox
12 17 0.004439219 ubox
12 18 0.015797802 ubox
12 19 0.003929989 ubox
12 20 0.053335881 ubox
12 22 0.153790827 ubox
12 43 0.003880660 ubox
12 44 0.005526207 ubox
12 67 0.061040073 ubox
13 17 0.015300247 ubox
13 18 0.005665104 ubox
13 19 0.053310488 ubox
13 21 0.153677136 ubox
13 42 0.003914009 ubox
13 66 0.061599406 ubox
14 31 0.006832205 ubox
15 24 0.015563068 ubox
15 26 0.036713571 ubox
15 29 0.011031878 ubox
15 30 0.004943281 ubox
15 49 0.006230700 ubox
15 64 0.984371639 ubox
15 65 0.006369892 ubox
16 21 0.004484573 ubox
16 23 0.015588054 ubox
16 25 0.037031157 ubox
16 28 0.012153948 ubox
16 48 0.006264148 ubox
16 63 0.984985193 ubox
17 24 0.036930426 ubox
17 27 0.014443675 ubox
17 47 0.006890093 ubox
17 61 0.003493257 ubox
17 62 0.985324795 ubox
18 26 0.014433373 ubox
18 27 0.006259656 ubox
18 46 0.006655356 ubox
18 47 0.004784091 ubox
18 60 0.004402446 ubox
18 61 0.985337498 ubox
19 24 0.006131398 ubox
19 26 0.006266344 ubox
19 46 0.004682839 ubox
19 55 0.008305304 ubox
19 59 0.004898254 ubox
19 60 0.985265632 ubox
20 53 0.003838551 ubox
20 54 0.013833793 ubox
20 59 0.976987548 ubox
21 47 0.017707223 ubox
21 53 0.029666021 ubox
21 54 0.112353173 ubox
21 55 0.953708189 ubox
22 53 0.114730651 ubox
22 54 0.952296319 ubox
23 46 0.057363580 ubox
23 47 0.004170383 ubox
23 49 0.037273541 ubox
23 53 0.934055805 ubox
23 54 0.017675730 ubox
23 55 0.065217924 ubox
24 44 0.014959212 ubox
24 45 0.057417749 ubox
24 48 0.037315371 ubox
24 50 0.383807835 ubox
24 51 0.090924475 ubox
24 52 0.899294602 ubox
25 46 0.020191232 ubox
25 47 0.039739847 ubox
25 49 0.560673424 ubox
25 53 0.046146695 ubox
26 42 0.131141437 ubox
26 45 0.019045603 ubox
26 48 0.561419589 ubox
26 50 0.738164862 ubox
26 51 0.320406702 ubox
26 52 0.046908826 ubox
27 36 0.012030042 ubox
27 41 0.131973209 ubox
27 44 0.017191388 ubox
27 48 0.658568306 ubox
27 50 0.320306499 ubox
27 51 0.046745195 ubox
28 35 0.012386318 ubox
28 40 0.133096273 ubox
28 46 0.855025155 ubox
28 47 0.466397502 ubox
28 49 0.180374718 ubox
29 34 0.012329460 ubox
29 39 0.133107783 ubox
29 45 0.981391776 ubox
29 48 0.136841256 ubox
30 36 0.007407119 ubox
30 38 0.133118935 ubox
30 44 0.989641543 ubox
30 45 0.019099761 ubox
31 37 0.132138724 ubox
31 43 0.989403611 ubox
31 44 0.017318130 ubox
31 45 0.007451831 ubox
32 36 0.119077990 ubox
32 37 0.003223231 ubox
32 42 0.988352355 ubox
32 43 0.016726399 ubox
32 44 0.008483230 ubox
33 41 0.986369610 ubox
33 42 0.013859565 ubox
33 43 0.008932157 ubox
34 40 0.989604110 ubox
34 46 0.003326732 ubox
35 39 0.982433827 ubox
35 41 0.012975822 ubox
35 42 0.003525068 ubox
35 45 0.003323446 ubox
36 40 0.012307557 ubox
38 47 0.047650623 ubox
39 46 0.047732526 ubox
39 49 0.004817726 ubox
40 45 0.047717064 ubox
40 48 0.005040807 ubox
41 47 0.005700113 ubox
42 46 0.005643161 ubox
44 49 0.003940768 ubox
44 54 0.004042452 ubox
44 65 0.009473470 ubox
45 53 0.006105403 ubox
45 64 0.009443114 ubox
45 65 0.003794709 ubox
46 51 0.003329850 ubox
46 52 0.006379551 ubox
46 63 0.007775831 ubox
47 51 0.006435081 ubox
47 63 0.005215372 ubox
48 62 0.007157226 ubox
48 64 0.168607020 ubox
48 65 0.003217514 ubox
49 63 0.169052311 ubox
50 55 0.003994444 ubox
50 61 0.009723800 ubox
50 62 0.170205351 ubox
51 55 0.004991523 ubox
51 60 0.010152178 ubox
51 61 0.170188973 ubox
52 59 0.010350976 ubox
52 60 0.169986674 ubox
53 57 0.003686321 ubox
53 58 0.022540651 ubox
54 58 0.025917819 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
15 64 0.9500000 lbox
16 63 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 55 0.9500000 lbox
22 54 0.9500000 lbox
23 53 0.9500000 lbox
24 52 0.9500000 lbox
26 50 0.9500000 lbox
27 48 0.9500000 lbox
28 47 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
showpage
end
%%EOF
