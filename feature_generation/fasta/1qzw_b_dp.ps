%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1qzw_b)
} def

/sequence { (\
GCCGGGGGAACCGGCCAGGCCCGGAAGGGAGCAACCGUGCCCGGU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.568328857 ubox
1 16 0.048859157 ubox
1 20 0.034020113 ubox
1 40 0.003460939 ubox
1 45 0.714365314 ubox
2 8 0.004305399 ubox
2 14 0.603393987 ubox
2 19 0.034151423 ubox
2 24 0.034096318 ubox
2 39 0.003474972 ubox
2 44 0.792961684 ubox
3 7 0.004288022 ubox
3 13 0.605925234 ubox
3 14 0.005075551 ubox
3 18 0.034029766 ubox
3 23 0.034209368 ubox
3 37 0.003488539 ubox
3 43 0.793608084 ubox
3 44 0.014938592 ubox
4 12 0.605231380 ubox
4 16 0.008910281 ubox
4 22 0.034165144 ubox
4 36 0.003492038 ubox
4 42 0.791578229 ubox
5 11 0.604325107 ubox
5 12 0.033359154 ubox
5 15 0.008814909 ubox
5 16 0.030146744 ubox
5 21 0.034100425 ubox
5 35 0.003490915 ubox
5 41 0.789568069 ubox
5 42 0.058019430 ubox
6 11 0.044952315 ubox
6 12 0.005976730 ubox
6 15 0.030249902 ubox
6 16 0.013882952 ubox
6 20 0.034007737 ubox
6 22 0.006968729 ubox
6 40 0.787267361 ubox
6 41 0.080161519 ubox
6 42 0.014116988 ubox
7 11 0.007155292 ubox
7 12 0.005966079 ubox
7 15 0.014016946 ubox
7 16 0.026582060 ubox
7 20 0.003529565 ubox
7 21 0.007885364 ubox
7 22 0.006178687 ubox
7 32 0.003381612 ubox
7 36 0.017822813 ubox
7 38 0.023488542 ubox
7 40 0.097310561 ubox
7 41 0.015586551 ubox
8 15 0.026544204 ubox
8 20 0.007864494 ubox
8 21 0.006173504 ubox
8 32 0.003313117 ubox
8 35 0.017781620 ubox
8 36 0.003381988 ubox
8 38 0.643826718 ubox
8 40 0.016928807 ubox
9 38 0.095956380 ubox
10 38 0.142912043 ubox
10 45 0.008180839 ubox
11 19 0.039371743 ubox
11 23 0.007941033 ubox
11 24 0.109752442 ubox
11 28 0.015402461 ubox
11 37 0.116123467 ubox
11 39 0.147028434 ubox
11 44 0.009090849 ubox
12 18 0.039535779 ubox
12 23 0.110276568 ubox
12 27 0.015449519 ubox
12 37 0.766380832 ubox
12 39 0.005588560 ubox
12 43 0.009098724 ubox
13 21 0.040141816 ubox
13 22 0.103935017 ubox
13 32 0.005005902 ubox
13 35 0.025928864 ubox
13 36 0.777514875 ubox
13 38 0.004811185 ubox
13 41 0.009248065 ubox
13 42 0.008705806 ubox
14 20 0.054550850 ubox
14 21 0.096567329 ubox
14 32 0.101512397 ubox
14 35 0.776195733 ubox
14 36 0.005160430 ubox
14 40 0.009799085 ubox
14 41 0.008205440 ubox
14 45 0.053587071 ubox
15 19 0.065439839 ubox
15 24 0.016223960 ubox
15 31 0.100249259 ubox
15 39 0.010104912 ubox
15 43 0.003920220 ubox
15 44 0.199503471 ubox
16 23 0.016679040 ubox
16 29 0.006148173 ubox
16 31 0.070425152 ubox
16 37 0.005418287 ubox
16 39 0.010591819 ubox
16 43 0.300913026 ubox
16 44 0.093303506 ubox
17 38 0.010434312 ubox
17 45 0.007871613 ubox
18 32 0.164588443 ubox
18 36 0.016972858 ubox
18 41 0.387332602 ubox
18 42 0.034539551 ubox
18 45 0.012344410 ubox
19 32 0.323139912 ubox
19 35 0.016908762 ubox
19 36 0.005378989 ubox
19 40 0.388143477 ubox
19 41 0.029883538 ubox
19 45 0.206343922 ubox
20 28 0.014423999 ubox
20 29 0.750730477 ubox
20 31 0.320369843 ubox
20 39 0.387618531 ubox
20 44 0.212609096 ubox
21 27 0.014346319 ubox
21 28 0.752844859 ubox
21 29 0.318125528 ubox
21 37 0.021678788 ubox
21 39 0.025877218 ubox
21 43 0.206348210 ubox
21 44 0.343643725 ubox
22 27 0.752730485 ubox
22 28 0.317797967 ubox
22 29 0.032544155 ubox
22 37 0.387248438 ubox
22 43 0.349193464 ubox
23 35 0.005033904 ubox
23 36 0.388206145 ubox
23 40 0.011429048 ubox
23 41 0.198927788 ubox
23 42 0.351380905 ubox
24 35 0.387611553 ubox
24 38 0.003992140 ubox
24 40 0.200769030 ubox
24 41 0.349506491 ubox
24 45 0.003417683 ubox
25 38 0.062781812 ubox
26 38 0.265541877 ubox
27 32 0.336199547 ubox
27 35 0.006623179 ubox
27 36 0.289878557 ubox
27 38 0.102152062 ubox
27 40 0.009493276 ubox
27 41 0.007042767 ubox
27 42 0.051343324 ubox
28 32 0.034788888 ubox
28 35 0.290039782 ubox
28 36 0.287176137 ubox
28 40 0.009704962 ubox
28 41 0.051808038 ubox
28 42 0.025062196 ubox
29 35 0.286476411 ubox
29 36 0.086585003 ubox
29 38 0.008537832 ubox
29 40 0.051845584 ubox
29 41 0.025288963 ubox
29 42 0.004268689 ubox
30 38 0.007737437 ubox
31 35 0.016982475 ubox
31 36 0.008790145 ubox
31 38 0.051477223 ubox
31 40 0.059848062 ubox
32 37 0.054153801 ubox
32 39 0.060629840 ubox
33 38 0.052742308 ubox
33 45 0.009213449 ubox
34 45 0.200959631 ubox
35 44 0.223266101 ubox
36 43 0.223444497 ubox
37 41 0.005246049 ubox
37 42 0.216632884 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
8 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
showpage
end
%%EOF
