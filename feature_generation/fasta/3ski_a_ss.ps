%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCUUAUACAGGGUAGCAUAAUGGGCUACUGACCCCGCCUUCAAACCUAUUUGGAGACUAUAAGGU\
) def
/coor [
[92.50000000 245.79547119]
[92.50000000 230.79547119]
[92.50000000 215.79547119]
[92.50000000 200.79547119]
[92.50000000 185.79547119]
[92.50000000 170.79547119]
[92.50000000 155.79547119]
[92.50000000 140.79547119]
[77.15592957 134.62179565]
[65.44396210 122.94341278]
[59.22624207 107.61713409]
[59.49136353 91.07976532]
[45.66705322 85.25839233]
[31.84274483 79.43701172]
[18.01843452 73.61563110]
[4.19412327 67.79425812]
[-9.63018703 61.97287750]
[-23.45944214 69.27258301]
[-38.73444366 65.92469788]
[-48.24280167 53.50998306]
[-47.49496078 37.89029312]
[-36.84403229 26.44076347]
[-21.31905174 24.56751633]
[-8.25044632 33.15504074]
[-3.80880928 48.14856720]
[10.01550102 53.96994400]
[23.83981133 59.79132462]
[37.66412354 65.61270142]
[51.48843384 71.43408203]
[65.31274414 77.25545502]
[71.58390808 69.78334808]
[79.42674255 63.98249054]
[88.40745544 60.17371750]
[98.02933502 58.56768799]
[107.76021576 59.25323105]
[117.06188202 62.19243240]
[125.41987610 67.22272491]
[132.37193298 74.06588745]
[137.53352356 82.34343719]
[152.03747559 78.51779938]
[166.54142761 74.69215393]
[181.04536438 70.86651611]
[195.54931641 67.04087067]
[210.05326843 63.21522903]
[224.55720520 59.38958740]
[235.81092834 47.46123123]
[251.70349121 51.50583649]
[255.88597107 67.36266327]
[244.05580139 78.71955872]
[228.38285828 73.89353180]
[213.87890625 77.71917725]
[199.37495422 81.54481506]
[184.87101746 85.37046051]
[170.36706543 89.19609833]
[155.86311340 93.02174377]
[141.35917664 96.84738159]
[138.00367737 116.62049103]
[125.76341248 132.50794983]
[107.50000000 140.79547119]
[107.50000000 155.79547119]
[107.50000000 170.79547119]
[107.50000000 185.79547119]
[107.50000000 200.79547119]
[107.50000000 215.79547119]
[107.50000000 230.79547119]
[107.50000000 245.79547119]
] def
/pairs [
[1 66]
[2 65]
[3 64]
[4 63]
[5 62]
[6 61]
[7 60]
[8 59]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[39 56]
[40 55]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
