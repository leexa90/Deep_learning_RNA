%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:42 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUAGUGAGGGCCUUGGUCAGACGCAGCGGGCGUGCUUGUGGACUGCUUGGUGGGGCUUGCUCUGCUAGGCGGACUACUUGCGUGCCUGUUGUAGACGGCCUUGGUACUUGCUAC\
) def
/coor [
[92.50000000 370.83911133]
[92.50000000 355.83911133]
[92.50000000 340.83911133]
[92.50000000 325.83911133]
[92.50000000 310.83911133]
[92.50000000 295.83911133]
[92.50000000 280.83911133]
[92.50000000 265.83911133]
[84.76270294 253.11183167]
[92.50000000 239.31166077]
[92.50000000 224.31166077]
[92.50000000 209.31166077]
[81.81912994 198.99397278]
[81.60544586 183.78184509]
[92.50000000 172.64871216]
[92.50000000 157.64871216]
[92.50000000 142.64871216]
[92.50000000 127.64871979]
[79.70539856 120.21956635]
[72.32369232 107.39753723]
[72.32369232 92.60246277]
[79.70539856 79.78043365]
[92.50000000 72.35128021]
[92.50000000 57.35128403]
[92.50000000 42.35128403]
[92.50000000 27.35128212]
[92.50000000 12.35128212]
[92.50000000 -2.64871764]
[92.50000000 -17.64871788]
[92.50000000 -32.64871597]
[92.50000000 -47.64871597]
[92.50000000 -62.64871597]
[92.50000000 -77.64871979]
[92.50000000 -92.64871979]
[92.50000000 -107.64871979]
[81.60544586 -118.78184509]
[81.81912994 -133.99397278]
[92.50000000 -144.31166077]
[92.50000000 -159.31166077]
[92.50000000 -174.31166077]
[92.50000000 -189.31166077]
[84.76270294 -203.11183167]
[92.50000000 -215.83909607]
[92.50000000 -230.83909607]
[92.50000000 -245.83909607]
[92.50000000 -260.83911133]
[92.50000000 -275.83911133]
[92.50000000 -290.83911133]
[92.50000000 -305.83911133]
[92.50000000 -320.83911133]
[92.50000000 -335.83911133]
[92.50000000 -350.83911133]
[92.50000000 -365.83911133]
[92.50000000 -380.83911133]
[92.50000000 -395.83911133]
[83.83629608 -409.76290894]
[91.80042267 -424.09832764]
[108.19957733 -424.09832764]
[116.16370392 -409.76290894]
[107.50000000 -395.83911133]
[107.50000000 -380.83911133]
[107.50000000 -365.83911133]
[107.50000000 -350.83911133]
[107.50000000 -335.83911133]
[107.50000000 -320.83911133]
[107.50000000 -305.83911133]
[107.50000000 -290.83911133]
[107.50000000 -275.83911133]
[107.50000000 -260.83911133]
[107.50000000 -245.83909607]
[107.50000000 -230.83909607]
[107.50000000 -215.83909607]
[115.23729706 -203.11183167]
[107.50000000 -189.31166077]
[107.50000000 -174.31166077]
[107.50000000 -159.31166077]
[107.50000000 -144.31166077]
[118.18087006 -133.99397278]
[118.39455414 -118.78184509]
[107.50000000 -107.64871979]
[107.50000000 -92.64871979]
[107.50000000 -77.64871979]
[107.50000000 -62.64871597]
[107.50000000 -47.64871597]
[107.50000000 -32.64871597]
[107.50000000 -17.64871788]
[107.50000000 -2.64871764]
[107.50000000 12.35128212]
[107.50000000 27.35128212]
[107.50000000 42.35128403]
[107.50000000 57.35128403]
[107.50000000 72.35128021]
[120.29460144 79.78043365]
[127.67630768 92.60246277]
[127.67630768 107.39753723]
[120.29460144 120.21956635]
[107.50000000 127.64871979]
[107.50000000 142.64871216]
[107.50000000 157.64871216]
[107.50000000 172.64871216]
[118.39455414 183.78184509]
[118.18087006 198.99397278]
[107.50000000 209.31166077]
[107.50000000 224.31166077]
[107.50000000 239.31166077]
[115.23729706 253.11183167]
[107.50000000 265.83911133]
[107.50000000 280.83911133]
[107.50000000 295.83911133]
[107.50000000 310.83911133]
[107.50000000 325.83911133]
[107.50000000 340.83911133]
[107.50000000 355.83911133]
[107.50000000 370.83911133]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[5 110]
[6 109]
[7 108]
[8 107]
[10 105]
[11 104]
[12 103]
[15 100]
[16 99]
[17 98]
[18 97]
[23 92]
[24 91]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[35 80]
[38 77]
[39 76]
[40 75]
[41 74]
[43 72]
[44 71]
[45 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
