%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1hc8_c)
} def

/sequence { (\
CCAGGAUGUAGGCUUAGAAGCAGCCAUCAUUUAAAGAAAGCGUAAUAGCUCACUGGU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.013037193 ubox
1 55 0.008549793 ubox
1 56 0.956421046 ubox
2 8 0.003405179 ubox
2 36 0.020200198 ubox
2 55 0.966087559 ubox
2 56 0.009736502 ubox
3 30 0.013266742 ubox
3 31 0.016213483 ubox
3 32 0.016103087 ubox
3 54 0.960986749 ubox
4 25 0.006712459 ubox
4 28 0.007276022 ubox
4 30 0.017776233 ubox
4 31 0.014606911 ubox
4 32 0.242729534 ubox
4 51 0.011862717 ubox
4 53 0.952623267 ubox
4 54 0.008028540 ubox
5 9 0.005038157 ubox
5 24 0.006901032 ubox
5 25 0.003287988 ubox
5 27 0.005027475 ubox
5 28 0.585081925 ubox
5 30 0.016287579 ubox
5 31 0.704876520 ubox
5 32 0.064234873 ubox
5 49 0.005842357 ubox
5 50 0.003775404 ubox
5 51 0.225033029 ubox
5 53 0.014953641 ubox
6 27 0.586020654 ubox
6 30 0.755378235 ubox
6 31 0.050105751 ubox
6 32 0.011287266 ubox
6 50 0.128140887 ubox
7 22 0.006081734 ubox
7 26 0.585060735 ubox
7 29 0.765164061 ubox
7 33 0.004508183 ubox
7 42 0.004780676 ubox
7 47 0.026241409 ubox
7 48 0.008436522 ubox
7 52 0.046405914 ubox
8 21 0.006501922 ubox
8 24 0.111555486 ubox
8 25 0.559587036 ubox
8 27 0.061788439 ubox
8 28 0.765765469 ubox
8 30 0.019579816 ubox
8 32 0.004409783 ubox
8 41 0.004998081 ubox
8 46 0.028312969 ubox
8 49 0.041585988 ubox
8 50 0.004309258 ubox
8 51 0.049518831 ubox
8 53 0.011386583 ubox
9 20 0.006378661 ubox
9 22 0.007228623 ubox
9 23 0.154467428 ubox
9 26 0.179430145 ubox
9 29 0.020620922 ubox
9 33 0.004326089 ubox
9 40 0.004892952 ubox
9 44 0.036406865 ubox
9 45 0.020814498 ubox
9 47 0.024864622 ubox
9 48 0.039111954 ubox
9 52 0.014301810 ubox
10 27 0.197535000 ubox
10 32 0.004534425 ubox
10 43 0.045853537 ubox
10 46 0.023202778 ubox
10 50 0.011454973 ubox
11 21 0.011878675 ubox
11 24 0.017517509 ubox
11 25 0.813345909 ubox
11 43 0.003561886 ubox
11 46 0.003436189 ubox
11 49 0.008386680 ubox
11 50 0.049645351 ubox
12 21 0.569115519 ubox
12 24 0.818381079 ubox
12 41 0.047569311 ubox
12 43 0.003509712 ubox
12 49 0.057880304 ubox
13 20 0.569247466 ubox
13 23 0.818216243 ubox
13 36 0.005202111 ubox
13 40 0.047575923 ubox
13 42 0.003546036 ubox
13 48 0.058341401 ubox
14 18 0.016884713 ubox
14 19 0.526444636 ubox
14 20 0.020605562 ubox
14 22 0.787206904 ubox
14 23 0.010952469 ubox
14 34 0.005729754 ubox
14 35 0.005289414 ubox
14 39 0.046901281 ubox
14 47 0.055200504 ubox
15 19 0.043149152 ubox
15 20 0.192479511 ubox
15 22 0.068552528 ubox
15 33 0.010912009 ubox
15 34 0.005308175 ubox
15 37 0.003472487 ubox
15 38 0.043313267 ubox
15 44 0.003189656 ubox
15 47 0.016910041 ubox
16 30 0.003239857 ubox
16 32 0.012800927 ubox
16 46 0.023454764 ubox
17 21 0.085641440 ubox
17 28 0.009033384 ubox
17 31 0.012571417 ubox
17 32 0.009806956 ubox
17 46 0.003646724 ubox
18 27 0.008918941 ubox
18 30 0.012090387 ubox
18 31 0.010166850 ubox
18 32 0.007193614 ubox
18 43 0.010044250 ubox
18 46 0.003268292 ubox
19 30 0.010029270 ubox
19 31 0.007106427 ubox
19 43 0.004984295 ubox
19 46 0.003535272 ubox
20 25 0.004335360 ubox
20 28 0.008552523 ubox
20 30 0.005818643 ubox
20 41 0.037243291 ubox
20 43 0.036925983 ubox
21 40 0.037213226 ubox
21 42 0.037677369 ubox
22 27 0.007007845 ubox
22 30 0.004799993 ubox
22 31 0.010161444 ubox
22 32 0.004197958 ubox
23 28 0.004532417 ubox
23 30 0.009042409 ubox
23 31 0.004106463 ubox
23 41 0.049181918 ubox
23 57 0.003195132 ubox
24 36 0.004460370 ubox
24 40 0.049168682 ubox
24 56 0.003418845 ubox
25 36 0.011724224 ubox
25 55 0.003421927 ubox
26 30 0.003950672 ubox
26 31 0.013125612 ubox
26 32 0.014202067 ubox
26 43 0.006418949 ubox
26 57 0.003834172 ubox
27 33 0.005587644 ubox
27 34 0.009399815 ubox
27 35 0.006096627 ubox
27 36 0.005122004 ubox
27 37 0.110179924 ubox
27 38 0.006412552 ubox
27 42 0.006296366 ubox
27 56 0.004141929 ubox
28 36 0.116888930 ubox
28 40 0.005575197 ubox
28 42 0.007481639 ubox
28 55 0.004408042 ubox
29 43 0.003573370 ubox
29 46 0.007472119 ubox
29 54 0.003467383 ubox
29 57 0.007784703 ubox
30 34 0.019519355 ubox
30 35 0.024898417 ubox
30 36 0.018458081 ubox
30 37 0.060308464 ubox
30 38 0.086807875 ubox
30 39 0.045937613 ubox
30 40 0.009972039 ubox
30 42 0.003520267 ubox
30 45 0.007888082 ubox
30 56 0.008240078 ubox
31 35 0.022504509 ubox
31 36 0.061131780 ubox
31 37 0.100594590 ubox
31 38 0.085026102 ubox
31 39 0.025780268 ubox
31 40 0.005766510 ubox
31 44 0.007839934 ubox
31 45 0.009230786 ubox
31 48 0.003246429 ubox
31 52 0.003676743 ubox
31 55 0.008384109 ubox
31 56 0.007742181 ubox
32 36 0.093624259 ubox
32 37 0.089470430 ubox
32 38 0.047693866 ubox
32 39 0.019396398 ubox
32 44 0.011020070 ubox
32 47 0.005132113 ubox
32 52 0.006560717 ubox
32 55 0.011725447 ubox
32 56 0.010887269 ubox
33 43 0.010741079 ubox
33 46 0.005069332 ubox
33 54 0.010227013 ubox
33 57 0.013202994 ubox
34 43 0.004233188 ubox
34 50 0.004214633 ubox
34 54 0.012394638 ubox
34 57 0.006105026 ubox
35 43 0.004410362 ubox
35 50 0.016271165 ubox
35 54 0.231084293 ubox
36 41 0.018576053 ubox
36 43 0.003794031 ubox
36 49 0.016288628 ubox
36 50 0.007707243 ubox
36 51 0.277030486 ubox
36 53 0.243529417 ubox
36 54 0.004397231 ubox
37 46 0.003301440 ubox
37 50 0.210565592 ubox
37 54 0.009228048 ubox
38 43 0.003201433 ubox
38 50 0.052737938 ubox
38 54 0.005734036 ubox
39 46 0.015548518 ubox
39 50 0.910087026 ubox
39 54 0.008495173 ubox
40 49 0.992413623 ubox
40 50 0.005398799 ubox
40 51 0.044022993 ubox
40 53 0.008864871 ubox
41 48 0.992600723 ubox
42 46 0.014725444 ubox
42 49 0.064063462 ubox
42 51 0.017348740 ubox
42 53 0.005907901 ubox
43 47 0.025896716 ubox
43 48 0.062163953 ubox
43 52 0.006113938 ubox
46 55 0.005108258 ubox
47 54 0.005840358 ubox
48 53 0.005916963 ubox
48 57 0.005894289 ubox
49 56 0.006312754 ubox
50 55 0.005681327 ubox
51 55 0.005679331 ubox
51 56 0.007085561 ubox
1 56 0.9500000 lbox
2 55 0.9500000 lbox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
showpage
end
%%EOF
