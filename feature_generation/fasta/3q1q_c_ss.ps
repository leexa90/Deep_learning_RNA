%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGCCAGGUAGCUCAGUUGGUAGAGCACUGGAUAUGGGCACCCCCUAAGUCCAGGUGUCGGCGGUUCGAUUCCGCCCCUGGCCACCA\
) def
/coor [
[122.17791748 225.37052917]
[120.01882935 210.52673340]
[117.85974121 195.68293762]
[115.70065308 180.83914185]
[113.54155731 165.99533081]
[111.38246918 151.15153503]
[109.22338104 136.30773926]
[93.73611450 135.09304810]
[80.83876801 127.88576508]
[72.59053040 116.55524445]
[58.29158020 121.08734894]
[43.99263000 125.61945343]
[29.69367790 130.15156555]
[24.92013931 144.91615295]
[12.36006069 154.02789307]
[-3.15695000 153.98316956]
[-15.66428661 144.79914856]
[-20.35262108 130.00729370]
[-15.41919613 115.29535675]
[-2.76101184 106.32039642]
[12.75460052 106.53345490]
[25.16157150 115.85260773]
[39.46052170 111.32050323]
[53.75947571 106.78839874]
[68.05842590 102.25629425]
[71.98432159 84.49269104]
[84.95295715 71.73445129]
[81.20162201 57.21110535]
[77.45029449 42.68775940]
[73.69896698 28.16441536]
[69.94763184 13.64107132]
[66.19630432 -0.88227254]
[55.25360870 -12.30890465]
[59.56209183 -26.56675339]
[55.81076431 -41.09009552]
[52.05943298 -55.61344147]
[48.30810165 -70.13678741]
[35.27315903 -79.48931122]
[34.60204315 -95.51832581]
[46.80957413 -105.92772675]
[62.53118134 -102.73232269]
[69.70659637 -88.38335419]
[62.83144760 -73.88811493]
[66.58277893 -59.36476898]
[70.33410645 -44.84142685]
[74.08543396 -30.31808281]
[84.75981140 -19.93025780]
[80.71965027 -4.63360262]
[84.47097778 9.88974190]
[88.22231293 24.41308594]
[91.97364044 38.93642807]
[95.72496796 53.45977402]
[99.47629547 67.98311615]
[109.30915070 68.41551971]
[118.81291962 71.87808228]
[127.05258942 78.20323944]
[133.16731262 86.93527222]
[136.45892334 97.36081696]
[136.46833801 108.56637573]
[151.34870911 110.45711517]
[166.22906494 112.34786224]
[181.10942078 114.23860931]
[195.98977661 116.12935638]
[207.34761047 105.38069153]
[222.96031189 104.49901581]
[235.45605469 113.90063477]
[238.93473816 129.14637756]
[231.75381470 143.03768921]
[217.30390930 149.01550293]
[202.40782166 144.25727844]
[194.09902954 131.00971985]
[179.21867371 129.11897278]
[164.33831787 127.22822571]
[149.45796204 125.33747864]
[134.57759094 123.44673157]
[124.06717682 134.14865112]
[126.22627258 148.99244690]
[128.38536072 163.83624268]
[130.54444885 178.68003845]
[132.70353699 193.52384949]
[134.86262512 208.36764526]
[137.02171326 223.21144104]
[148.96907043 233.91847229]
[147.90319824 249.92607117]
[134.64178467 258.95458984]
[119.35781860 254.07810974]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[7 76]
[10 25]
[11 24]
[12 23]
[13 22]
[27 53]
[28 52]
[29 51]
[30 50]
[31 49]
[32 48]
[34 46]
[35 45]
[36 44]
[37 43]
[59 75]
[60 74]
[61 73]
[62 72]
[63 71]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
