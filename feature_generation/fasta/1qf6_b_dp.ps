%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1qf6_b)
} def

/sequence { (\
GCCGAUAUAGCUCAGUUGGUAGAGCAGCGCAUUCGUAAUGCGAAGGUCGUAGGUUCGACUCCUAUUAUCGGCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.999217383 ubox
1 74 0.003165593 ubox
1 75 0.004728368 ubox
2 71 0.999987543 ubox
3 70 0.999977112 ubox
4 69 0.999915030 ubox
5 65 0.005364745 ubox
5 68 0.998736477 ubox
6 64 0.010855732 ubox
6 67 0.987088686 ubox
7 63 0.012749230 ubox
7 65 0.460781281 ubox
7 66 0.843922633 ubox
7 68 0.008805659 ubox
8 18 0.014568075 ubox
8 21 0.029185531 ubox
8 26 0.070140662 ubox
8 27 0.039830920 ubox
8 43 0.003430055 ubox
8 64 0.642800568 ubox
8 67 0.019208469 ubox
9 17 0.017039899 ubox
9 20 0.030727902 ubox
9 63 0.644923097 ubox
9 65 0.072298832 ubox
9 66 0.023611403 ubox
10 16 0.017880317 ubox
10 20 0.026298408 ubox
10 25 0.834558365 ubox
10 28 0.019755848 ubox
10 30 0.026198766 ubox
10 61 0.017799745 ubox
10 62 0.534317557 ubox
10 63 0.021521822 ubox
10 65 0.008291835 ubox
11 15 0.018073007 ubox
11 18 0.033097457 ubox
11 19 0.027439415 ubox
11 22 0.008343034 ubox
11 24 0.842670280 ubox
11 27 0.023968372 ubox
11 29 0.026428056 ubox
12 18 0.024077440 ubox
12 19 0.008335117 ubox
12 21 0.008274683 ubox
12 23 0.842639652 ubox
12 26 0.022285610 ubox
12 31 0.006431743 ubox
12 43 0.006583349 ubox
12 58 0.019229298 ubox
12 64 0.004457761 ubox
13 18 0.015833636 ubox
13 19 0.007567917 ubox
13 22 0.842510832 ubox
13 24 0.006235107 ubox
13 27 0.015317418 ubox
13 29 0.008814112 ubox
13 42 0.006993466 ubox
13 57 0.019324493 ubox
14 20 0.128669644 ubox
14 55 0.005884018 ubox
14 60 0.510278407 ubox
14 63 0.018499676 ubox
14 65 0.003611355 ubox
14 66 0.006283354 ubox
15 20 0.041895842 ubox
15 25 0.050878173 ubox
15 28 0.102077814 ubox
15 54 0.005514078 ubox
15 55 0.006480713 ubox
15 56 0.009641498 ubox
15 59 0.516768286 ubox
15 61 0.028205843 ubox
15 62 0.019433212 ubox
15 65 0.012641846 ubox
16 21 0.032935851 ubox
16 23 0.005257429 ubox
16 24 0.050846738 ubox
16 27 0.104416098 ubox
16 52 0.003758941 ubox
16 53 0.005360845 ubox
16 58 0.516507174 ubox
16 64 0.012391342 ubox
17 21 0.009124260 ubox
17 22 0.005718939 ubox
17 23 0.050184037 ubox
17 26 0.106078017 ubox
17 51 0.003832780 ubox
17 52 0.005982437 ubox
17 53 0.007331854 ubox
17 57 0.515543324 ubox
17 58 0.003813578 ubox
18 25 0.106313488 ubox
18 50 0.003568764 ubox
18 54 0.010377113 ubox
18 55 0.003839432 ubox
18 56 0.493041070 ubox
18 59 0.014062700 ubox
18 60 0.060612067 ubox
18 61 0.021024216 ubox
18 62 0.017161088 ubox
18 66 0.003198073 ubox
19 25 0.009970311 ubox
19 28 0.005127838 ubox
19 50 0.014565622 ubox
19 54 0.026350863 ubox
19 55 0.467945505 ubox
19 56 0.010814409 ubox
19 59 0.066639512 ubox
19 60 0.007181708 ubox
19 61 0.017417344 ubox
19 65 0.005861684 ubox
20 24 0.010215967 ubox
20 27 0.005102590 ubox
20 49 0.021661302 ubox
20 51 0.223116115 ubox
20 52 0.041997890 ubox
20 53 0.008922630 ubox
20 57 0.007278362 ubox
20 58 0.061920380 ubox
20 64 0.005939084 ubox
21 50 0.217571524 ubox
21 54 0.035933034 ubox
21 55 0.009249094 ubox
21 63 0.005964570 ubox
22 48 0.468606530 ubox
22 50 0.006909450 ubox
22 54 0.012462948 ubox
22 55 0.057303350 ubox
22 56 0.167326231 ubox
22 62 0.005918911 ubox
23 47 0.467849088 ubox
23 50 0.007888962 ubox
23 54 0.073113338 ubox
23 55 0.180123422 ubox
24 30 0.004522401 ubox
24 41 0.008218892 ubox
24 47 0.036613794 ubox
24 48 0.012988532 ubox
24 50 0.052048439 ubox
24 54 0.202857557 ubox
25 29 0.004568176 ubox
25 40 0.008384269 ubox
25 45 0.463673810 ubox
25 46 0.038613226 ubox
25 49 0.053045615 ubox
25 52 0.080533850 ubox
25 53 0.203103615 ubox
26 39 0.008356674 ubox
26 47 0.006813357 ubox
26 50 0.013297725 ubox
26 63 0.020060523 ubox
27 36 0.015933348 ubox
27 41 0.014026890 ubox
27 47 0.047958658 ubox
27 48 0.034480375 ubox
27 50 0.225869665 ubox
27 61 0.006052850 ubox
27 62 0.021074124 ubox
28 35 0.016314536 ubox
28 40 0.014010439 ubox
28 42 0.947593868 ubox
28 45 0.007772817 ubox
28 46 0.048840061 ubox
28 49 0.230115466 ubox
29 34 0.015284514 ubox
29 36 0.010721574 ubox
29 39 0.009612119 ubox
29 41 0.962515861 ubox
29 47 0.075097863 ubox
29 48 0.226304993 ubox
30 35 0.011149040 ubox
30 40 0.962552241 ubox
30 45 0.052853278 ubox
30 46 0.212871454 ubox
31 39 0.960026845 ubox
31 47 0.018287849 ubox
32 37 0.046486193 ubox
32 38 0.945704198 ubox
32 43 0.003862411 ubox
32 44 0.236702292 ubox
32 45 0.009143527 ubox
32 46 0.015059502 ubox
33 37 0.787630462 ubox
33 38 0.027023511 ubox
33 43 0.268638029 ubox
33 44 0.007489162 ubox
33 45 0.004591918 ubox
33 58 0.007169774 ubox
34 42 0.269802399 ubox
34 57 0.007650816 ubox
35 41 0.269422094 ubox
35 56 0.007644166 ubox
36 40 0.252045444 ubox
38 65 0.004588984 ubox
39 51 0.008815216 ubox
39 64 0.004755305 ubox
40 47 0.003418556 ubox
40 50 0.009863707 ubox
40 63 0.004618832 ubox
41 46 0.003859324 ubox
41 49 0.010195434 ubox
42 48 0.016985745 ubox
42 61 0.035296312 ubox
42 62 0.031055649 ubox
42 63 0.010038166 ubox
42 65 0.005385929 ubox
42 66 0.003405442 ubox
43 47 0.015170170 ubox
43 60 0.028363878 ubox
43 63 0.061904610 ubox
43 65 0.018091145 ubox
43 66 0.016540141 ubox
44 60 0.049354852 ubox
44 63 0.177343494 ubox
44 65 0.022452309 ubox
44 66 0.005923327 ubox
45 56 0.003791913 ubox
45 59 0.037652324 ubox
45 60 0.742852084 ubox
45 61 0.179799035 ubox
45 62 0.179042998 ubox
45 63 0.010653963 ubox
45 65 0.004128509 ubox
45 66 0.003663011 ubox
45 69 0.007737139 ubox
46 55 0.003338428 ubox
46 59 0.813340120 ubox
46 60 0.022219838 ubox
46 61 0.154889724 ubox
46 62 0.007798997 ubox
46 65 0.004356248 ubox
46 66 0.004075431 ubox
46 68 0.009846384 ubox
47 58 0.827544819 ubox
47 64 0.003817789 ubox
47 67 0.010731130 ubox
48 53 0.004478019 ubox
48 57 0.829024025 ubox
49 55 0.008676767 ubox
49 56 0.823009598 ubox
49 59 0.018147398 ubox
49 61 0.004507843 ubox
49 62 0.006403014 ubox
49 65 0.176772765 ubox
49 66 0.003407771 ubox
50 57 0.005374358 ubox
50 58 0.017630157 ubox
50 64 0.187376926 ubox
51 55 0.048087817 ubox
51 60 0.022209426 ubox
51 63 0.195096192 ubox
52 56 0.008568018 ubox
52 59 0.022882668 ubox
52 60 0.010858281 ubox
52 61 0.004139105 ubox
52 62 0.196133756 ubox
52 63 0.004127845 ubox
53 59 0.011747104 ubox
53 60 0.003209638 ubox
53 61 0.195912565 ubox
53 62 0.004341963 ubox
54 58 0.011333380 ubox
60 64 0.004965060 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
