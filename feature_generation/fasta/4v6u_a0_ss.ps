%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:42 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCGCCGUAGCUUAGCUGGUGGAGCGCCGGACUGUUAAUCCGGCGGUCCCCGGUUCGAAUCCGGGCGGCGGCGCCA\
) def
/coor [
[155.90110779 362.01773071]
[153.46397400 347.21704102]
[151.02682495 332.41635132]
[148.58969116 317.61566162]
[146.15254211 302.81497192]
[143.71540833 288.01428223]
[141.27825928 273.21359253]
[138.84112549 258.41290283]
[121.33480072 254.30215454]
[107.16763306 243.14831543]
[99.01944733 227.00906372]
[98.45354462 208.88989258]
[105.61694336 192.18444824]
[119.20513153 180.03895569]
[114.39561462 165.83091736]
[109.58609772 151.62287903]
[104.77658081 137.41482544]
[99.96706390 123.20677948]
[95.15754700 108.99873352]
[89.64913940 102.77799988]
[90.45450592 94.11201477]
[86.22851562 79.71961975]
[82.00252533 65.32722473]
[70.69068146 54.26590347]
[74.52887726 39.87432480]
[70.30289459 25.48193169]
[66.07690430 11.08953762]
[61.85091782 -3.30285716]
[57.62492752 -17.69525146]
[53.39894104 -32.08764648]
[49.17295074 -46.48004150]
[34.77564621 -52.58345413]
[27.71595764 -66.53675842]
[31.32725525 -81.75164032]
[43.90439224 -91.04409027]
[59.50883484 -90.02649689]
[70.77263641 -79.17934418]
[72.37737274 -63.62431717]
[63.56534576 -50.70602798]
[67.79133606 -36.31363297]
[72.01731873 -21.92123985]
[76.24330902 -7.52884579]
[80.46929932 6.86354923]
[84.69528961 21.25594330]
[88.92127228 35.64833832]
[99.93084717 45.68021774]
[96.39492035 61.10123444]
[100.62091064 75.49362946]
[104.84689331 89.88602448]
[109.36559296 104.18921661]
[114.17510986 118.39726257]
[118.98462677 132.60531616]
[123.79414368 146.81335449]
[128.60365295 161.02139282]
[133.41317749 175.22944641]
[145.77137756 175.29167175]
[157.56088257 178.93162537]
[167.77043152 185.82513428]
[175.52778625 195.36940002]
[180.17420959 206.73582458]
[181.32041931 218.94184875]
[178.87916565 230.93592834]
[173.07176208 241.68809509]
[164.40808105 250.27842712]
[153.64179993 255.97576904]
[156.07894897 270.77645874]
[158.51608276 285.57714844]
[160.95323181 300.37783813]
[163.39038086 315.17852783]
[165.82751465 329.97921753]
[168.26466370 344.77987671]
[170.70179749 359.58056641]
[182.84788513 370.06161499]
[182.08247375 386.08639526]
[168.99273682 395.36209106]
[153.61997986 390.77316284]
] def
/pairs [
[1 72]
[2 71]
[3 70]
[4 69]
[5 68]
[6 67]
[7 66]
[8 65]
[14 55]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[21 49]
[22 48]
[23 47]
[25 45]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
