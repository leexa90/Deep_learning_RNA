%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:07:13 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGACUAGGGUUCCGGCGAAAGCCGGUCCGAGAGUUACCGACCGCCGAAAGGCGGUUACACGGCGGGAAAAAAGCCCGGGAGGA\
) def
/coor [
[67.81349945 111.75021362]
[52.93882751 113.68519592]
[38.06415939 115.62018585]
[23.18948746 117.55517578]
[8.31481743 119.49016571]
[-6.55985308 121.42514801]
[-16.85160255 135.42657471]
[-33.73803329 137.72760010]
[-46.87457275 127.40346527]
[-61.66758347 129.88676453]
[-69.89850616 140.02050781]
[-82.44120789 141.67381287]
[-92.36164093 134.49208069]
[-107.23631287 136.42706299]
[-122.11098480 138.36206055]
[-136.98565674 140.29704285]
[-151.86032104 142.23204041]
[-164.55017090 152.61950684]
[-179.79319763 146.57118225]
[-181.90867615 130.30905151]
[-168.72038269 120.56221008]
[-153.79531860 127.35736084]
[-138.92063904 125.42237854]
[-124.04596710 123.48738861]
[-109.17130280 121.55239868]
[-94.29663086 119.61740875]
[-81.10507202 108.20205688]
[-64.15089417 115.09375763]
[-49.35787964 112.61045074]
[-43.32847595 101.06546021]
[-31.54064751 95.07936096]
[-18.27400589 97.08069611]
[-8.49484158 106.55048370]
[6.37982941 104.61549377]
[21.25449944 102.68050385]
[36.12916946 100.74551392]
[51.00384140 98.81052399]
[65.87850952 96.87554169]
[79.85998535 72.27964783]
[107.57257843 66.58302307]
[114.00939178 53.03431702]
[120.44619751 39.48560715]
[126.88301086 25.93690109]
[133.31982422 12.38819218]
[139.75662231 -1.16051579]
[146.19343567 -14.70922375]
[144.34295654 -31.00363350]
[157.68817139 -40.53450394]
[172.50065613 -33.49729156]
[173.54260254 -17.13127708]
[159.74214172 -8.27241421]
[153.30532837 5.27629328]
[146.86853027 18.82500076]
[140.43171692 32.37371063]
[133.99490356 45.92241669]
[127.55809784 59.47112656]
[121.12129211 73.01983643]
[125.48585510 77.09782410]
[129.07589722 81.87182617]
[131.78230286 87.19674683]
[133.52284241 92.91075897]
[134.24461365 98.84021759]
[133.92567444 104.80492401]
[132.57571411 110.62361145]
[145.47271729 118.28307343]
[158.36970520 125.94254303]
[171.26670837 133.60200500]
[185.96524048 128.26466370]
[200.63793945 133.67257690]
[208.35684204 147.27230835]
[205.47727966 162.64247131]
[193.35891724 172.52575684]
[177.72367859 172.25558472]
[165.95402527 161.95948792]
[163.60723877 146.49900818]
[150.71023560 138.83953857]
[137.81324768 131.18006897]
[124.91624451 123.52060699]
[118.19584656 129.03359985]
[110.30442047 132.67808533]
[101.74984741 134.21952820]
[93.08264923 133.55873108]
[84.86063385 130.73822021]
[77.61293793 125.93949890]
] def
/pairs [
[1 38]
[2 37]
[3 36]
[4 35]
[5 34]
[6 33]
[9 29]
[10 28]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[64 78]
[65 77]
[66 76]
[67 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
