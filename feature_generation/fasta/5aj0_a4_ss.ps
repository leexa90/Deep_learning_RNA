%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:43 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUCUACGGCCAUACCACCCUGAACGCGCCCGAUCUCGUCUGAUCUCGGAAGCUAAGCAGGGUCGGGCCUGGUUAGUACUUGGAUGGGAGACCGCCUGGGAAUACCGGGUGCUGUAGGCU\
) def
/coor [
[95.97705841 232.88182068]
[95.58440399 217.88694763]
[95.19175720 202.89208984]
[94.79910278 187.89723206]
[94.40644836 172.90237427]
[94.01379395 157.90751648]
[93.62113953 142.91265869]
[93.22848511 127.91779327]
[92.83583069 112.92293549]
[83.33868408 124.53346252]
[68.37326813 123.51555634]
[60.53575516 110.72596741]
[66.42288208 96.92953491]
[81.07961273 93.73853302]
[67.89735413 86.58115387]
[54.62253952 79.59693146]
[41.25744247 72.78707886]
[27.89234352 65.97721863]
[14.52724552 59.16736221]
[1.16214764 52.35750198]
[-12.20295048 45.54764557]
[-27.10386276 53.42567825]
[-43.60757065 50.93980789]
[-55.29276657 39.25588226]
[-57.73107147 23.07955551]
[-71.26985168 16.62188911]
[-86.00866699 21.66221809]
[-99.64692688 14.92036152]
[-104.36128235 0.83808655]
[-117.90005493 -5.61957979]
[-131.43884277 -12.07724667]
[-144.97761536 -18.53491211]
[-159.71643066 -13.49458313]
[-173.35469055 -20.23644066]
[-178.06904602 -34.31871414]
[-191.60781860 -40.77638245]
[-207.90505981 -38.95100403]
[-217.41537476 -52.31087112]
[-210.35536194 -67.11250305]
[-193.98776245 -68.12924194]
[-185.15016174 -54.31516266]
[-171.61137390 -47.85749435]
[-157.70056152 -53.05601501]
[-143.87832642 -46.69989014]
[-138.51994324 -32.07369232]
[-124.98117065 -25.61602592]
[-111.44239044 -19.15835953]
[-97.90361023 -12.70069313]
[-83.99279022 -17.89921379]
[-70.17055511 -11.54308796]
[-64.81217957 3.08310962]
[-51.27340317 9.54077625]
[-40.11791229 2.08306003]
[-26.62377930 1.13503623]
[-14.33936024 7.05404854]
[-6.54854107 18.37746811]
[-5.39309263 32.18254852]
[7.97200537 38.99240494]
[21.33710289 45.80226135]
[34.70220184 52.61212158]
[48.06729889 59.42197800]
[61.43239594 66.23183441]
[68.91268158 66.46781158]
[75.05473328 73.39889526]
[88.23699188 80.55627441]
[115.61451721 86.25251770]
[130.48619080 84.29462433]
[145.35786438 82.33673096]
[160.22953796 80.37883759]
[175.10121155 78.42094421]
[189.97288513 76.46305847]
[204.84455872 74.50516510]
[209.55232239 61.26221085]
[219.47840881 51.40576935]
[232.62872314 46.83496475]
[246.39622498 48.39513397]
[258.07772827 55.72212982]
[265.40463257 67.32521057]
[280.32247925 65.75727844]
[293.23828125 56.61985397]
[306.70458984 62.98440552]
[321.62243652 61.41648102]
[329.94934082 57.36346054]
[336.95053101 60.00802612]
[351.90429688 58.83113861]
[366.85806274 57.65425110]
[380.05920410 47.92480850]
[394.97528076 54.73963928]
[396.26196289 71.08823395]
[382.59558105 80.15255737]
[368.03494263 72.60800934]
[353.08117676 73.78489685]
[338.12741089 74.96178436]
[323.19033813 76.33431244]
[308.27252197 77.90223694]
[296.42373657 86.92751312]
[281.89041138 80.67510986]
[266.97256470 82.24303436]
[260.80380249 97.11657715]
[247.92338562 106.93438721]
[231.76135254 108.96390533]
[216.68133545 102.56255341]
[206.80244446 89.37683868]
[191.93077087 91.33472443]
[177.05909729 93.29261780]
[162.18742371 95.25051117]
[147.31575012 97.20840454]
[132.44407654 99.16629791]
[117.57241058 101.12419128]
[107.83068848 112.53028107]
[108.22334290 127.52513885]
[108.61599731 142.52000427]
[109.00865173 157.51486206]
[109.40130615 172.50971985]
[109.79396057 187.50457764]
[110.18661499 202.49943542]
[110.57926941 217.49430847]
[110.97192383 232.48916626]
[113.66611481 251.68267822]
] def
/pairs [
[1 118]
[2 117]
[3 116]
[4 115]
[5 114]
[6 113]
[7 112]
[8 111]
[9 110]
[14 65]
[15 64]
[16 62]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[25 52]
[26 51]
[29 48]
[30 47]
[31 46]
[32 45]
[35 42]
[36 41]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[78 98]
[79 97]
[81 95]
[82 94]
[84 93]
[85 92]
[86 91]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
