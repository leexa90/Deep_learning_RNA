%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1ysh_b)
} def

/sequence { (\
UAGACGGUGGGAGAGGGUGGUGGAAUUCCCGGAGUAGCGGUGAAAUGCGCAGAUACCGGGAGGAACGCCGAUGGCGAAGGCAGCCACCUGGUCCACCCGUG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 101 0.025316348 ubox
2 100 0.023734512 ubox
3 98 0.027015912 ubox
3 100 0.032901589 ubox
4 100 0.951973172 ubox
5 99 0.977761593 ubox
5 101 0.009613443 ubox
6 97 0.351779955 ubox
6 98 0.935895660 ubox
7 96 0.453845208 ubox
7 97 0.890469722 ubox
8 95 0.534957821 ubox
9 94 0.514099610 ubox
9 96 0.520404283 ubox
10 93 0.491279976 ubox
10 94 0.857246468 ubox
11 92 0.424498437 ubox
11 93 0.870867302 ubox
11 94 0.004028013 ubox
12 89 0.016458234 ubox
12 92 0.880877543 ubox
13 88 0.017166089 ubox
13 89 0.012021840 ubox
13 92 0.010408684 ubox
13 93 0.005085821 ubox
14 89 0.294538780 ubox
14 92 0.005627891 ubox
15 87 0.006479526 ubox
15 88 0.301586016 ubox
15 89 0.945053759 ubox
16 69 0.003749636 ubox
16 85 0.015861285 ubox
16 87 0.299532963 ubox
16 88 0.953052362 ubox
16 89 0.009653038 ubox
17 68 0.004115430 ubox
17 72 0.028650299 ubox
17 84 0.016002950 ubox
17 85 0.006831118 ubox
17 87 0.953040635 ubox
17 88 0.009554750 ubox
18 67 0.004088979 ubox
18 70 0.321322790 ubox
18 71 0.036029416 ubox
18 83 0.014335025 ubox
18 86 0.905388916 ubox
19 66 0.003873892 ubox
19 69 0.518060999 ubox
19 84 0.009899082 ubox
19 85 0.854990752 ubox
19 88 0.007200672 ubox
20 66 0.013940677 ubox
20 68 0.518882662 ubox
20 81 0.003220519 ubox
20 84 0.854261583 ubox
20 87 0.007301864 ubox
21 63 0.003171497 ubox
21 65 0.019420773 ubox
21 67 0.518838090 ubox
21 70 0.041221151 ubox
21 71 0.003245534 ubox
21 80 0.004604502 ubox
21 82 0.244552006 ubox
21 83 0.780288601 ubox
21 86 0.007488556 ubox
22 26 0.005850859 ubox
22 27 0.003430830 ubox
22 66 0.616806613 ubox
22 68 0.008891248 ubox
22 69 0.119894981 ubox
22 81 0.300418077 ubox
22 85 0.007666662 ubox
23 66 0.111339527 ubox
23 68 0.119958893 ubox
23 81 0.495691903 ubox
23 84 0.007693891 ubox
26 61 0.021044735 ubox
26 62 0.822057521 ubox
26 63 0.024018981 ubox
26 64 0.022339730 ubox
26 65 0.022444108 ubox
26 76 0.003305984 ubox
26 77 0.028655603 ubox
26 78 0.236841708 ubox
26 79 0.069088343 ubox
26 80 0.020762625 ubox
26 82 0.008385254 ubox
27 60 0.003726766 ubox
27 61 0.976015289 ubox
27 62 0.014883135 ubox
27 63 0.013392024 ubox
27 64 0.013280301 ubox
27 76 0.004973006 ubox
27 77 0.129595360 ubox
27 78 0.031566902 ubox
27 79 0.010090147 ubox
27 80 0.003858281 ubox
28 59 0.003217163 ubox
28 60 0.999460134 ubox
28 62 0.005859654 ubox
28 63 0.009786990 ubox
28 76 0.026238657 ubox
29 59 0.999927876 ubox
29 60 0.005394049 ubox
29 62 0.007066173 ubox
29 74 0.005610899 ubox
30 58 0.999941228 ubox
30 59 0.005172418 ubox
30 73 0.005583476 ubox
31 56 0.005164296 ubox
31 57 0.999827847 ubox
31 72 0.003817924 ubox
32 56 0.996851106 ubox
32 57 0.012293430 ubox
33 54 0.366435051 ubox
34 50 0.032627339 ubox
34 54 0.806571570 ubox
34 56 0.040620159 ubox
35 49 0.030575680 ubox
35 51 0.116014599 ubox
35 52 0.072706402 ubox
35 53 0.827662501 ubox
35 55 0.073735281 ubox
36 54 0.076688369 ubox
37 48 0.085398226 ubox
37 50 0.991226121 ubox
38 47 0.085458750 ubox
38 49 0.991932694 ubox
38 52 0.043306456 ubox
39 46 0.078142593 ubox
39 48 0.988659782 ubox
39 50 0.006826834 ubox
40 46 0.063449759 ubox
40 48 0.076270263 ubox
40 50 0.088897705 ubox
41 45 0.064130612 ubox
41 47 0.102938944 ubox
41 49 0.088962247 ubox
42 46 0.054149319 ubox
42 48 0.088569767 ubox
57 70 0.004992415 ubox
58 69 0.005197134 ubox
59 68 0.005195952 ubox
60 66 0.004707314 ubox
62 66 0.015220548 ubox
62 68 0.006200425 ubox
62 69 0.061150844 ubox
62 81 0.093874779 ubox
63 68 0.061064755 ubox
63 69 0.007975508 ubox
63 81 0.073673267 ubox
66 73 0.013012814 ubox
66 76 0.714270148 ubox
66 79 0.012596154 ubox
66 80 0.005460407 ubox
66 83 0.016748890 ubox
67 72 0.008582620 ubox
67 75 0.738019261 ubox
67 81 0.404012405 ubox
68 73 0.008061333 ubox
68 74 0.737933486 ubox
68 80 0.404710254 ubox
69 73 0.732583234 ubox
69 74 0.014541328 ubox
69 76 0.020304100 ubox
69 79 0.404435083 ubox
70 75 0.032359298 ubox
70 84 0.008971944 ubox
70 85 0.014001943 ubox
70 87 0.013032256 ubox
70 88 0.006764603 ubox
72 76 0.023007032 ubox
72 77 0.084263648 ubox
72 78 0.025134338 ubox
72 82 0.034170538 ubox
72 83 0.011059615 ubox
72 86 0.367266423 ubox
73 81 0.033823767 ubox
73 85 0.516388184 ubox
74 81 0.148053689 ubox
74 84 0.516739767 ubox
75 79 0.025565771 ubox
75 80 0.149296253 ubox
75 83 0.516653249 ubox
76 81 0.104449910 ubox
79 84 0.004377296 ubox
79 85 0.006104491 ubox
80 84 0.006067751 ubox
84 91 0.003193393 ubox
85 90 0.003192068 ubox
4 100 0.9500000 lbox
5 99 0.9500000 lbox
6 98 0.9500000 lbox
7 97 0.9500000 lbox
10 94 0.9500000 lbox
11 93 0.9500000 lbox
12 92 0.9500000 lbox
15 89 0.9500000 lbox
16 88 0.9500000 lbox
17 87 0.9500000 lbox
18 86 0.9500000 lbox
19 85 0.9500000 lbox
20 84 0.9500000 lbox
21 83 0.9500000 lbox
23 81 0.9500000 lbox
26 62 0.9500000 lbox
27 61 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
68 74 0.9500000 lbox
69 73 0.9500000 lbox
showpage
end
%%EOF
