%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GACAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGUCC\
) def
/coor [
[98.31974792 224.20129395]
[97.61666870 209.21778870]
[96.91358185 194.23426819]
[96.21049500 179.25076294]
[95.50741577 164.26724243]
[94.80432892 149.28373718]
[81.85767365 146.11656189]
[70.22335052 139.61354065]
[60.74292374 130.24505615]
[54.10217285 118.68878937]
[50.78145599 105.78066254]
[51.02097321 92.45439148]
[36.71228409 87.95311737]
[22.40359688 83.45185089]
[8.09490776 78.95058441]
[-6.21378088 74.44931030]
[-19.29871368 83.01193237]
[-34.82009888 81.10913086]
[-45.44920731 69.63934326]
[-46.16730499 54.01825714]
[-36.63532639 41.62166977]
[-21.35397911 38.30287170]
[-7.53864765 45.62889862]
[-1.71251118 60.14062119]
[12.59617805 64.64189148]
[26.90486717 69.14315796]
[41.21355438 73.64443207]
[55.52224350 78.14569855]
[61.08846283 69.31166840]
[68.38206482 61.83997345]
[77.07926941 56.06230164]
[86.79399109 52.23513412]
[97.09495544 50.52837372]
[107.52487946 51.01778412]
[117.62075806 53.68164444]
[126.93440247 58.40169525]
[135.05236816 64.96839905]
[141.61425781 73.09024811]
[146.32879639 82.40669250]
[160.99610901 79.26509094]
[175.66343689 76.12348175]
[190.33074951 72.98188019]
[204.99807739 69.84027863]
[219.66540527 66.69866943]
[226.82482910 52.79627991]
[241.26547241 46.79613495]
[256.16891479 51.53131866]
[264.49816895 64.76602173]
[262.32043457 80.25122833]
[250.66398621 90.67528534]
[235.03262329 91.11628723]
[222.80700684 81.36599731]
[208.13967896 84.50759888]
[193.47235107 87.64920044]
[178.80503845 90.79080200]
[164.13771057 93.93241119]
[149.47039795 97.07401276]
[145.29129028 120.11417389]
[131.00021362 138.66352844]
[109.78784180 148.58064270]
[110.49092865 163.56416321]
[111.19400787 178.54766846]
[111.89709473 193.53118896]
[112.60018158 208.51469421]
[113.30326080 223.49821472]
[116.39434052 242.63183594]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[5 61]
[6 60]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[39 57]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
