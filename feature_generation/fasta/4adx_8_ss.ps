%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGGAGGUGUAAAAACCUUCGAAGUGGUCAACACAACAGACGUGGUAUAGAGCGGUAACGCAAAGAAACCCGGAGGCCAGCACCUUUGCUGGCUUCUGGGGGAGACAUAAUUUCACGAGUAGAAUUUCCUACG\
) def
/coor [
[107.77809143 295.40362549]
[108.83245087 280.44122314]
[101.35099030 279.91415405]
[93.64888000 292.78573608]
[85.94676208 305.65728760]
[78.24465179 318.52886963]
[70.54254150 331.40045166]
[62.84042740 344.27203369]
[66.93437958 359.53686523]
[58.96311951 373.18362427]
[43.65585709 377.11596680]
[30.09411812 369.00088501]
[26.32384109 353.65289307]
[34.58186340 340.17770386]
[49.96884918 336.56991577]
[57.67096329 323.69833374]
[65.37307739 310.82675171]
[73.07518768 297.95516968]
[80.77730560 285.08361816]
[88.47941589 272.21203613]
[92.64401245 257.80175781]
[92.99565125 242.80587769]
[93.34729004 227.80999756]
[93.69892883 212.81411743]
[94.05056763 197.81823730]
[83.50782013 181.67454529]
[94.01136780 164.54129028]
[93.65972900 149.54541016]
[93.30809021 134.54954529]
[71.47911835 129.75932312]
[54.03801346 110.94679260]
[49.75672913 82.28272247]
[35.08940887 79.14111328]
[20.42208672 75.99951172]
[8.19646549 85.74980164]
[-7.43489885 85.30880737]
[-19.09135246 74.88474274]
[-21.26907730 59.39953995]
[-12.93981552 46.16483688]
[1.96360826 41.42965317]
[16.40425491 47.42979813]
[23.56369019 61.33219147]
[38.23101044 64.47379303]
[52.89833450 67.61540222]
[57.40570068 61.62093353]
[45.41677094 52.60619354]
[31.22897148 47.73727798]
[31.47550392 32.73930359]
[45.81566238 28.33931923]
[54.43150711 40.61726379]
[66.42044067 49.63199997]
[70.92781067 43.63753510]
[63.83748245 30.41909027]
[56.74715424 17.20064735]
[42.53082275 9.02581215]
[42.77285385 -7.37154913]
[57.22426605 -15.12323761]
[71.01868439 -6.25498056]
[69.96559906 10.11031914]
[77.05592346 23.32876205]
[84.14625549 36.54720688]
[91.54547882 37.77253723]
[91.66039276 22.77297783]
[91.42700958 7.77479267]
[105.12732697 1.66731143]
[116.12656403 11.86617279]
[111.07048035 25.98733521]
[106.34393311 40.22319794]
[113.74316406 41.44852829]
[124.71613312 31.22141075]
[135.68910217 20.99429321]
[146.66207886 10.76717567]
[157.63504028 0.54005814]
[168.60801697 -9.68705940]
[179.58097839 -19.91417694]
[190.55395508 -30.14129448]
[201.52691650 -40.36841202]
[212.49989319 -50.59552765]
[223.47286987 -60.82264709]
[234.44583130 -71.04976654]
[245.41880798 -81.27687836]
[256.39178467 -91.50399780]
[260.67050171 -107.33512878]
[276.58731079 -111.28312683]
[287.76837158 -99.28663635]
[282.71157837 -83.68661499]
[266.61889648 -80.53102875]
[255.64591980 -70.30390930]
[244.67294312 -60.07679367]
[233.69998169 -49.84967422]
[222.72700500 -39.62255859]
[211.75404358 -29.39544106]
[200.78106689 -19.16832352]
[189.80810547 -8.94120693]
[178.83512878 1.28591084]
[167.86216736 11.51302814]
[156.88919067 21.74014473]
[145.91621399 31.96726227]
[134.94325256 42.19438171]
[123.97028351 52.42149734]
[142.90402222 76.84278107]
[143.94529724 105.04218292]
[129.76666260 126.28761292]
[108.30397034 134.19790649]
[108.65560913 149.19377136]
[109.00724792 164.18965149]
[117.38081360 171.31462097]
[120.33855438 181.67454529]
[117.12309265 191.72586060]
[109.04644775 198.16987610]
[108.69480896 213.16575623]
[108.34317017 228.16163635]
[107.99153137 243.15751648]
[107.63989258 258.15338135]
[114.62061310 256.20758057]
[122.73812866 256.80044556]
[131.15255737 260.30297852]
[138.92646790 266.82656860]
[145.10113525 276.20104980]
[150.92250061 290.02536011]
[156.74388123 303.84967041]
[162.56526184 317.67398071]
[177.29443359 323.40347290]
[183.58160400 337.90338135]
[177.69670105 352.57113647]
[163.13114929 358.70465088]
[148.52641296 352.66500854]
[142.54722595 338.03543091]
[148.74095154 323.49536133]
[142.91957092 309.67105103]
[137.09819031 295.84674072]
[131.27682495 282.02243042]
[123.79536438 281.49536133]
] def
/pairs [
[3 20]
[4 19]
[5 18]
[6 17]
[7 16]
[8 15]
[21 114]
[22 113]
[23 112]
[24 111]
[25 110]
[27 106]
[28 105]
[29 104]
[32 44]
[33 43]
[34 42]
[52 61]
[53 60]
[54 59]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 95]
[75 94]
[76 93]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[119 132]
[120 131]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
