%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGCUUGUGGCGGCCAAGCGUUCAUAGCGACGUCGCUUUUUGAUCCUUCG\
) def
/coor [
[74.48381042 132.04650879]
[61.49342728 139.54650879]
[48.50304794 147.04650879]
[35.51266479 154.54650879]
[22.52228546 162.04650879]
[18.67444038 177.37522888]
[5.07183695 185.42163086]
[-10.21534443 181.41194153]
[-18.11748886 167.72502136]
[-13.94639492 152.48109436]
[-0.17669755 144.72409058]
[15.02228451 149.05612183]
[28.01266670 141.55612183]
[41.00304794 134.05612183]
[53.99342728 126.55612183]
[66.98381042 119.05612183]
[78.95407104 110.01660156]
[89.72274780 99.57459259]
[93.07642365 91.75133514]
[101.49061584 88.84676361]
[106.93650818 73.99237823]
[121.63568878 71.58752441]
[133.02676392 61.82825089]
[144.41783142 52.06897736]
[149.66737366 32.98055267]
[168.27485657 29.07702446]
[178.38029480 17.99189186]
[188.48571777 6.90675735]
[198.59115601 -4.17837667]
[201.56901550 -20.30488968]
[217.11228943 -25.53350449]
[229.23141479 -14.48547077]
[225.45925903 1.47394216]
[209.67630005 5.92705822]
[199.57086182 17.01219177]
[189.46542358 28.09732628]
[179.35998535 39.18246078]
[180.74038696 49.93313217]
[175.61395264 59.73884964]
[165.59729004 64.94953156]
[154.17710876 63.46004868]
[142.78604126 73.21932220]
[131.39495850 82.97859955]
[126.76383972 97.13494110]
[111.24988556 100.23783875]
[100.16475677 110.34327698]
[89.39608002 120.78528595]
[88.18019867 126.27272797]
[85.26792908 130.36866760]
[81.46523285 132.66116333]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[17 47]
[18 46]
[20 45]
[22 43]
[23 42]
[24 41]
[26 37]
[27 36]
[28 35]
[29 34]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
