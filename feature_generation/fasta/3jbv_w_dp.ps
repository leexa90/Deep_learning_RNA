%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:34 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3jbv_w)
} def

/sequence { (\
GGCACGUAGCGCAGCUGGUAGCGCACCGUCAUGCCGUGUCGGGGGUCGGAGGUUCAAAUCCUCUCGUGCCGACA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 30 0.022758728 ubox
1 34 0.003371742 ubox
1 35 0.986975339 ubox
1 40 0.016759911 ubox
1 70 0.151208006 ubox
2 10 0.003479057 ubox
2 22 0.003264861 ubox
2 29 0.022369058 ubox
2 30 0.015810571 ubox
2 34 0.987718716 ubox
2 39 0.016875957 ubox
2 69 0.151324100 ubox
3 9 0.003484165 ubox
3 21 0.003270637 ubox
3 28 0.022220554 ubox
3 33 0.987423913 ubox
3 38 0.016917717 ubox
3 68 0.151324537 ubox
4 29 0.707086213 ubox
4 32 0.680130233 ubox
4 37 0.016976620 ubox
4 67 0.151258916 ubox
5 23 0.005861375 ubox
5 28 0.967472988 ubox
5 36 0.016990215 ubox
5 66 0.151229802 ubox
6 22 0.005937252 ubox
6 26 0.194531951 ubox
6 27 0.953535617 ubox
6 29 0.012727485 ubox
6 30 0.135539528 ubox
6 32 0.008151830 ubox
6 34 0.005316298 ubox
6 35 0.015855073 ubox
6 65 0.143331900 ubox
7 17 0.019755542 ubox
7 20 0.004168984 ubox
7 21 0.005730466 ubox
7 25 0.250648789 ubox
7 28 0.057640318 ubox
7 31 0.012495509 ubox
7 33 0.007462296 ubox
8 16 0.021934186 ubox
8 19 0.004478284 ubox
8 29 0.021545325 ubox
8 32 0.007228484 ubox
8 62 0.003796350 ubox
8 64 0.018190870 ubox
9 15 0.022187865 ubox
9 19 0.006754382 ubox
9 22 0.005785957 ubox
9 24 0.997190552 ubox
9 26 0.040139274 ubox
9 27 0.014008764 ubox
9 29 0.033898864 ubox
9 30 0.003313848 ubox
9 34 0.008054308 ubox
9 39 0.004966513 ubox
9 63 0.004444210 ubox
10 14 0.022027881 ubox
10 17 0.004619255 ubox
10 18 0.006883474 ubox
10 21 0.005789592 ubox
10 23 0.997694099 ubox
10 28 0.035222514 ubox
10 33 0.008086384 ubox
10 36 0.003196868 ubox
10 38 0.005297798 ubox
11 19 0.005103689 ubox
11 22 0.997599731 ubox
11 24 0.047873390 ubox
11 26 0.003947791 ubox
11 27 0.034551475 ubox
11 32 0.007337063 ubox
11 34 0.012771123 ubox
11 37 0.005296048 ubox
12 17 0.004312677 ubox
12 18 0.006461715 ubox
12 21 0.997365013 ubox
12 23 0.047822664 ubox
12 33 0.012981334 ubox
12 36 0.005288275 ubox
13 19 0.152378635 ubox
13 32 0.012856674 ubox
14 19 0.049234213 ubox
14 22 0.054393992 ubox
14 24 0.028973104 ubox
14 29 0.007173521 ubox
14 30 0.009269651 ubox
14 34 0.005039894 ubox
15 21 0.054740276 ubox
15 23 0.028701696 ubox
15 28 0.007520188 ubox
15 33 0.005040895 ubox
16 20 0.050418814 ubox
16 21 0.005196917 ubox
16 23 0.004329705 ubox
16 28 0.013107587 ubox
16 36 0.003536010 ubox
17 22 0.018846897 ubox
17 27 0.016147357 ubox
17 35 0.005179170 ubox
18 26 0.016158970 ubox
18 34 0.005195304 ubox
18 47 0.004460344 ubox
19 25 0.015670046 ubox
19 33 0.005189210 ubox
20 32 0.004863372 ubox
21 29 0.005306967 ubox
21 46 0.020514783 ubox
21 47 0.005388937 ubox
22 28 0.005842856 ubox
22 45 0.021880486 ubox
23 27 0.005471118 ubox
23 34 0.004260685 ubox
24 33 0.004744628 ubox
24 43 0.021925673 ubox
24 44 0.004862561 ubox
24 45 0.003890578 ubox
25 32 0.004345485 ubox
25 37 0.003259336 ubox
25 39 0.004870915 ubox
25 46 0.032373086 ubox
25 53 0.009955035 ubox
26 36 0.003288654 ubox
26 38 0.005206010 ubox
26 42 0.136188384 ubox
26 43 0.009286792 ubox
26 44 0.006584869 ubox
26 45 0.034548795 ubox
26 49 0.024474892 ubox
26 52 0.010651022 ubox
27 36 0.006248738 ubox
27 41 0.136721393 ubox
27 42 0.007104759 ubox
27 43 0.006541696 ubox
27 44 0.034519924 ubox
27 48 0.038487504 ubox
27 51 0.010653542 ubox
28 34 0.004061203 ubox
28 35 0.006191081 ubox
28 40 0.136810558 ubox
28 47 0.040153968 ubox
29 33 0.003864872 ubox
29 41 0.003753436 ubox
29 42 0.032778578 ubox
29 43 0.004776352 ubox
29 45 0.005057861 ubox
29 49 0.009179435 ubox
29 50 0.004781796 ubox
30 36 0.003261766 ubox
30 38 0.136635755 ubox
30 41 0.032760098 ubox
30 42 0.004873361 ubox
30 44 0.005132652 ubox
30 45 0.031719178 ubox
30 48 0.011146143 ubox
30 49 0.004919775 ubox
31 37 0.134870178 ubox
31 39 0.016705008 ubox
31 46 0.026500530 ubox
32 36 0.124837095 ubox
32 38 0.016515574 ubox
32 41 0.003322819 ubox
32 43 0.003337965 ubox
32 44 0.033260251 ubox
32 45 0.027737469 ubox
33 37 0.007753283 ubox
33 39 0.013084110 ubox
33 40 0.004753849 ubox
33 46 0.020668287 ubox
33 47 0.006488432 ubox
34 38 0.013379611 ubox
34 42 0.037380410 ubox
34 43 0.029778564 ubox
34 44 0.005309092 ubox
34 45 0.022496561 ubox
35 41 0.037444580 ubox
35 42 0.029751134 ubox
35 43 0.005342684 ubox
35 44 0.022499383 ubox
36 40 0.035072376 ubox
36 73 0.009687418 ubox
37 42 0.015898844 ubox
37 72 0.006235228 ubox
37 74 0.777156788 ubox
38 73 0.987497162 ubox
39 72 0.987952528 ubox
40 71 0.988111640 ubox
41 63 0.010626629 ubox
41 69 0.005822943 ubox
41 70 0.980571848 ubox
41 73 0.017436732 ubox
42 62 0.011371201 ubox
42 69 0.973415033 ubox
42 70 0.115684483 ubox
42 73 0.003201125 ubox
43 47 0.012566723 ubox
43 61 0.022821431 ubox
43 62 0.004595599 ubox
43 64 0.008925110 ubox
43 65 0.035673837 ubox
43 67 0.089720014 ubox
43 69 0.162915546 ubox
43 70 0.029704590 ubox
44 60 0.022862083 ubox
44 61 0.004891764 ubox
44 63 0.009373105 ubox
44 64 0.035563949 ubox
44 65 0.024574889 ubox
44 67 0.715974383 ubox
44 69 0.033054683 ubox
44 70 0.034656269 ubox
45 59 0.022815156 ubox
45 60 0.004883848 ubox
45 62 0.007811050 ubox
45 63 0.035601502 ubox
45 64 0.014587118 ubox
45 65 0.176060783 ubox
45 67 0.224921797 ubox
45 69 0.037327661 ubox
46 58 0.022728198 ubox
46 66 0.087908187 ubox
46 68 0.040120127 ubox
47 66 0.744718552 ubox
47 68 0.007905653 ubox
48 55 0.003726241 ubox
48 61 0.046958367 ubox
48 62 0.007423212 ubox
48 63 0.020252933 ubox
48 64 0.630600584 ubox
48 65 0.739547854 ubox
48 67 0.004011539 ubox
49 55 0.022739913 ubox
49 60 0.047049879 ubox
49 61 0.007711369 ubox
49 62 0.009693461 ubox
49 63 0.995205711 ubox
49 64 0.071000439 ubox
49 65 0.008933429 ubox
50 54 0.019787085 ubox
50 59 0.046899742 ubox
50 62 0.998140036 ubox
50 64 0.009970640 ubox
51 60 0.018808248 ubox
51 61 0.998264147 ubox
51 62 0.007771160 ubox
51 63 0.010046714 ubox
52 59 0.023720856 ubox
52 60 0.997083763 ubox
52 61 0.009806271 ubox
52 62 0.007130880 ubox
53 57 0.020070165 ubox
53 58 0.120800594 ubox
54 58 0.151798876 ubox
1 35 0.9500000 lbox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 29 0.9500000 lbox
5 28 0.9500000 lbox
6 27 0.9500000 lbox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
37 74 0.9500000 lbox
38 73 0.9500000 lbox
39 72 0.9500000 lbox
40 71 0.9500000 lbox
41 70 0.9500000 lbox
42 69 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
showpage
end
%%EOF
