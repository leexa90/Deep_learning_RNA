%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:37 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3oww_a)
} def

/sequence { (\
GCUCUGGAGAGAACCGUUUAAUCGGUCGCCGAAGGAGCAAGCUCUGCGGAAACGCAGAGUGAAACUCUCAGGCAAAAGGACAGAGU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.035368805 ubox
1 73 0.016386496 ubox
1 81 0.003784573 ubox
1 86 0.898781619 ubox
2 11 0.015551922 ubox
2 37 0.035396827 ubox
2 72 0.016306191 ubox
2 85 0.997663271 ubox
3 10 0.015706450 ubox
3 12 0.012470270 ubox
3 36 0.035375621 ubox
3 71 0.005379571 ubox
3 84 0.998697685 ubox
4 9 0.015669272 ubox
4 11 0.013249756 ubox
4 35 0.035309154 ubox
4 71 0.015532982 ubox
4 78 0.003347947 ubox
4 83 0.998950407 ubox
5 10 0.013318884 ubox
5 31 0.007971330 ubox
5 34 0.033965420 ubox
5 70 0.015371872 ubox
5 77 0.003273133 ubox
5 82 0.998469344 ubox
6 15 0.004553681 ubox
6 30 0.016398924 ubox
6 69 0.012036614 ubox
6 81 0.996215813 ubox
7 14 0.005717295 ubox
7 19 0.003548489 ubox
7 23 0.014738213 ubox
7 27 0.078632918 ubox
7 29 0.016457663 ubox
7 30 0.009514359 ubox
7 67 0.005320306 ubox
7 68 0.004753803 ubox
7 69 0.022902146 ubox
7 81 0.031626641 ubox
8 18 0.003628018 ubox
8 19 0.005865416 ubox
8 22 0.014691090 ubox
8 26 0.060678497 ubox
8 66 0.005338248 ubox
8 68 0.024822860 ubox
9 14 0.003400652 ubox
9 17 0.003436841 ubox
9 18 0.006586664 ubox
9 23 0.006897078 ubox
9 26 0.004130972 ubox
9 27 0.126150986 ubox
9 29 0.016184918 ubox
9 30 0.021102817 ubox
9 65 0.005304340 ubox
9 67 0.025266436 ubox
9 81 0.006031959 ubox
10 17 0.006542244 ubox
10 19 0.005261988 ubox
10 22 0.006827911 ubox
10 26 0.095735486 ubox
10 66 0.025228095 ubox
11 15 0.003240103 ubox
11 18 0.005685908 ubox
11 19 0.012680656 ubox
11 23 0.015930070 ubox
11 26 0.007788414 ubox
11 27 0.740252210 ubox
11 29 0.005960249 ubox
11 65 0.024915255 ubox
12 17 0.005185937 ubox
12 18 0.012610291 ubox
12 19 0.003343025 ubox
12 22 0.015124684 ubox
12 26 0.523447948 ubox
13 17 0.009641209 ubox
13 26 0.813585730 ubox
14 24 0.004386590 ubox
14 25 0.999223944 ubox
14 72 0.003627874 ubox
15 24 0.999511480 ubox
15 71 0.003629599 ubox
16 22 0.012568528 ubox
16 23 0.992208436 ubox
16 38 0.010988955 ubox
17 21 0.050665074 ubox
17 37 0.010987594 ubox
18 36 0.010906314 ubox
19 35 0.010562741 ubox
22 32 0.011427628 ubox
22 79 0.003696078 ubox
22 80 0.005582043 ubox
23 31 0.012200733 ubox
23 78 0.005655039 ubox
23 79 0.005843631 ubox
24 30 0.012209688 ubox
25 29 0.012012633 ubox
25 81 0.005126144 ubox
26 74 0.020584584 ubox
26 75 0.031042283 ubox
26 76 0.007221545 ubox
26 77 0.007176443 ubox
26 79 0.014888237 ubox
26 80 0.019649094 ubox
27 78 0.038143060 ubox
27 79 0.032066357 ubox
28 38 0.022440680 ubox
28 73 0.997722177 ubox
29 35 0.004993176 ubox
29 37 0.022399121 ubox
29 72 0.998844970 ubox
29 79 0.004341510 ubox
30 34 0.005016972 ubox
30 35 0.021255534 ubox
30 71 0.998540708 ubox
30 72 0.005838195 ubox
30 78 0.004355795 ubox
31 67 0.005676468 ubox
31 68 0.004073413 ubox
31 69 0.217405376 ubox
31 73 0.003429717 ubox
32 66 0.004207219 ubox
32 68 0.169925306 ubox
33 66 0.036839740 ubox
33 68 0.311447278 ubox
34 65 0.037618863 ubox
34 66 0.055400292 ubox
34 67 0.278411971 ubox
34 68 0.893262004 ubox
34 69 0.099735549 ubox
35 65 0.072517404 ubox
35 66 0.209696812 ubox
35 67 0.955780832 ubox
35 68 0.010152576 ubox
35 69 0.013514838 ubox
36 66 0.968134161 ubox
36 68 0.013840542 ubox
37 65 0.968060894 ubox
37 67 0.013839897 ubox
38 61 0.050883376 ubox
39 60 0.029062836 ubox
40 60 0.025035616 ubox
41 60 0.995796069 ubox
42 59 0.999945609 ubox
43 58 0.999846983 ubox
44 57 0.999983102 ubox
45 56 0.999755025 ubox
46 55 0.999989808 ubox
47 54 0.999976575 ubox
48 53 0.997201222 ubox
49 53 0.007095676 ubox
64 86 0.030806691 ubox
65 85 0.034226855 ubox
66 84 0.034259755 ubox
67 83 0.034255526 ubox
67 85 0.007448303 ubox
68 79 0.004969813 ubox
68 80 0.006189318 ubox
68 82 0.031972616 ubox
68 84 0.007544950 ubox
69 78 0.009698485 ubox
69 79 0.008044226 ubox
69 83 0.007541161 ubox
71 81 0.014843595 ubox
72 81 0.007644056 ubox
73 78 0.024379277 ubox
73 79 0.016190163 ubox
1 86 0.9500000 lbox
2 85 0.9500000 lbox
3 84 0.9500000 lbox
4 83 0.9500000 lbox
5 82 0.9500000 lbox
6 81 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
28 73 0.9500000 lbox
29 72 0.9500000 lbox
30 71 0.9500000 lbox
34 68 0.9500000 lbox
35 67 0.9500000 lbox
36 66 0.9500000 lbox
37 65 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
43 58 0.9500000 lbox
44 57 0.9500000 lbox
45 56 0.9500000 lbox
46 55 0.9500000 lbox
47 54 0.9500000 lbox
48 53 0.9500000 lbox
showpage
end
%%EOF
