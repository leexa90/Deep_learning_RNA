%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:49 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5d8h_a)
} def

/sequence { (\
GCCUAAGACAGCGGGGAGGUUGGCUUAGAAGCAGCCAUCCUUUAAAGAGUGCGUAACAGCUCACCCGUCGAGGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.003663759 ubox
1 12 0.003681375 ubox
1 74 0.987043125 ubox
2 7 0.003769263 ubox
2 11 0.003697329 ubox
2 73 0.998768048 ubox
3 72 0.998775239 ubox
3 73 0.016495631 ubox
4 70 0.013939434 ubox
4 71 0.977270739 ubox
4 72 0.017608011 ubox
5 68 0.004218933 ubox
6 68 0.014600498 ubox
7 68 0.038752191 ubox
7 69 0.747869685 ubox
7 74 0.003797541 ubox
8 68 0.641436969 ubox
9 67 0.534903975 ubox
9 70 0.444975541 ubox
9 72 0.009965313 ubox
10 42 0.003371528 ubox
10 43 0.009908977 ubox
10 61 0.007549063 ubox
10 68 0.039862311 ubox
11 42 0.009607351 ubox
11 43 0.016601020 ubox
11 50 0.003675327 ubox
11 60 0.007594999 ubox
11 64 0.012343645 ubox
11 65 0.053225132 ubox
11 66 0.200999343 ubox
11 68 0.753919414 ubox
11 69 0.052796865 ubox
12 47 0.011771575 ubox
12 49 0.003901098 ubox
12 59 0.007586628 ubox
12 67 0.843847199 ubox
12 70 0.003980573 ubox
13 40 0.010617449 ubox
13 41 0.056786216 ubox
13 42 0.068429717 ubox
13 43 0.005912620 ubox
13 62 0.005951980 ubox
13 64 0.040105288 ubox
13 65 0.244969685 ubox
13 66 0.956527764 ubox
13 69 0.003878455 ubox
14 39 0.010541359 ubox
14 40 0.061381678 ubox
14 41 0.088167509 ubox
14 42 0.005095464 ubox
14 43 0.005075954 ubox
14 61 0.005213148 ubox
14 62 0.013570050 ubox
14 64 0.244256274 ubox
14 65 0.956667025 ubox
14 66 0.078145022 ubox
15 38 0.010309822 ubox
15 39 0.061626575 ubox
15 40 0.112412045 ubox
15 41 0.003809721 ubox
15 42 0.007378437 ubox
15 43 0.254703049 ubox
15 60 0.004100716 ubox
15 61 0.008947578 ubox
15 62 0.011344463 ubox
15 64 0.945821357 ubox
15 65 0.078837599 ubox
15 66 0.005864790 ubox
16 38 0.060568777 ubox
16 39 0.117832724 ubox
16 40 0.008329757 ubox
16 41 0.014744144 ubox
16 42 0.924540723 ubox
16 43 0.091384545 ubox
16 60 0.006224557 ubox
16 61 0.005233107 ubox
16 62 0.049054427 ubox
16 64 0.076313556 ubox
16 65 0.005761766 ubox
17 38 0.117445701 ubox
17 41 0.979585653 ubox
17 42 0.073979403 ubox
17 43 0.005877801 ubox
17 61 0.038270759 ubox
18 36 0.137081741 ubox
18 39 0.014091056 ubox
18 40 0.988428399 ubox
18 41 0.046181534 ubox
18 60 0.018621892 ubox
18 61 0.032234975 ubox
18 62 0.003166135 ubox
19 35 0.137277829 ubox
19 38 0.014448420 ubox
19 39 0.985872160 ubox
19 40 0.045797303 ubox
19 57 0.005005409 ubox
19 60 0.033287527 ubox
20 34 0.137090172 ubox
20 37 0.025358295 ubox
20 56 0.005013482 ubox
20 58 0.010425533 ubox
20 59 0.034074437 ubox
21 33 0.129893532 ubox
21 34 0.003625732 ubox
21 37 0.970926301 ubox
21 55 0.004609188 ubox
21 58 0.033697024 ubox
22 32 0.099255654 ubox
22 36 0.989889171 ubox
22 54 0.004064197 ubox
22 57 0.033461801 ubox
23 32 0.099239485 ubox
23 35 0.989898354 ubox
23 50 0.008197310 ubox
23 52 0.003360095 ubox
24 31 0.130148580 ubox
24 34 0.989666748 ubox
24 49 0.008260838 ubox
24 51 0.003240546 ubox
25 29 0.012403000 ubox
25 30 0.121054939 ubox
25 31 0.024693374 ubox
25 33 0.952159455 ubox
25 34 0.013173772 ubox
25 48 0.008279439 ubox
25 56 0.006378824 ubox
26 30 0.048509709 ubox
26 31 0.232811633 ubox
26 33 0.082903230 ubox
26 47 0.008127659 ubox
26 55 0.007352710 ubox
27 54 0.006941968 ubox
28 32 0.103577254 ubox
28 43 0.008799062 ubox
29 42 0.008969474 ubox
29 54 0.003294151 ubox
30 41 0.009010376 ubox
31 40 0.009015292 ubox
31 52 0.015772840 ubox
31 54 0.003303473 ubox
32 51 0.015784181 ubox
32 53 0.003396207 ubox
33 38 0.004203078 ubox
33 50 0.015390975 ubox
33 54 0.003773308 ubox
34 52 0.016809797 ubox
34 54 0.021462793 ubox
35 49 0.004857417 ubox
35 51 0.015463230 ubox
35 53 0.021959027 ubox
36 47 0.012983980 ubox
36 49 0.007295456 ubox
36 51 0.023732264 ubox
37 50 0.024664473 ubox
38 45 0.004339632 ubox
38 48 0.014659809 ubox
38 49 0.023217442 ubox
39 47 0.014770717 ubox
39 49 0.005149416 ubox
39 51 0.003700246 ubox
40 47 0.026115524 ubox
40 49 0.015796166 ubox
41 45 0.004679194 ubox
41 46 0.024978064 ubox
41 48 0.016889945 ubox
41 49 0.004482029 ubox
42 46 0.009667313 ubox
42 47 0.016115608 ubox
42 48 0.009303449 ubox
42 49 0.004402328 ubox
42 63 0.004342835 ubox
43 47 0.010425688 ubox
43 48 0.012208935 ubox
43 49 0.004678255 ubox
43 63 0.016249470 ubox
44 50 0.005121993 ubox
45 50 0.006555107 ubox
46 50 0.004031094 ubox
46 61 0.012664347 ubox
47 52 0.005970331 ubox
47 60 0.013214520 ubox
47 61 0.004422032 ubox
47 62 0.965578857 ubox
47 64 0.012327190 ubox
47 65 0.025811361 ubox
47 66 0.041089203 ubox
48 61 0.966310753 ubox
49 57 0.033770324 ubox
49 60 0.962961005 ubox
49 61 0.016599559 ubox
49 62 0.184082082 ubox
49 64 0.081483022 ubox
50 56 0.034701063 ubox
50 58 0.184412884 ubox
50 59 0.941961164 ubox
50 63 0.086691964 ubox
51 57 0.227339440 ubox
51 60 0.247604464 ubox
51 62 0.087571088 ubox
52 59 0.251663485 ubox
53 57 0.104748652 ubox
53 60 0.088942553 ubox
53 62 0.005914878 ubox
54 58 0.012721882 ubox
54 59 0.086310358 ubox
1 74 0.9500000 lbox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
11 68 0.9500000 lbox
12 67 0.9500000 lbox
13 66 0.9500000 lbox
14 65 0.9500000 lbox
15 64 0.9500000 lbox
16 42 0.9500000 lbox
17 41 0.9500000 lbox
18 40 0.9500000 lbox
19 39 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
showpage
end
%%EOF
