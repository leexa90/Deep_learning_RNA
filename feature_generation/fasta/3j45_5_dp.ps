%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3j45_5)
} def

/sequence { (\
UGAACAUUGAGCCUUGAUGUGUAGGAUAGGUGGGAGGCUUUGAAGUGUGGACGCCAGUCUGCAUGGAGCCGACCUUGAAAUACCACCCUUUAAUGUUUGAUGUUCUAA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 99 0.003722775 ubox
1 107 0.121881698 ubox
1 108 0.017261422 ubox
2 98 0.006079333 ubox
2 104 0.004805822 ubox
2 105 0.997218555 ubox
2 106 0.022448178 ubox
3 97 0.006281673 ubox
3 103 0.003802043 ubox
3 104 0.999088766 ubox
4 96 0.006331955 ubox
4 103 0.999430226 ubox
5 95 0.006343259 ubox
5 102 0.999953030 ubox
6 94 0.006340869 ubox
6 101 0.999568816 ubox
7 93 0.006336390 ubox
7 100 0.999211030 ubox
8 92 0.006316379 ubox
8 99 0.994676427 ubox
9 91 0.006207568 ubox
9 98 0.994550939 ubox
10 90 0.005970486 ubox
10 97 0.998464956 ubox
10 98 0.004057275 ubox
11 89 0.004531587 ubox
11 96 0.999296626 ubox
11 97 0.003320284 ubox
12 25 0.012283881 ubox
12 95 0.998666918 ubox
13 19 0.005800324 ubox
13 21 0.003767005 ubox
13 24 0.016428821 ubox
13 25 0.016366313 ubox
13 29 0.003316205 ubox
13 95 0.032244757 ubox
14 23 0.016374715 ubox
14 24 0.016428430 ubox
14 28 0.003213517 ubox
14 92 0.013841392 ubox
14 93 0.956794647 ubox
15 23 0.016348287 ubox
15 92 0.990241237 ubox
15 93 0.023564491 ubox
16 22 0.015486581 ubox
16 86 0.007277219 ubox
16 87 0.014954935 ubox
16 88 0.011823642 ubox
16 89 0.009324272 ubox
16 90 0.060981490 ubox
16 91 0.990029910 ubox
16 94 0.007630027 ubox
16 97 0.004385472 ubox
17 27 0.004105703 ubox
17 31 0.004945772 ubox
17 89 0.070478915 ubox
17 90 0.974119839 ubox
17 91 0.015148079 ubox
17 94 0.037129398 ubox
17 96 0.005787347 ubox
18 26 0.004767802 ubox
18 28 0.019725275 ubox
18 30 0.005296527 ubox
18 85 0.138436850 ubox
18 92 0.010919284 ubox
18 93 0.037360657 ubox
18 95 0.006100670 ubox
19 27 0.021643983 ubox
19 83 0.009616732 ubox
19 84 0.139417544 ubox
19 86 0.389245248 ubox
19 87 0.248177164 ubox
19 88 0.727281072 ubox
19 89 0.028010378 ubox
19 90 0.011656194 ubox
19 91 0.011593034 ubox
19 94 0.027999633 ubox
20 26 0.021813771 ubox
20 28 0.008831539 ubox
20 82 0.011150803 ubox
20 85 0.392032681 ubox
20 92 0.031568838 ubox
20 93 0.027643874 ubox
21 27 0.009295728 ubox
21 81 0.011164518 ubox
21 83 0.261938743 ubox
21 84 0.329558884 ubox
21 86 0.823280487 ubox
21 87 0.205380580 ubox
21 88 0.032454481 ubox
21 89 0.010394398 ubox
21 90 0.019485085 ubox
21 91 0.033165944 ubox
21 94 0.008561376 ubox
22 26 0.008667481 ubox
22 28 0.004023845 ubox
22 80 0.011103833 ubox
22 82 0.334570443 ubox
22 85 0.820775946 ubox
22 92 0.007892123 ubox
22 93 0.008456333 ubox
23 27 0.003823722 ubox
23 76 0.003226085 ubox
23 81 0.331926823 ubox
23 89 0.245560932 ubox
23 90 0.024837591 ubox
23 91 0.007954832 ubox
24 81 0.119994042 ubox
24 83 0.205173134 ubox
24 84 0.829910872 ubox
24 86 0.005252811 ubox
24 87 0.101897357 ubox
24 88 0.246828798 ubox
24 89 0.035099754 ubox
24 90 0.007822117 ubox
24 91 0.004315430 ubox
25 76 0.006562256 ubox
25 81 0.035168128 ubox
25 83 0.829489861 ubox
25 84 0.016087478 ubox
25 86 0.102854869 ubox
25 87 0.245296360 ubox
25 88 0.035242756 ubox
25 89 0.008179931 ubox
25 90 0.005806954 ubox
25 91 0.016577265 ubox
26 31 0.004600054 ubox
26 75 0.007237226 ubox
26 76 0.013538328 ubox
26 81 0.532235214 ubox
26 89 0.006616359 ubox
26 90 0.018527447 ubox
27 77 0.168962880 ubox
27 78 0.086784379 ubox
27 79 0.127050487 ubox
27 80 0.505425492 ubox
27 82 0.415801177 ubox
27 85 0.155791050 ubox
28 75 0.105086818 ubox
28 76 0.178116085 ubox
28 81 0.414134469 ubox
28 89 0.016539648 ubox
29 74 0.106382207 ubox
29 75 0.155430804 ubox
29 76 0.266906689 ubox
29 81 0.032320975 ubox
29 83 0.012514482 ubox
29 84 0.269500675 ubox
29 86 0.003445276 ubox
29 87 0.073712539 ubox
29 88 0.014373437 ubox
30 73 0.105926034 ubox
30 74 0.106169808 ubox
30 75 0.253539922 ubox
30 76 0.280233826 ubox
30 81 0.020440885 ubox
30 83 0.269851273 ubox
30 86 0.077119354 ubox
30 87 0.011301010 ubox
31 71 0.006511175 ubox
31 72 0.096079660 ubox
31 77 0.081968709 ubox
31 78 0.130255952 ubox
31 79 0.031015083 ubox
31 80 0.022759407 ubox
31 82 0.267625791 ubox
31 85 0.077575945 ubox
32 70 0.005079224 ubox
32 73 0.082355808 ubox
32 74 0.900829978 ubox
32 75 0.383766018 ubox
32 76 0.036322558 ubox
32 81 0.072602678 ubox
32 84 0.075771106 ubox
33 69 0.003951694 ubox
33 70 0.063359130 ubox
33 73 0.904633033 ubox
33 74 0.395437465 ubox
33 75 0.027622224 ubox
33 76 0.006278369 ubox
33 83 0.074056910 ubox
34 69 0.045457951 ubox
34 70 0.004489101 ubox
34 73 0.395172278 ubox
34 74 0.028189364 ubox
34 76 0.008429280 ubox
35 75 0.008647402 ubox
35 81 0.008083732 ubox
36 69 0.003261488 ubox
36 70 0.997808320 ubox
36 74 0.007736932 ubox
37 69 0.998911175 ubox
37 70 0.003704649 ubox
37 73 0.007395998 ubox
38 65 0.010068788 ubox
38 66 0.007634423 ubox
38 68 0.999715198 ubox
38 71 0.005033596 ubox
39 65 0.007813633 ubox
39 66 0.010948769 ubox
39 67 0.996736596 ubox
39 68 0.010037642 ubox
40 65 0.022716861 ubox
40 66 0.975556397 ubox
40 67 0.052690808 ubox
40 68 0.004987681 ubox
41 63 0.004685663 ubox
41 65 0.934531726 ubox
41 66 0.070538522 ubox
41 67 0.014260155 ubox
41 68 0.004360240 ubox
42 62 0.004969743 ubox
42 64 0.231502228 ubox
43 64 0.064682207 ubox
44 60 0.005725382 ubox
44 64 0.059853325 ubox
45 59 0.006135353 ubox
45 62 0.012717210 ubox
45 64 0.955659841 ubox
46 61 0.012279492 ubox
46 63 0.997759813 ubox
47 62 0.999862334 ubox
48 56 0.006272109 ubox
48 61 0.997805273 ubox
49 55 0.006320064 ubox
49 60 0.996052072 ubox
50 54 0.006218137 ubox
50 59 0.999947964 ubox
51 58 0.999758632 ubox
52 57 0.999338736 ubox
75 79 0.004711973 ubox
75 80 0.005802011 ubox
75 82 0.007647408 ubox
75 93 0.003646688 ubox
76 80 0.003963449 ubox
76 82 0.006813860 ubox
76 85 0.015303114 ubox
76 92 0.004222995 ubox
77 81 0.006848460 ubox
77 83 0.004616140 ubox
77 84 0.018086647 ubox
77 91 0.004295893 ubox
78 90 0.004269077 ubox
79 89 0.003947109 ubox
88 95 0.003290204 ubox
2 105 0.9500000 lbox
3 104 0.9500000 lbox
4 103 0.9500000 lbox
5 102 0.9500000 lbox
6 101 0.9500000 lbox
7 100 0.9500000 lbox
8 99 0.9500000 lbox
9 98 0.9500000 lbox
10 97 0.9500000 lbox
11 96 0.9500000 lbox
12 95 0.9500000 lbox
14 93 0.9500000 lbox
15 92 0.9500000 lbox
16 91 0.9500000 lbox
17 90 0.9500000 lbox
19 88 0.9500000 lbox
21 86 0.9500000 lbox
22 85 0.9500000 lbox
24 84 0.9500000 lbox
25 83 0.9500000 lbox
26 81 0.9500000 lbox
27 80 0.9500000 lbox
32 74 0.9500000 lbox
33 73 0.9500000 lbox
36 70 0.9500000 lbox
37 69 0.9500000 lbox
38 68 0.9500000 lbox
39 67 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
49 60 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
52 57 0.9500000 lbox
showpage
end
%%EOF
