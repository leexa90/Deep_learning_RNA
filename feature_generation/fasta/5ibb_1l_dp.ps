%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:51 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5ibb_1l)
} def

/sequence { (\
GGGUGAUUAGCUCAGCUGGGAGAGCACCUCCCUUACAAGGAGGGGGUCGGCGGUUCGAUCCCGUCAUCACCCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.999145351 ubox
1 74 0.003722506 ubox
1 75 0.007395521 ubox
2 71 0.999917504 ubox
2 72 0.003820776 ubox
2 74 0.005284101 ubox
2 75 0.009392273 ubox
3 70 0.999934135 ubox
3 74 0.009417575 ubox
4 69 0.999730223 ubox
4 73 0.009419089 ubox
5 13 0.003383045 ubox
5 65 0.003351377 ubox
5 68 0.999848593 ubox
5 72 0.009343996 ubox
6 12 0.003606875 ubox
6 64 0.003691581 ubox
6 67 0.985352409 ubox
7 14 0.004457124 ubox
7 15 0.006081026 ubox
7 19 0.008319209 ubox
7 38 0.003451593 ubox
7 63 0.004207056 ubox
7 66 0.910902544 ubox
8 14 0.013022867 ubox
8 15 0.013501999 ubox
8 18 0.152026114 ubox
8 23 0.003666834 ubox
8 26 0.015838263 ubox
8 35 0.010938037 ubox
8 37 0.005416441 ubox
8 38 0.006081123 ubox
8 39 0.005791248 ubox
8 42 0.005719210 ubox
8 63 0.009962861 ubox
8 66 0.049868811 ubox
9 17 0.852824160 ubox
9 34 0.011145706 ubox
9 64 0.043333403 ubox
10 16 0.894457119 ubox
10 17 0.009245984 ubox
10 25 0.206974832 ubox
10 33 0.010432985 ubox
10 36 0.013593843 ubox
10 62 0.003709445 ubox
10 64 0.029496876 ubox
10 65 0.009117198 ubox
11 15 0.888154099 ubox
11 18 0.008830010 ubox
11 20 0.008295676 ubox
11 22 0.012492588 ubox
11 24 0.207191711 ubox
11 39 0.236228212 ubox
11 40 0.010624159 ubox
11 42 0.067802652 ubox
11 63 0.030371778 ubox
12 19 0.008369752 ubox
12 21 0.012886330 ubox
12 23 0.207142620 ubox
12 35 0.007619421 ubox
12 37 0.015791390 ubox
12 38 0.228687914 ubox
12 39 0.016037759 ubox
12 40 0.004862589 ubox
12 41 0.068332112 ubox
13 18 0.009787896 ubox
13 20 0.013063730 ubox
13 22 0.207098257 ubox
13 39 0.032005802 ubox
13 40 0.068305945 ubox
13 42 0.005583690 ubox
13 63 0.003692586 ubox
14 33 0.007695931 ubox
14 34 0.024851215 ubox
15 25 0.033537062 ubox
15 32 0.004291632 ubox
15 33 0.021787538 ubox
15 34 0.030813475 ubox
15 36 0.067392203 ubox
15 64 0.003862747 ubox
15 65 0.004939716 ubox
16 20 0.012109801 ubox
16 24 0.033572023 ubox
16 39 0.050759483 ubox
16 40 0.003382217 ubox
16 63 0.004095420 ubox
17 23 0.033406863 ubox
17 35 0.018121788 ubox
17 37 0.010990906 ubox
17 38 0.050655477 ubox
17 39 0.005418731 ubox
17 63 0.006270733 ubox
18 28 0.004476074 ubox
18 29 0.004558241 ubox
18 31 0.004738944 ubox
18 32 0.962527874 ubox
18 33 0.038931536 ubox
18 34 0.009590488 ubox
18 36 0.007873188 ubox
18 62 0.010446101 ubox
19 25 0.003878196 ubox
19 27 0.004946020 ubox
19 28 0.006643318 ubox
19 30 0.004183016 ubox
19 31 0.975670858 ubox
19 32 0.053752573 ubox
19 33 0.011959560 ubox
19 61 0.010481604 ubox
20 27 0.006717112 ubox
20 30 0.975804027 ubox
20 31 0.053039845 ubox
20 32 0.012382216 ubox
20 60 0.010478657 ubox
21 29 0.975592811 ubox
21 33 0.003383347 ubox
21 59 0.010027036 ubox
22 27 0.035171305 ubox
22 28 0.973149186 ubox
22 30 0.053939107 ubox
22 32 0.003296829 ubox
22 48 0.010694257 ubox
22 56 0.009915446 ubox
23 29 0.054006699 ubox
23 47 0.010636921 ubox
23 55 0.009951179 ubox
24 28 0.053041836 ubox
24 48 0.007127985 ubox
24 54 0.009864823 ubox
25 45 0.010129495 ubox
25 53 0.009803017 ubox
26 47 0.092712854 ubox
26 64 0.004673418 ubox
27 40 0.014134661 ubox
27 42 0.007029506 ubox
27 43 0.105951612 ubox
27 44 0.004329289 ubox
27 45 0.017919609 ubox
27 46 0.098805503 ubox
27 50 0.006655911 ubox
27 63 0.004990236 ubox
28 39 0.022315686 ubox
28 42 0.169703124 ubox
28 43 0.004524354 ubox
28 44 0.018016643 ubox
28 45 0.098548249 ubox
28 46 0.054799228 ubox
28 49 0.006318244 ubox
29 38 0.022104348 ubox
29 41 0.170138900 ubox
29 42 0.004857172 ubox
29 43 0.018046600 ubox
29 44 0.046579797 ubox
29 45 0.055834816 ubox
29 46 0.005831271 ubox
30 39 0.006164903 ubox
30 40 0.167329353 ubox
30 42 0.020421457 ubox
30 43 0.045953743 ubox
30 44 0.103379768 ubox
30 45 0.007443637 ubox
31 39 0.164239918 ubox
31 40 0.043368622 ubox
31 42 0.045046093 ubox
31 43 0.103703679 ubox
31 44 0.007470712 ubox
32 39 0.092248945 ubox
32 40 0.043625405 ubox
32 42 0.104937101 ubox
32 43 0.007483598 ubox
33 37 0.037871209 ubox
33 38 0.097150154 ubox
33 39 0.067144258 ubox
33 40 0.009836736 ubox
33 41 0.105289461 ubox
33 42 0.009353718 ubox
34 38 0.056947590 ubox
34 39 0.047380417 ubox
34 40 0.103269383 ubox
34 41 0.009407890 ubox
34 42 0.003235548 ubox
34 66 0.004060783 ubox
36 40 0.005585566 ubox
36 42 0.013438203 ubox
37 67 0.011646648 ubox
38 67 0.022473685 ubox
39 65 0.060567723 ubox
39 67 0.014853023 ubox
40 64 0.037767073 ubox
40 65 0.970494699 ubox
41 64 0.970951655 ubox
42 62 0.019708244 ubox
42 64 0.005346363 ubox
42 65 0.005787775 ubox
43 61 0.017137586 ubox
43 62 0.987260525 ubox
44 60 0.014085533 ubox
44 61 0.991434818 ubox
44 62 0.055892003 ubox
45 59 0.009991117 ubox
45 60 0.991500466 ubox
45 61 0.055571288 ubox
46 59 0.990941083 ubox
46 60 0.055177338 ubox
46 65 0.005301392 ubox
47 58 0.992981450 ubox
48 57 0.993155810 ubox
48 63 0.010875873 ubox
49 54 0.004239075 ubox
49 55 0.006516853 ubox
49 56 0.988757957 ubox
49 62 0.011169751 ubox
49 65 0.114710932 ubox
50 54 0.021835135 ubox
50 55 0.699083773 ubox
50 56 0.011234293 ubox
50 61 0.011139460 ubox
50 64 0.115286904 ubox
51 63 0.115410339 ubox
52 56 0.003232309 ubox
52 60 0.010825992 ubox
52 61 0.013955955 ubox
52 62 0.114577128 ubox
53 59 0.010481536 ubox
53 60 0.019610443 ubox
53 61 0.113430225 ubox
54 58 0.010458167 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
9 17 0.9500000 lbox
10 16 0.9500000 lbox
11 15 0.9500000 lbox
18 32 0.9500000 lbox
19 31 0.9500000 lbox
20 30 0.9500000 lbox
21 29 0.9500000 lbox
22 28 0.9500000 lbox
40 65 0.9500000 lbox
41 64 0.9500000 lbox
43 62 0.9500000 lbox
44 61 0.9500000 lbox
45 60 0.9500000 lbox
46 59 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
