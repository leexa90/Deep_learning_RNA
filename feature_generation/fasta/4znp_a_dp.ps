%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:43 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4znp_a)
} def

/sequence { (\
GGGAUACAGGACUGGCGGAUUAGUGGGAAACCACGUGGACUGUAUCCGAAAAAAAGCCGACCGCCUGGGCAUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 47 0.076585779 ubox
1 58 0.003282669 ubox
1 70 0.009205517 ubox
1 72 0.003970399 ubox
1 73 0.019494961 ubox
2 46 0.058498456 ubox
2 47 0.995517399 ubox
2 70 0.008464613 ubox
2 72 0.011680363 ubox
2 73 0.003943692 ubox
3 45 0.030644355 ubox
3 46 0.997630979 ubox
3 70 0.008205914 ubox
3 72 0.003755276 ubox
3 73 0.012200458 ubox
4 45 0.998621348 ubox
4 72 0.012335913 ubox
5 44 0.998857024 ubox
5 69 0.004609771 ubox
5 71 0.011294953 ubox
6 43 0.999095001 ubox
7 42 0.999336738 ubox
7 67 0.034167086 ubox
8 41 0.999078207 ubox
8 66 0.034277324 ubox
9 16 0.004095295 ubox
9 40 0.999130557 ubox
9 41 0.006900115 ubox
9 47 0.004727936 ubox
9 65 0.034290079 ubox
9 70 0.005809883 ubox
10 16 0.016703989 ubox
10 21 0.013933953 ubox
10 40 0.013905416 ubox
10 46 0.004733022 ubox
10 64 0.034236911 ubox
11 20 0.014207123 ubox
11 24 0.017924791 ubox
11 36 0.029510084 ubox
11 45 0.004619688 ubox
12 17 0.019754440 ubox
12 18 0.022497044 ubox
12 23 0.019655168 ubox
12 27 0.024536803 ubox
12 35 0.030927939 ubox
12 37 0.964220966 ubox
12 38 0.150156067 ubox
12 63 0.022411736 ubox
12 67 0.006080770 ubox
12 68 0.003957428 ubox
13 17 0.023193819 ubox
13 18 0.035324421 ubox
13 19 0.037877265 ubox
13 22 0.081316379 ubox
13 26 0.025982232 ubox
13 33 0.029722159 ubox
13 35 0.110090665 ubox
13 37 0.132180188 ubox
13 38 0.116948966 ubox
13 39 0.007038658 ubox
13 59 0.006249055 ubox
13 63 0.020275292 ubox
13 67 0.003721608 ubox
14 20 0.020239016 ubox
14 21 0.083958863 ubox
14 32 0.030173944 ubox
14 34 0.083971319 ubox
14 36 0.087581579 ubox
14 58 0.006817032 ubox
14 62 0.033228780 ubox
14 65 0.008319547 ubox
15 20 0.058350286 ubox
15 21 0.017207877 ubox
15 24 0.044932040 ubox
15 31 0.030037934 ubox
15 32 0.013345432 ubox
15 34 0.217107147 ubox
15 36 0.468030393 ubox
15 43 0.005106369 ubox
15 57 0.006819054 ubox
15 61 0.033246246 ubox
15 64 0.008352444 ubox
16 23 0.049554900 ubox
16 25 0.010573503 ubox
16 26 0.007564540 ubox
16 27 0.006824095 ubox
16 35 0.490641603 ubox
16 37 0.023867550 ubox
16 38 0.009255776 ubox
16 42 0.005384829 ubox
16 56 0.006683023 ubox
16 59 0.033551942 ubox
16 63 0.008366760 ubox
17 21 0.012079360 ubox
17 24 0.010075940 ubox
17 31 0.020736789 ubox
17 32 0.225028261 ubox
17 34 0.312070038 ubox
17 36 0.022137391 ubox
17 40 0.007430034 ubox
17 41 0.005850478 ubox
17 47 0.003951825 ubox
17 58 0.033574525 ubox
17 62 0.008365421 ubox
18 24 0.006150492 ubox
18 31 0.224776952 ubox
18 32 0.034843277 ubox
18 34 0.024817757 ubox
18 36 0.016903834 ubox
18 40 0.006274171 ubox
18 46 0.003953838 ubox
18 57 0.033468984 ubox
18 61 0.008313480 ubox
19 24 0.004560649 ubox
19 36 0.102748484 ubox
19 45 0.003947381 ubox
20 25 0.007595268 ubox
20 26 0.009902955 ubox
20 27 0.028498159 ubox
20 28 0.048027033 ubox
20 29 0.166671987 ubox
20 30 0.075031573 ubox
20 33 0.008265128 ubox
20 35 0.096003349 ubox
20 37 0.035597381 ubox
20 38 0.017705310 ubox
20 39 0.010502659 ubox
20 44 0.003764888 ubox
20 55 0.012257682 ubox
20 56 0.009137401 ubox
21 25 0.007894058 ubox
21 26 0.026489136 ubox
21 27 0.049373678 ubox
21 28 0.162188516 ubox
21 29 0.073130682 ubox
21 30 0.016900524 ubox
21 33 0.011948707 ubox
21 35 0.029079959 ubox
21 37 0.029361334 ubox
21 38 0.009696012 ubox
21 54 0.014512945 ubox
21 55 0.008312639 ubox
22 36 0.083349573 ubox
23 31 0.050861385 ubox
23 32 0.004510139 ubox
23 34 0.917081981 ubox
24 28 0.006336415 ubox
24 29 0.013492354 ubox
24 30 0.051538504 ubox
24 33 0.966866631 ubox
25 31 0.008238816 ubox
25 32 0.968810756 ubox
25 34 0.004971723 ubox
26 31 0.968196034 ubox
26 32 0.012354315 ubox
27 31 0.013999594 ubox
31 38 0.023606080 ubox
32 37 0.023683615 ubox
36 48 0.026090456 ubox
36 59 0.003469365 ubox
37 47 0.034493761 ubox
37 58 0.004757148 ubox
38 46 0.034508122 ubox
38 57 0.004759282 ubox
39 45 0.032587567 ubox
40 56 0.004716397 ubox
41 55 0.004678464 ubox
48 57 0.008696964 ubox
48 58 0.007030377 ubox
48 70 0.004286696 ubox
48 73 0.025684515 ubox
49 72 0.024928036 ubox
50 72 0.005925753 ubox
51 72 0.009135259 ubox
52 72 0.030150787 ubox
53 72 0.030734957 ubox
54 66 0.006099036 ubox
54 72 0.128586510 ubox
55 66 0.009709341 ubox
55 72 0.085839158 ubox
56 64 0.021957113 ubox
56 65 0.008963349 ubox
56 70 0.989267091 ubox
56 72 0.003705292 ubox
56 73 0.009138766 ubox
57 63 0.022344621 ubox
57 68 0.097535641 ubox
57 69 0.988448600 ubox
58 63 0.006605906 ubox
58 67 0.114787354 ubox
58 68 0.985180329 ubox
58 69 0.004777620 ubox
59 64 0.042471031 ubox
59 65 0.065811693 ubox
59 66 0.106492347 ubox
59 70 0.064607212 ubox
59 73 0.017927083 ubox
60 66 0.663819684 ubox
60 72 0.017377690 ubox
61 67 0.036015239 ubox
61 68 0.073424782 ubox
61 69 0.083642007 ubox
62 67 0.088620020 ubox
62 68 0.083934625 ubox
62 69 0.004143816 ubox
63 70 0.031285904 ubox
64 69 0.031200026 ubox
2 47 0.9500000 lbox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
5 44 0.9500000 lbox
6 43 0.9500000 lbox
7 42 0.9500000 lbox
8 41 0.9500000 lbox
9 40 0.9500000 lbox
12 37 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
56 70 0.9500000 lbox
57 69 0.9500000 lbox
58 68 0.9500000 lbox
showpage
end
%%EOF
