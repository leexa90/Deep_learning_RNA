%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:37 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGACUCGGGGUGCCCUCCAUUGCACUCCGGAGGCUGAGAAAUACCCGUAUCACCUGAUCUGGAUAAUGCCAGCGUAGGGAAGUCGC\
) def
/coor [
[69.34619904 185.45954895]
[68.80466461 170.46931458]
[68.26312256 155.47909546]
[67.72158813 140.48887634]
[67.18005371 125.49865723]
[54.91872025 116.85807037]
[40.61976624 121.39018250]
[26.32081604 125.92228699]
[12.02186394 130.45439148]
[-2.27708721 134.98649597]
[-16.57603836 139.51860046]
[-30.87499046 144.05070496]
[-45.17394257 148.58282471]
[-49.94747925 163.34739685]
[-62.50756073 172.45915222]
[-78.02456665 172.41442871]
[-90.53190613 163.23040771]
[-95.22023773 148.43855286]
[-90.28681946 133.72660828]
[-77.62863159 124.75164795]
[-62.11301804 124.96470642]
[-49.70604706 134.28385925]
[-35.40709686 129.75175476]
[-21.10814476 125.21965027]
[-6.80919361 120.68754578]
[7.48975801 116.15544128]
[21.78870964 111.62333679]
[36.08766174 107.09123230]
[50.38661194 102.55912018]
[57.88661194 89.56874084]
[54.66205597 74.91943359]
[44.13901901 63.10519028]
[48.95943832 49.01218414]
[45.73488235 34.36287689]
[35.21184540 22.54863548]
[40.03226471 8.45563030]
[25.75815392 2.37045646]
[17.81583405 -10.95992851]
[19.25928879 -26.40971947]
[29.53348351 -38.03815842]
[44.68777847 -41.37387085]
[58.89503860 -35.13420868]
[66.69228363 -21.71844864]
[65.08130646 -6.28522491]
[54.68157578 5.23107338]
[64.97396851 15.99749851]
[60.38418961 31.13832092]
[63.60874939 45.78762817]
[73.90113831 56.55405426]
[69.31136322 71.69487762]
[72.53591919 86.34418488]
[102.05532074 73.07183838]
[122.23524475 92.90028381]
[137.23280334 93.17109680]
[152.23034668 93.44190216]
[167.22790527 93.71271515]
[178.55590820 83.02094269]
[193.76170349 83.50922394]
[203.88487244 94.37463379]
[218.88243103 94.64544678]
[233.87998962 94.91625977]
[248.87753296 95.18707275]
[260.07736206 84.03632355]
[275.88122559 84.15457153]
[286.91293335 95.47167206]
[286.62759399 111.27338409]
[275.19448853 122.18483734]
[259.39669800 121.73245239]
[248.60671997 110.18463135]
[233.60917664 109.91381836]
[218.61161804 109.64300537]
[203.61405945 109.37219238]
[193.10522461 119.86504364]
[177.89170837 119.80404663]
[166.95709229 108.71027374]
[151.95953369 108.43946075]
[136.96199036 108.16864777]
[121.96443176 107.89783478]
[114.77758026 121.12995911]
[99.85837555 128.22789001]
[82.17027283 124.95712280]
[82.71181488 139.94734192]
[83.25334930 154.93756104]
[83.79488373 169.92778015]
[84.33641815 184.91799927]
[87.22107697 204.08383179]
] def
/pairs [
[1 85]
[2 84]
[3 83]
[4 82]
[5 81]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[30 51]
[31 50]
[33 48]
[34 47]
[36 45]
[53 78]
[54 77]
[55 76]
[56 75]
[59 72]
[60 71]
[61 70]
[62 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
