%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GACUUACCUGGCAGUGAGGUGCACACACUGCAUAAUUUGUGGUAGUG\
) def
/coor [
[82.04508972 220.85044861]
[88.09143066 205.01132202]
[88.09143066 190.01132202]
[88.09143066 175.01132202]
[84.75625610 167.94314575]
[88.61433411 159.03829956]
[89.59538269 144.07041931]
[90.57642365 129.10253906]
[73.58026886 115.41942596]
[70.02594757 93.89122009]
[81.72183228 75.47104645]
[75.98158264 61.61285019]
[70.24132538 47.75465775]
[64.50107574 33.89646530]
[58.76082611 20.03827095]
[53.02057266 6.18007803]
[40.59114456 -3.60868192]
[42.86896133 -18.32808495]
[28.65701294 -25.77120590]
[25.75687027 -41.54994965]
[36.39327621 -53.56021118]
[52.40689087 -52.58874893]
[61.51343918 -39.38078308]
[56.72715378 -24.06833649]
[68.74600220 -15.27080631]
[66.87876892 0.43982673]
[72.61901855 14.29801941]
[78.35926819 28.15621185]
[84.09952545 42.01440430]
[89.83977509 55.87260056]
[95.58002472 69.73078918]
[105.03768158 69.82744598]
[114.01374817 72.80853271]
[121.65013123 78.38905334]
[127.21681213 86.03553772]
[130.18162537 95.01699066]
[130.26115417 104.47480774]
[127.44777679 113.50484467]
[122.01045227 121.24385071]
[114.46897888 126.95198822]
[105.54431152 130.08357239]
[104.56326294 145.05146790]
[103.58221436 160.01934814]
[103.09143066 175.01132202]
[103.09143066 190.01132202]
[103.09143066 205.01132202]
[109.13777161 220.85044861]
] def
/pairs [
[2 46]
[3 45]
[4 44]
[6 43]
[7 42]
[8 41]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[18 24]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
