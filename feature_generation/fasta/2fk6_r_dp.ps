%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:27 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2fk6_r)
} def

/sequence { (\
CUUCCAUAGCUCAGCAGGUAGAGCACUUCCAUGGUAAGGAAGAGGUCAGCGGUUCGAGCCCGCUUGGAAGCU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 42 0.008931799 ubox
1 70 0.975959989 ubox
2 41 0.008991255 ubox
2 68 0.004958914 ubox
2 69 0.994231244 ubox
2 70 0.007730776 ubox
3 40 0.009018366 ubox
3 68 0.998749308 ubox
3 69 0.006972967 ubox
4 39 0.009024589 ubox
4 45 0.004829143 ubox
4 67 0.999565567 ubox
5 38 0.009012388 ubox
5 44 0.004888851 ubox
5 66 0.999370347 ubox
6 19 0.008505639 ubox
6 46 0.003399864 ubox
6 64 0.039839560 ubox
6 65 0.950792492 ubox
7 16 0.007488727 ubox
7 17 0.004211281 ubox
7 18 0.009962649 ubox
7 20 0.089652521 ubox
7 25 0.049333782 ubox
7 36 0.004355171 ubox
7 45 0.004124301 ubox
7 62 0.083466360 ubox
8 19 0.094298803 ubox
8 35 0.004102822 ubox
8 64 0.117821777 ubox
8 65 0.010611836 ubox
8 72 0.006990312 ubox
9 15 0.076485386 ubox
9 19 0.089737773 ubox
9 24 0.614748469 ubox
9 59 0.759470865 ubox
9 60 0.063055324 ubox
9 61 0.027708201 ubox
9 63 0.097216297 ubox
9 71 0.007886259 ubox
10 14 0.076008364 ubox
10 17 0.097003337 ubox
10 18 0.092034474 ubox
10 21 0.004040962 ubox
10 23 0.615727206 ubox
10 34 0.003183767 ubox
10 58 0.764414668 ubox
10 62 0.089645623 ubox
10 70 0.007886599 ubox
11 16 0.088798135 ubox
11 17 0.083384632 ubox
11 18 0.019919456 ubox
11 20 0.004961120 ubox
11 22 0.615666120 ubox
11 56 0.007622225 ubox
11 57 0.767628442 ubox
11 58 0.003766156 ubox
11 68 0.003493167 ubox
11 69 0.006502001 ubox
12 17 0.041035897 ubox
12 18 0.008275795 ubox
12 21 0.615563925 ubox
12 56 0.767368511 ubox
12 58 0.009671005 ubox
12 66 0.003802142 ubox
12 67 0.004840731 ubox
13 19 0.094154469 ubox
13 53 0.021215889 ubox
13 54 0.736477419 ubox
13 64 0.029947760 ubox
14 19 0.030705723 ubox
14 24 0.013768250 ubox
14 50 0.010505954 ubox
14 53 0.752559823 ubox
14 54 0.048076771 ubox
14 55 0.039839955 ubox
14 59 0.016998158 ubox
14 61 0.003246020 ubox
14 63 0.030317476 ubox
15 21 0.004132843 ubox
15 23 0.013780662 ubox
15 49 0.010509658 ubox
15 51 0.028230122 ubox
15 52 0.752825422 ubox
15 56 0.003193215 ubox
15 58 0.017034191 ubox
15 62 0.030298365 ubox
15 66 0.004067269 ubox
16 28 0.003259544 ubox
16 53 0.014126147 ubox
16 54 0.014475336 ubox
16 65 0.004008553 ubox
17 24 0.003808469 ubox
17 27 0.003538494 ubox
17 50 0.512477981 ubox
17 53 0.013811487 ubox
17 55 0.010373662 ubox
17 60 0.030047854 ubox
17 61 0.005839380 ubox
17 64 0.003504903 ubox
18 24 0.003532445 ubox
18 26 0.003580309 ubox
18 47 0.004758365 ubox
18 50 0.537912552 ubox
18 54 0.007598381 ubox
18 55 0.008890177 ubox
18 59 0.030059026 ubox
18 60 0.005466556 ubox
18 63 0.003297776 ubox
19 23 0.003313276 ubox
19 25 0.003480304 ubox
19 48 0.506346773 ubox
19 49 0.513866895 ubox
19 51 0.012065248 ubox
19 58 0.029503076 ubox
20 53 0.003840572 ubox
21 46 0.007600377 ubox
21 47 0.779194914 ubox
21 50 0.003436898 ubox
21 55 0.028658896 ubox
22 46 0.781496543 ubox
22 54 0.028637962 ubox
23 46 0.063249100 ubox
23 47 0.010268194 ubox
23 50 0.006746323 ubox
23 53 0.028086209 ubox
24 44 0.771432725 ubox
24 45 0.087257457 ubox
24 49 0.006716069 ubox
24 52 0.027908907 ubox
25 35 0.010826642 ubox
25 46 0.053697723 ubox
26 33 0.003311431 ubox
26 34 0.011403931 ubox
26 38 0.004914182 ubox
26 42 0.992246761 ubox
26 44 0.028518659 ubox
26 45 0.055405506 ubox
26 49 0.007416857 ubox
26 51 0.003455724 ubox
26 70 0.007541938 ubox
27 33 0.011273097 ubox
27 37 0.004914289 ubox
27 40 0.004267291 ubox
27 41 0.996707383 ubox
27 42 0.004540390 ubox
27 43 0.025121358 ubox
27 44 0.052921445 ubox
27 48 0.007007302 ubox
27 69 0.007585884 ubox
28 36 0.004627852 ubox
28 39 0.004503039 ubox
28 40 0.998262953 ubox
28 41 0.004637669 ubox
28 42 0.013153294 ubox
28 43 0.044937509 ubox
28 68 0.007598830 ubox
29 34 0.003183058 ubox
29 38 0.005511982 ubox
29 39 0.998815610 ubox
29 42 0.043668446 ubox
29 45 0.007344530 ubox
29 67 0.007602606 ubox
30 38 0.998166519 ubox
30 39 0.014495846 ubox
30 42 0.003501211 ubox
30 44 0.007356055 ubox
30 66 0.007601739 ubox
31 35 0.020759807 ubox
31 65 0.007264373 ubox
32 36 0.113685520 ubox
32 37 0.326934790 ubox
32 38 0.012349503 ubox
32 39 0.012619419 ubox
32 40 0.007978115 ubox
32 41 0.009948570 ubox
33 64 0.003755649 ubox
34 63 0.004018034 ubox
35 62 0.003945066 ubox
38 47 0.004100839 ubox
38 60 0.003163639 ubox
39 46 0.003338073 ubox
39 47 0.005802932 ubox
39 59 0.003165850 ubox
40 46 0.005564494 ubox
42 47 0.019316878 ubox
42 55 0.003883842 ubox
43 54 0.003905108 ubox
43 64 0.006181457 ubox
43 65 0.032584425 ubox
43 72 0.005437618 ubox
44 50 0.013135645 ubox
44 53 0.003859855 ubox
44 59 0.006723161 ubox
44 60 0.014359180 ubox
44 61 0.010483890 ubox
44 63 0.005549114 ubox
44 64 0.042709599 ubox
44 65 0.008266881 ubox
44 71 0.005936841 ubox
44 72 0.004182754 ubox
45 50 0.006748792 ubox
45 59 0.014412698 ubox
45 60 0.010436338 ubox
45 63 0.043548676 ubox
45 64 0.006474644 ubox
45 65 0.014158041 ubox
45 71 0.004650262 ubox
46 57 0.011284746 ubox
46 58 0.011342858 ubox
46 62 0.042036010 ubox
46 66 0.003315038 ubox
46 67 0.009337352 ubox
46 68 0.005103273 ubox
46 69 0.003337735 ubox
46 70 0.004174182 ubox
47 56 0.012502524 ubox
47 58 0.003280695 ubox
47 62 0.009026093 ubox
47 66 0.017853098 ubox
47 67 0.005705867 ubox
48 64 0.593633691 ubox
48 65 0.018930791 ubox
48 72 0.006879125 ubox
49 55 0.006019644 ubox
49 59 0.041989806 ubox
49 61 0.027242862 ubox
49 63 0.635386143 ubox
49 64 0.003788078 ubox
49 71 0.007638413 ubox
50 56 0.011243168 ubox
50 58 0.042031969 ubox
50 62 0.635577085 ubox
50 70 0.007640485 ubox
51 55 0.010783795 ubox
51 60 0.159508021 ubox
51 61 0.617458791 ubox
52 59 0.219579978 ubox
52 60 0.597229999 ubox
53 57 0.019670459 ubox
53 58 0.253487741 ubox
53 68 0.007354414 ubox
54 58 0.104012377 ubox
54 67 0.007632287 ubox
55 66 0.007722001 ubox
56 61 0.003505103 ubox
56 65 0.007795635 ubox
57 64 0.007841943 ubox
58 63 0.007786359 ubox
60 67 0.008446375 ubox
61 66 0.008483626 ubox
62 71 0.017386984 ubox
63 70 0.017403652 ubox
64 69 0.016092233 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
9 59 0.9500000 lbox
10 58 0.9500000 lbox
11 57 0.9500000 lbox
12 56 0.9500000 lbox
13 54 0.9500000 lbox
14 53 0.9500000 lbox
15 52 0.9500000 lbox
17 50 0.9500000 lbox
19 48 0.9500000 lbox
21 47 0.9500000 lbox
22 46 0.9500000 lbox
24 44 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
showpage
end
%%EOF
