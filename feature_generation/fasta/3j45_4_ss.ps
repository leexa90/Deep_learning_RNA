%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGGUGCCGGAAGGUUAAUUGAUGGGGUUAGCGCAAGCGAAGCUCUUGAUCGAAGCCCCGGU\
) def
/coor [
[77.33333588 253.18507385]
[61.79142761 257.16360474]
[49.07803345 247.37846375]
[48.94577789 231.33595276]
[61.49611664 221.34252930]
[64.51559448 206.64958191]
[67.53507233 191.95663452]
[70.55455017 177.26368713]
[73.57402802 162.57072449]
[71.50144196 157.86610413]
[72.66036224 151.78785706]
[77.71467590 146.57859802]
[82.20512390 132.26651001]
[86.69557190 117.95442963]
[91.18601227 103.64234161]
[89.72577667 98.15515900]
[91.68096924 92.29331970]
[96.92331696 88.15116882]
[102.83865356 74.36679840]
[108.75399017 60.58243179]
[114.66932678 46.79806519]
[120.58467102 33.01369476]
[125.79424286 18.94741440]
[130.28469849 4.63532543]
[134.77514648 -9.67676353]
[139.26557922 -23.98885155]
[143.75602722 -38.30094147]
[148.24647522 -52.61302948]
[143.70372009 -70.26768494]
[156.66032410 -81.84996796]
[160.42012024 -96.37113190]
[155.52302551 -112.02202606]
[166.82612610 -123.90360260]
[182.70176697 -119.79311371]
[186.81843567 -103.91907501]
[174.94126892 -92.61134338]
[171.18148804 -78.09018707]
[177.10229492 -67.26326752]
[173.79837036 -54.95270920]
[162.55856323 -48.12258148]
[158.06811523 -33.81049347]
[153.57768250 -19.49840546]
[149.08723450 -5.18631649]
[144.59678650 9.12577248]
[140.10633850 23.43786049]
[141.69232178 28.32803535]
[139.92442322 34.25785065]
[134.36903381 38.92903519]
[128.45368958 52.71340179]
[122.53836060 66.49777222]
[116.62302399 80.28213501]
[110.70767975 94.06650543]
[105.49810791 108.13278198]
[101.00765991 122.44487762]
[96.51721191 136.75695801]
[92.02676392 151.06904602]
[88.26697540 165.59020996]
[85.24749756 180.28315735]
[82.22801971 194.97610474]
[79.20854187 209.66905212]
[76.18906403 224.36199951]
] def
/pairs [
[5 61]
[6 60]
[7 59]
[8 58]
[9 57]
[12 56]
[13 55]
[14 54]
[15 53]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[30 37]
[31 36]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
