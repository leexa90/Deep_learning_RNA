%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5kpy_a)
} def

/sequence { (\
GGACACUGAUGAUCGCGUGGAUAUGGCACGCAUUGAAUUGUUGGACACCGUAAAUGUCCUAACACGUGUCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 70 0.007020011 ubox
1 71 0.988095111 ubox
2 42 0.005370451 ubox
2 69 0.003737459 ubox
2 70 0.999849934 ubox
2 71 0.003168386 ubox
3 41 0.005644129 ubox
3 69 0.999815954 ubox
4 19 0.003894539 ubox
4 40 0.005680413 ubox
4 68 0.999934045 ubox
5 18 0.003903513 ubox
5 39 0.005515684 ubox
5 67 0.999110840 ubox
6 11 0.014333064 ubox
6 17 0.003900711 ubox
6 66 0.996151133 ubox
7 11 0.018254086 ubox
7 12 0.064420200 ubox
7 15 0.016541194 ubox
7 32 0.004846162 ubox
7 35 0.070724970 ubox
7 36 0.044733565 ubox
7 37 0.064026530 ubox
7 40 0.025318658 ubox
7 61 0.004259654 ubox
7 62 0.003277541 ubox
7 64 0.135430623 ubox
7 66 0.053100704 ubox
8 13 0.012451584 ubox
8 14 0.311853718 ubox
8 34 0.101408681 ubox
8 38 0.037897057 ubox
8 39 0.136862550 ubox
8 42 0.052131034 ubox
8 60 0.003964310 ubox
8 63 0.127300726 ubox
8 65 0.229982907 ubox
9 13 0.271676661 ubox
9 33 0.104290313 ubox
9 34 0.031683403 ubox
9 38 0.165522488 ubox
9 39 0.015201705 ubox
9 41 0.057918368 ubox
9 60 0.004330345 ubox
9 67 0.005969412 ubox
10 32 0.103221151 ubox
10 35 0.247526298 ubox
10 36 0.179429761 ubox
10 37 0.157686089 ubox
10 40 0.058147720 ubox
10 61 0.049090636 ubox
10 62 0.019914316 ubox
10 64 0.050111824 ubox
10 66 0.009206120 ubox
11 16 0.003367855 ubox
11 31 0.053163123 ubox
11 33 0.021055437 ubox
11 34 0.536937700 ubox
11 38 0.023608723 ubox
11 39 0.066464451 ubox
11 42 0.003380020 ubox
11 60 0.045844678 ubox
11 63 0.046238089 ubox
11 65 0.030831151 ubox
12 22 0.006553191 ubox
12 33 0.559033361 ubox
12 34 0.211818164 ubox
12 38 0.069848213 ubox
12 39 0.005063171 ubox
12 41 0.003563366 ubox
12 60 0.007379961 ubox
13 21 0.006951944 ubox
13 32 0.557187023 ubox
13 35 0.019258405 ubox
13 36 0.148783588 ubox
13 37 0.053310682 ubox
13 61 0.006355774 ubox
13 62 0.005677831 ubox
14 20 0.006987228 ubox
14 30 0.017414719 ubox
14 35 0.163778070 ubox
15 27 0.020386445 ubox
15 29 0.017708677 ubox
15 31 0.997275426 ubox
15 34 0.021897838 ubox
16 25 0.005854500 ubox
16 26 0.020143552 ubox
16 30 0.999475133 ubox
17 24 0.006467845 ubox
17 27 0.017834399 ubox
17 29 0.999500567 ubox
17 31 0.007870043 ubox
18 23 0.006335183 ubox
18 25 0.003341131 ubox
18 26 0.017793943 ubox
18 28 0.999256871 ubox
18 30 0.007878737 ubox
19 24 0.004855610 ubox
19 27 0.998413019 ubox
19 29 0.007887162 ubox
20 24 0.016728374 ubox
20 27 0.037503307 ubox
22 26 0.012996980 ubox
23 33 0.004748355 ubox
24 32 0.005198298 ubox
25 31 0.005356383 ubox
25 70 0.004030778 ubox
26 69 0.004101395 ubox
27 68 0.004203964 ubox
28 67 0.004204531 ubox
29 66 0.004205774 ubox
30 41 0.005084584 ubox
30 65 0.004207708 ubox
31 40 0.008074241 ubox
32 38 0.038925192 ubox
32 39 0.033397904 ubox
32 41 0.023674369 ubox
32 42 0.005532666 ubox
33 37 0.037314231 ubox
33 40 0.024688342 ubox
33 62 0.003771233 ubox
34 40 0.004736749 ubox
34 61 0.004512502 ubox
34 64 0.010054280 ubox
34 66 0.006678985 ubox
35 39 0.010108649 ubox
35 41 0.003974118 ubox
35 42 0.017349215 ubox
35 60 0.004548088 ubox
35 63 0.011181361 ubox
35 65 0.112413544 ubox
36 41 0.016479045 ubox
36 42 0.013030426 ubox
36 67 0.005249283 ubox
37 41 0.010472775 ubox
37 42 0.015286955 ubox
37 55 0.003181555 ubox
37 67 0.009473651 ubox
38 54 0.003295793 ubox
38 62 0.026103633 ubox
38 64 0.037075273 ubox
38 66 0.010092164 ubox
39 53 0.003253140 ubox
39 61 0.030286359 ubox
39 62 0.015112536 ubox
39 64 0.860299255 ubox
40 60 0.026942963 ubox
40 63 0.980857650 ubox
40 65 0.026471313 ubox
41 61 0.042400412 ubox
41 62 0.979624290 ubox
41 64 0.023840493 ubox
42 50 0.003981391 ubox
42 61 0.935476504 ubox
42 62 0.009197980 ubox
43 49 0.004755695 ubox
43 59 0.979018335 ubox
43 60 0.201796109 ubox
43 71 0.006251376 ubox
44 48 0.004681060 ubox
44 58 0.989534571 ubox
44 59 0.143893128 ubox
44 70 0.006337208 ubox
45 57 0.999470720 ubox
45 69 0.006337882 ubox
46 56 0.999442660 ubox
46 68 0.006338684 ubox
47 51 0.006054282 ubox
47 55 0.924783547 ubox
47 57 0.012167116 ubox
47 67 0.006324340 ubox
48 56 0.012787627 ubox
48 66 0.005068043 ubox
49 56 0.011469784 ubox
49 66 0.003801542 ubox
50 55 0.013851044 ubox
50 65 0.005370678 ubox
51 64 0.004874862 ubox
56 63 0.003855015 ubox
57 62 0.003568303 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
39 64 0.9500000 lbox
40 63 0.9500000 lbox
41 62 0.9500000 lbox
42 61 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
showpage
end
%%EOF
