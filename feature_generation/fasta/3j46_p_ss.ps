%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGGGAAUAGCUCAGUUGGUAGAGCACGACCUUGCCAAGGUCGGGGUCGCGAGUUCGAGUCUCGUUUCCCGCUCCA\
) def
/coor [
[111.27201843 214.61521912]
[108.83487701 199.81454468]
[106.39773560 185.01385498]
[103.96058655 170.21316528]
[101.52344513 155.41247559]
[99.08630371 140.61178589]
[96.64916229 125.81110382]
[88.33714294 123.26840973]
[81.32588196 118.13059235]
[76.39734650 110.97067261]
[61.55002213 113.10540009]
[46.70270157 115.24011993]
[31.85537910 117.37483978]
[24.73344231 131.16098022]
[10.85330105 138.09793091]
[-4.44784641 135.51829529]
[-15.28639698 124.41400146]
[-17.49470711 109.05487061]
[-10.22363663 95.34680176]
[3.73094034 88.56082916]
[19.00320435 91.30629730]
[29.72065544 102.52751923]
[44.56797791 100.39279938]
[59.41529846 98.25807190]
[74.26261902 96.12335205]
[82.54031372 76.97301483]
[103.92298889 68.47525787]
[103.31116486 53.48773575]
[102.69933319 38.50022125]
[102.08750916 23.51270294]
[101.47567749 8.52518654]
[100.86384583 -6.46233034]
[100.25202179 -21.44984818]
[99.64019012 -36.43736267]
[98.72276306 -51.40928268]
[88.95297241 -64.58058167]
[95.72212982 -79.51747131]
[112.06671143 -80.85414886]
[121.17281342 -67.21556854]
[113.67285156 -52.63191986]
[117.46384430 -46.03783417]
[114.62770844 -37.04919434]
[115.23954010 -22.06167603]
[115.85136414 -7.07415915]
[116.46319580 7.91335773]
[117.07501984 22.90087509]
[117.68685150 37.88839340]
[118.29868317 52.87590790]
[118.91050720 67.86342621]
[130.04402161 77.91553497]
[145.01594543 76.99810791]
[159.98785400 76.08068848]
[174.95977783 75.16326141]
[184.11386108 62.48506546]
[199.28826904 58.70727921]
[213.31808472 65.61366272]
[219.57887268 79.94322968]
[215.11448669 94.93000031]
[202.03285217 103.49767303]
[186.51074219 101.60086060]
[175.87719727 90.13517761]
[160.90528870 91.05260468]
[145.93336487 91.97003174]
[130.96144104 92.88745117]
[126.08661652 112.43267059]
[111.44985199 123.37396240]
[113.88699341 138.17465210]
[116.32413483 152.97532654]
[118.76127625 167.77601624]
[121.19841766 182.57670593]
[123.63555908 197.37739563]
[126.07270050 212.17808533]
[138.21878052 222.65913391]
[137.45336914 238.68391418]
[124.36363220 247.95959473]
[108.99089050 243.37066650]
] def
/pairs [
[1 72]
[2 71]
[3 70]
[4 69]
[5 68]
[6 67]
[7 66]
[10 25]
[11 24]
[12 23]
[13 22]
[27 49]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 40]
[50 64]
[51 63]
[52 62]
[53 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
