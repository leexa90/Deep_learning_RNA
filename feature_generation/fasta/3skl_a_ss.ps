%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUUAUACAGGGUAGCAUAAUGGGCUACUGACCCCGCCUUCAAACCUAUUUGGAGACUAUAAGU\
) def
/coor [
[92.50000000 231.35096741]
[92.50000000 216.35096741]
[92.50000000 201.35096741]
[92.50000000 186.35096741]
[92.50000000 171.35096741]
[92.50000000 156.35096741]
[92.50000000 141.35096741]
[77.21439362 135.31245422]
[65.41358948 123.87327576]
[58.90240097 108.78294373]
[58.67663193 92.34936523]
[44.65139008 87.03028870]
[30.62614441 81.71121979]
[16.60090065 76.39214325]
[2.57565761 71.07307434]
[-11.44958591 65.75399780]
[-25.00661087 73.54765320]
[-40.39240646 70.75277710]
[-50.34226608 58.68901443]
[-50.15817642 43.05251694]
[-39.92705154 31.22635269]
[-24.47972298 28.79447746]
[-11.10994244 36.90514755]
[-6.13051271 51.72875595]
[7.89473104 57.04782867]
[21.91997528 62.36690140]
[35.94521713 67.68597412]
[49.97046280 73.00505066]
[63.99570465 78.32411957]
[70.32109833 70.24574280]
[78.41549683 63.94085312]
[87.79642487 59.78525543]
[97.90474701 58.02664185]
[108.13795471 58.76983261]
[117.88610077 61.97053528]
[126.56815338 67.43796539]
[133.66662598 74.84624481]
[138.75840759 83.75380707]
[153.40502930 80.51704407]
[168.05163574 77.28028107]
[182.69825745 74.04351807]
[197.34487915 70.80675507]
[211.99148560 67.56999207]
[226.63810730 64.33322906]
[238.36437988 52.86909485]
[254.08062744 57.55223846]
[257.61929321 73.56504059]
[245.34013367 84.43490601]
[229.87486267 78.97984314]
[215.22825623 82.21660614]
[200.58163452 85.45336914]
[185.93501282 88.69013214]
[171.28840637 91.92689514]
[156.64178467 95.16365814]
[141.99516296 98.40042114]
[138.05116272 117.83989716]
[125.63044739 133.30514526]
[107.50000000 141.35096741]
[107.50000000 156.35096741]
[107.50000000 171.35096741]
[107.50000000 186.35096741]
[107.50000000 201.35096741]
[107.50000000 216.35096741]
[107.50000000 231.35096741]
] def
/pairs [
[1 64]
[2 63]
[3 62]
[4 61]
[5 60]
[6 59]
[7 58]
[11 29]
[12 28]
[13 27]
[14 26]
[15 25]
[16 24]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
