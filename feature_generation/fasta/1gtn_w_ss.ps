%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGC\
) def
/coor [
[83.95395660 270.33218384]
[71.65802765 258.65969849]
[79.47048187 243.61305237]
[81.18035126 228.71081543]
[82.46398163 213.76583862]
[83.32031250 198.79031372]
[80.42243195 191.60865784]
[84.67724609 182.99179077]
[86.38711548 168.08956909]
[87.67074585 153.14459229]
[88.52707672 138.16905212]
[85.62919617 130.98741150]
[89.88401031 122.37053680]
[91.59387970 107.46831512]
[92.87751007 92.52333832]
[93.73384094 77.54779816]
[91.01070404 68.33159637]
[95.09077454 61.74928665]
[96.80064392 46.84706116]
[98.08427429 31.90208435]
[98.94060516 16.92654800]
[96.21746826 7.71034336]
[100.29753876 1.12803328]
[102.00740814 -13.77419281]
[103.29103851 -28.71916962]
[104.14736938 -43.69470596]
[99.01512909 -59.85318375]
[113.12138367 -69.25796509]
[126.06362152 -58.30649567]
[119.12290192 -42.83837128]
[118.26657104 -27.86283684]
[121.16445160 -20.68119049]
[116.90963745 -12.06432152]
[115.19976807 2.83790445]
[113.91613770 17.78288078]
[113.05980682 32.75841522]
[115.95768738 39.94006348]
[111.70287323 48.55693054]
[109.99300385 63.45915604]
[108.70937347 78.40413666]
[107.85304260 93.37966919]
[110.67094421 101.36491394]
[106.49610901 109.17818451]
[104.78623962 124.08041382]
[103.50260925 139.02539062]
[102.64627838 154.00093079]
[105.36941528 163.21713257]
[101.28934479 169.79943848]
[99.57947540 184.70166016]
[98.29584503 199.64663696]
[97.43951416 214.62217712]
[100.16265106 223.83837891]
[96.08258057 230.42068481]
[94.37271118 245.32292175]
] def
/pairs [
[3 54]
[4 53]
[5 51]
[6 50]
[8 49]
[9 48]
[10 46]
[11 45]
[13 44]
[14 43]
[15 41]
[16 40]
[18 39]
[19 38]
[20 36]
[21 35]
[23 34]
[24 33]
[25 31]
[26 30]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
