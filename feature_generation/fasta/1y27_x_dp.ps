%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1y27_x)
} def

/sequence { (\
GAUCAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGGUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.052810010 ubox
1 36 0.003579083 ubox
1 67 0.981195462 ubox
2 11 0.052734214 ubox
2 35 0.003539751 ubox
2 66 0.994747554 ubox
3 10 0.049795321 ubox
3 65 0.995428244 ubox
4 64 0.996979054 ubox
4 65 0.005577219 ubox
5 11 0.003516356 ubox
5 63 0.994363037 ubox
6 10 0.003998680 ubox
6 38 0.008237754 ubox
6 59 0.005591214 ubox
6 62 0.987337348 ubox
6 64 0.011417651 ubox
7 11 0.005939750 ubox
7 33 0.012645442 ubox
7 34 0.008278924 ubox
7 35 0.014594424 ubox
7 37 0.011502982 ubox
7 61 0.931087498 ubox
7 63 0.020067211 ubox
8 30 0.012883622 ubox
8 31 0.009999583 ubox
8 32 0.017062381 ubox
8 38 0.014244273 ubox
8 58 0.006388627 ubox
8 59 0.131713195 ubox
8 62 0.031743438 ubox
9 33 0.053982777 ubox
9 34 0.140471779 ubox
9 35 0.046910454 ubox
9 37 0.013611292 ubox
9 61 0.036891273 ubox
10 20 0.008117968 ubox
10 33 0.160152081 ubox
10 34 0.050934156 ubox
10 35 0.012831787 ubox
10 37 0.003777119 ubox
10 61 0.011114791 ubox
10 66 0.010504755 ubox
11 19 0.008559395 ubox
11 30 0.091577420 ubox
11 31 0.138456244 ubox
11 32 0.154582086 ubox
11 58 0.004459998 ubox
11 59 0.126395991 ubox
11 65 0.010948770 ubox
12 18 0.008632022 ubox
12 28 0.004885441 ubox
12 32 0.056675004 ubox
12 41 0.003434671 ubox
12 58 0.120340941 ubox
12 64 0.011268585 ubox
13 25 0.004880831 ubox
13 27 0.005085297 ubox
13 29 0.997271033 ubox
13 40 0.009565821 ubox
13 44 0.005831526 ubox
13 55 0.006006974 ubox
13 57 0.009239584 ubox
13 60 0.003664206 ubox
14 24 0.004822141 ubox
14 28 0.998324093 ubox
14 43 0.005846001 ubox
14 54 0.007473214 ubox
15 25 0.005543467 ubox
15 27 0.998338899 ubox
15 29 0.007423691 ubox
15 39 0.052548857 ubox
15 53 0.007518395 ubox
15 56 0.005057439 ubox
15 60 0.006564541 ubox
16 24 0.005630417 ubox
16 26 0.998094651 ubox
16 28 0.007428241 ubox
16 38 0.052676341 ubox
16 41 0.005812303 ubox
16 52 0.007443024 ubox
16 54 0.003220909 ubox
16 58 0.006600985 ubox
16 59 0.005319301 ubox
17 22 0.003351217 ubox
17 25 0.997251668 ubox
17 27 0.007434019 ubox
17 37 0.052652744 ubox
17 40 0.006043927 ubox
17 53 0.003530775 ubox
17 57 0.009604941 ubox
18 22 0.013068264 ubox
18 25 0.037436704 ubox
18 36 0.052653029 ubox
18 39 0.006050394 ubox
18 56 0.009825114 ubox
19 33 0.005028039 ubox
19 34 0.004272629 ubox
19 35 0.051734645 ubox
19 55 0.009823943 ubox
20 24 0.012978042 ubox
20 32 0.007924898 ubox
20 38 0.004008723 ubox
20 50 0.010402697 ubox
20 54 0.009292891 ubox
21 33 0.025132843 ubox
21 34 0.004395310 ubox
21 37 0.003990118 ubox
21 49 0.011493121 ubox
21 53 0.008613417 ubox
22 30 0.026047209 ubox
22 31 0.010540515 ubox
22 32 0.023682169 ubox
22 38 0.003281243 ubox
22 48 0.011796480 ubox
22 52 0.008097294 ubox
23 29 0.028055491 ubox
23 34 0.029875057 ubox
23 36 0.006381110 ubox
23 37 0.003621138 ubox
23 47 0.012184504 ubox
24 29 0.012683632 ubox
24 33 0.031375965 ubox
24 35 0.006121267 ubox
24 36 0.003647469 ubox
24 46 0.012137099 ubox
24 49 0.003231253 ubox
25 32 0.031588778 ubox
25 48 0.003275199 ubox
26 33 0.009846104 ubox
26 49 0.006200539 ubox
27 32 0.010250662 ubox
27 41 0.003425242 ubox
27 43 0.007052255 ubox
27 48 0.006393270 ubox
28 40 0.003430421 ubox
28 44 0.009829529 ubox
28 47 0.006233105 ubox
29 41 0.006267856 ubox
29 42 0.004242292 ubox
29 43 0.009771509 ubox
30 34 0.014925580 ubox
30 35 0.028553032 ubox
30 37 0.040063770 ubox
30 61 0.003407448 ubox
31 35 0.016339231 ubox
31 37 0.174683364 ubox
31 61 0.083476862 ubox
31 66 0.003289947 ubox
32 36 0.177318443 ubox
32 37 0.034049283 ubox
32 39 0.508193651 ubox
32 40 0.019521582 ubox
32 44 0.006356323 ubox
32 46 0.004097499 ubox
32 60 0.105310653 ubox
32 67 0.003421945 ubox
33 38 0.496621219 ubox
33 43 0.006138473 ubox
33 45 0.004065454 ubox
33 59 0.104460921 ubox
33 64 0.003218349 ubox
33 65 0.004447721 ubox
34 38 0.018958575 ubox
34 42 0.005711356 ubox
34 58 0.039585827 ubox
34 59 0.010273082 ubox
34 64 0.005463619 ubox
35 41 0.004818423 ubox
35 42 0.003553802 ubox
35 43 0.003492541 ubox
35 58 0.004825692 ubox
35 59 0.018621198 ubox
35 64 0.003197769 ubox
35 65 0.008046651 ubox
36 41 0.004529944 ubox
36 42 0.003871033 ubox
36 58 0.016982719 ubox
36 64 0.010871172 ubox
36 65 0.011499405 ubox
37 41 0.003500361 ubox
37 50 0.007680965 ubox
37 59 0.020244909 ubox
37 62 0.013948385 ubox
37 64 0.011561689 ubox
38 49 0.008079305 ubox
38 61 0.016795387 ubox
38 63 0.010737367 ubox
38 66 0.007351412 ubox
39 48 0.006652060 ubox
39 58 0.028751834 ubox
39 65 0.007941865 ubox
40 48 0.010865472 ubox
40 58 0.981076360 ubox
40 64 0.007198995 ubox
41 46 0.004325619 ubox
41 47 0.012004519 ubox
41 57 0.999668782 ubox
42 46 0.011812515 ubox
42 56 0.999700173 ubox
42 57 0.008212827 ubox
43 55 0.999319888 ubox
43 56 0.008365316 ubox
44 54 0.999543115 ubox
45 49 0.006052947 ubox
45 53 0.924869297 ubox
45 55 0.007099870 ubox
45 66 0.006965710 ubox
46 54 0.007715963 ubox
46 65 0.007438515 ubox
47 54 0.007892591 ubox
47 58 0.003812585 ubox
47 64 0.007443666 ubox
48 53 0.012693290 ubox
48 57 0.003872166 ubox
48 63 0.007427250 ubox
49 62 0.007415510 ubox
50 61 0.007181470 ubox
54 60 0.003681393 ubox
55 59 0.003323003 ubox
58 67 0.012079551 ubox
59 66 0.016417087 ubox
60 65 0.016791326 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 65 0.9500000 lbox
4 64 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
17 25 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
45 53 0.9500000 lbox
showpage
end
%%EOF
