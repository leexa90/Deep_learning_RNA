%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1vfg_c)
} def

/sequence { (\
GGCCAGGUAGCUCAGUUGGUAGAGCACUGGACUGAAAAUCCAGGUGUCGGCGGUUCGAUUCCGCCCCUGGCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.006486501 ubox
1 71 0.005966915 ubox
1 72 0.988124277 ubox
2 32 0.006868322 ubox
2 71 0.999882423 ubox
3 30 0.008335531 ubox
3 70 0.999960064 ubox
4 29 0.008355776 ubox
4 69 0.999953150 ubox
5 28 0.008163871 ubox
5 68 0.999711651 ubox
6 27 0.007557174 ubox
6 66 0.005642122 ubox
6 67 0.999885225 ubox
7 27 0.011276919 ubox
7 65 0.004276290 ubox
7 66 0.994488489 ubox
7 67 0.003647370 ubox
8 18 0.047636498 ubox
8 21 0.083307323 ubox
8 22 0.010060407 ubox
8 23 0.005971239 ubox
8 26 0.079417633 ubox
8 29 0.004219142 ubox
8 34 0.006509640 ubox
8 44 0.003889055 ubox
8 46 0.007710034 ubox
9 16 0.003341068 ubox
9 17 0.052099287 ubox
9 20 0.087728159 ubox
9 28 0.004273889 ubox
9 33 0.007319133 ubox
9 45 0.007948176 ubox
10 16 0.053430737 ubox
10 20 0.074877955 ubox
10 25 0.984973937 ubox
10 32 0.007422610 ubox
10 64 0.007589629 ubox
11 15 0.053231639 ubox
11 18 0.090464551 ubox
11 19 0.076746540 ubox
11 22 0.019010084 ubox
11 24 0.988565698 ubox
11 30 0.005766871 ubox
11 63 0.007597743 ubox
12 18 0.067317956 ubox
12 19 0.016977104 ubox
12 21 0.018786123 ubox
12 23 0.988889575 ubox
12 30 0.015115628 ubox
12 35 0.015292435 ubox
13 18 0.037119016 ubox
13 19 0.014334974 ubox
13 22 0.988774233 ubox
13 29 0.020306867 ubox
13 34 0.016116879 ubox
13 46 0.005642151 ubox
14 20 0.151064977 ubox
14 28 0.020378933 ubox
14 33 0.016117988 ubox
14 45 0.005678016 ubox
14 60 0.004105227 ubox
15 20 0.049193508 ubox
15 25 0.017194634 ubox
15 27 0.020376888 ubox
15 32 0.016121668 ubox
15 59 0.004386685 ubox
16 21 0.038347175 ubox
16 23 0.006497452 ubox
16 24 0.017217271 ubox
16 26 0.014947611 ubox
16 30 0.003646959 ubox
16 31 0.015662120 ubox
16 43 0.005603179 ubox
16 58 0.004406458 ubox
17 21 0.010682937 ubox
17 22 0.007128383 ubox
17 23 0.017460036 ubox
17 26 0.014961946 ubox
17 29 0.006475613 ubox
17 30 0.014215125 ubox
17 42 0.005691424 ubox
17 57 0.004388693 ubox
18 25 0.020566868 ubox
18 28 0.008800603 ubox
18 41 0.005698592 ubox
18 48 0.004062708 ubox
18 56 0.004374497 ubox
19 25 0.005573257 ubox
19 27 0.010564072 ubox
19 28 0.009273282 ubox
19 40 0.005693805 ubox
19 48 0.009300008 ubox
19 55 0.003579011 ubox
20 24 0.005298265 ubox
20 26 0.010312540 ubox
20 29 0.005657263 ubox
21 28 0.006207896 ubox
21 47 0.003386075 ubox
22 27 0.006320548 ubox
22 47 0.005895256 ubox
22 48 0.098378609 ubox
23 47 0.089782383 ubox
24 45 0.046591745 ubox
24 47 0.104660794 ubox
24 48 0.024756894 ubox
25 34 0.005067290 ubox
25 44 0.052933824 ubox
25 46 0.143696967 ubox
26 33 0.004574229 ubox
26 45 0.199148119 ubox
26 47 0.029162760 ubox
27 43 0.981892164 ubox
27 44 0.154561600 ubox
27 46 0.027201663 ubox
28 42 0.993713227 ubox
28 43 0.076366338 ubox
28 46 0.003638578 ubox
29 41 0.997410491 ubox
29 45 0.004596593 ubox
29 47 0.011175390 ubox
29 48 0.016637087 ubox
30 40 0.997309552 ubox
30 41 0.004645799 ubox
30 45 0.006045106 ubox
30 47 0.014668744 ubox
30 48 0.038052688 ubox
31 39 0.957867782 ubox
31 45 0.018633889 ubox
31 47 0.038039551 ubox
32 43 0.055305706 ubox
32 44 0.016228984 ubox
32 46 0.035021095 ubox
33 37 0.183930879 ubox
33 38 0.410834161 ubox
33 42 0.058598125 ubox
33 43 0.012721282 ubox
33 44 0.004615328 ubox
34 39 0.006537060 ubox
34 40 0.008262179 ubox
34 41 0.058711746 ubox
35 39 0.009199987 ubox
40 70 0.008267425 ubox
41 69 0.008370121 ubox
42 68 0.008410085 ubox
43 48 0.018557409 ubox
43 62 0.013598759 ubox
43 65 0.006965440 ubox
43 67 0.008466989 ubox
44 48 0.092227009 ubox
44 51 0.003612790 ubox
44 61 0.015461733 ubox
44 62 0.003489181 ubox
44 64 0.009076286 ubox
44 66 0.009824316 ubox
45 50 0.003581243 ubox
45 63 0.009063662 ubox
46 59 0.017051059 ubox
46 62 0.007574646 ubox
46 65 0.004214490 ubox
46 66 0.008257244 ubox
47 58 0.019148408 ubox
48 57 0.019202376 ubox
49 56 0.019118354 ubox
49 64 0.003180561 ubox
49 65 0.997721789 ubox
49 66 0.006703869 ubox
50 55 0.013517312 ubox
50 64 0.999754488 ubox
50 65 0.005559995 ubox
51 63 0.999770824 ubox
52 61 0.011513760 ubox
52 62 0.999681839 ubox
52 65 0.004094748 ubox
53 59 0.005056326 ubox
53 60 0.015074552 ubox
53 61 0.998584968 ubox
53 64 0.004101564 ubox
54 58 0.020947436 ubox
54 63 0.003920345 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
