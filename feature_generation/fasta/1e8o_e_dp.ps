%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:25 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1e8o_e)
} def

/sequence { (\
GGCCGGGCGCGGUGGCGCGCGCCUGUAGUCCCAGCUACUCGGGAGGCUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.250782220 ubox
1 24 0.027265636 ubox
1 26 0.012013876 ubox
1 29 0.004268335 ubox
1 30 0.080223861 ubox
1 31 0.036557068 ubox
1 32 0.025948309 ubox
1 36 0.004028809 ubox
1 47 0.056392420 ubox
1 48 0.765147157 ubox
1 49 0.129499084 ubox
2 20 0.006606276 ubox
2 22 0.251210723 ubox
2 23 0.028753246 ubox
2 26 0.119133754 ubox
2 29 0.091124814 ubox
2 30 0.036660382 ubox
2 31 0.025474377 ubox
2 35 0.004271665 ubox
2 47 0.888793266 ubox
2 48 0.016461835 ubox
3 12 0.003173976 ubox
3 19 0.006383464 ubox
3 21 0.181546187 ubox
3 25 0.090980568 ubox
3 28 0.101272444 ubox
3 34 0.004270954 ubox
3 42 0.025850833 ubox
3 43 0.011343373 ubox
3 45 0.051692388 ubox
3 46 0.889549878 ubox
4 11 0.003175733 ubox
4 19 0.027947159 ubox
4 21 0.177196475 ubox
4 25 0.402403836 ubox
4 28 0.007460143 ubox
4 41 0.026047892 ubox
4 42 0.011410317 ubox
4 43 0.003891873 ubox
4 45 0.863775638 ubox
4 46 0.003921905 ubox
5 10 0.003173482 ubox
5 18 0.027292043 ubox
5 20 0.256917948 ubox
5 22 0.099433908 ubox
5 23 0.205233805 ubox
5 24 0.897743654 ubox
5 26 0.009698349 ubox
5 40 0.023945562 ubox
6 18 0.004919041 ubox
6 20 0.011246869 ubox
6 22 0.204655603 ubox
6 23 0.934260111 ubox
6 24 0.003642088 ubox
6 39 0.004247084 ubox
7 16 0.027152745 ubox
7 18 0.258469453 ubox
7 20 0.241912486 ubox
7 22 0.934581537 ubox
8 15 0.027143432 ubox
8 17 0.258556290 ubox
8 19 0.242172048 ubox
8 21 0.934710358 ubox
8 41 0.003215257 ubox
9 16 0.258557111 ubox
9 18 0.242455749 ubox
9 20 0.934638042 ubox
9 40 0.003202944 ubox
10 14 0.003255365 ubox
10 15 0.258467593 ubox
10 17 0.242511202 ubox
10 19 0.934616869 ubox
11 16 0.241696028 ubox
11 18 0.931172251 ubox
11 39 0.003305336 ubox
12 16 0.103867558 ubox
12 18 0.038644045 ubox
12 38 0.004188895 ubox
13 17 0.051057577 ubox
13 37 0.004202026 ubox
14 36 0.004202094 ubox
15 35 0.004203986 ubox
16 34 0.004201099 ubox
19 47 0.005163917 ubox
20 43 0.005972971 ubox
20 46 0.005146925 ubox
21 29 0.005052084 ubox
21 47 0.042687832 ubox
22 28 0.006223457 ubox
22 41 0.008182546 ubox
22 42 0.047110053 ubox
22 43 0.071843175 ubox
22 46 0.043046015 ubox
23 28 0.011103900 ubox
23 41 0.048332120 ubox
23 42 0.073973429 ubox
23 43 0.010338123 ubox
23 45 0.043049977 ubox
24 28 0.007304412 ubox
24 41 0.070346155 ubox
24 42 0.010578675 ubox
24 44 0.032287944 ubox
24 45 0.003659623 ubox
25 29 0.005097140 ubox
25 30 0.003797986 ubox
25 32 0.003533129 ubox
25 38 0.255539964 ubox
25 40 0.040876758 ubox
25 47 0.229524261 ubox
25 48 0.013282899 ubox
25 49 0.031628163 ubox
26 37 0.258042652 ubox
26 44 0.006247102 ubox
26 45 0.016764750 ubox
26 46 0.229342473 ubox
27 36 0.258499588 ubox
27 39 0.023871327 ubox
27 48 0.173183215 ubox
28 35 0.258479383 ubox
28 38 0.024223954 ubox
28 47 0.186545905 ubox
28 48 0.009067392 ubox
28 49 0.011286637 ubox
29 33 0.005896689 ubox
29 34 0.245035500 ubox
29 37 0.023218792 ubox
29 43 0.020549469 ubox
29 44 0.887940661 ubox
29 45 0.013414560 ubox
29 46 0.157394308 ubox
30 34 0.023482384 ubox
30 42 0.026232051 ubox
30 43 0.952101173 ubox
30 45 0.119027690 ubox
30 46 0.007843529 ubox
31 41 0.026298587 ubox
31 42 0.953204855 ubox
31 43 0.113448620 ubox
31 45 0.007781798 ubox
31 46 0.022727062 ubox
32 41 0.953013398 ubox
32 42 0.112753362 ubox
32 43 0.010708148 ubox
32 45 0.023009480 ubox
33 39 0.391140159 ubox
33 48 0.090065666 ubox
34 38 0.385003418 ubox
34 39 0.097056550 ubox
34 40 0.117095800 ubox
34 47 0.096282857 ubox
35 41 0.019196199 ubox
35 42 0.024669640 ubox
35 43 0.007056797 ubox
35 45 0.004394305 ubox
35 46 0.096236736 ubox
36 41 0.023392150 ubox
36 42 0.006989484 ubox
36 44 0.005410108 ubox
36 45 0.094858083 ubox
38 42 0.014367904 ubox
38 43 0.034239817 ubox
38 45 0.008241127 ubox
39 43 0.006542501 ubox
39 44 0.012372295 ubox
39 46 0.010400079 ubox
40 45 0.015375346 ubox
40 46 0.003917519 ubox
41 47 0.006901917 ubox
41 48 0.014342949 ubox
41 49 0.011735830 ubox
42 47 0.015453498 ubox
42 48 0.011904383 ubox
43 47 0.011738053 ubox
43 49 0.003414473 ubox
44 48 0.003235301 ubox
45 49 0.004738784 ubox
1 48 0.9500000 lbox
2 47 0.9500000 lbox
3 46 0.9500000 lbox
4 45 0.9500000 lbox
5 24 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
29 44 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
showpage
end
%%EOF
