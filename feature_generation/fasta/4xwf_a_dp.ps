%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:43 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4xwf_a)
} def

/sequence { (\
GGGUCGUGACUGGCGAACAGGUGGGAAACCACCGGGGAGCGACCCUUGCCGCCCGCCUGGGCAA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.008585685 ubox
1 11 0.014014936 ubox
1 18 0.007135897 ubox
1 44 0.003251586 ubox
1 45 0.996344651 ubox
1 46 0.008019275 ubox
1 50 0.023800285 ubox
1 54 0.005482763 ubox
1 58 0.005476520 ubox
2 10 0.014809001 ubox
2 11 0.020868317 ubox
2 18 0.011914250 ubox
2 44 0.998064104 ubox
2 45 0.007591532 ubox
2 49 0.023385870 ubox
2 50 0.018752036 ubox
2 53 0.005486965 ubox
2 57 0.005802200 ubox
3 10 0.021926374 ubox
3 14 0.015172160 ubox
3 18 0.017437224 ubox
3 43 0.998091725 ubox
3 44 0.005388694 ubox
3 49 0.018723458 ubox
3 52 0.005484757 ubox
3 56 0.005798019 ubox
3 62 0.003792375 ubox
4 9 0.020301967 ubox
4 13 0.015187438 ubox
4 16 0.028179177 ubox
4 17 0.012350722 ubox
4 42 0.997988167 ubox
4 48 0.013964073 ubox
4 51 0.004935769 ubox
4 61 0.003780697 ubox
5 12 0.015210820 ubox
5 15 0.035249084 ubox
5 41 0.998083364 ubox
5 48 0.003953936 ubox
5 55 0.005010794 ubox
5 60 0.003751804 ubox
6 10 0.003537606 ubox
6 11 0.010837472 ubox
6 14 0.035588776 ubox
6 40 0.997540997 ubox
6 47 0.003591685 ubox
6 54 0.005110306 ubox
7 13 0.035402328 ubox
7 15 0.003430222 ubox
7 38 0.019672501 ubox
7 39 0.996331759 ubox
8 14 0.009831746 ubox
8 18 0.004168855 ubox
8 40 0.003343828 ubox
8 45 0.003548386 ubox
8 52 0.003295250 ubox
8 53 0.003477148 ubox
10 15 0.008011007 ubox
10 20 0.028594308 ubox
10 34 0.035002194 ubox
10 35 0.208657794 ubox
10 36 0.896260651 ubox
10 37 0.346031905 ubox
10 39 0.021968620 ubox
11 15 0.006681253 ubox
11 16 0.028754870 ubox
11 17 0.020786202 ubox
11 19 0.249708662 ubox
11 34 0.209424892 ubox
11 35 0.780714271 ubox
11 36 0.339685118 ubox
11 37 0.009531551 ubox
11 38 0.025269808 ubox
11 39 0.004387932 ubox
11 42 0.004712479 ubox
11 51 0.005506744 ubox
12 18 0.410902888 ubox
12 33 0.120727763 ubox
12 50 0.046855075 ubox
13 18 0.105161644 ubox
13 22 0.005292756 ubox
13 32 0.105705301 ubox
13 33 0.337271990 ubox
13 40 0.032364980 ubox
13 49 0.046906587 ubox
14 20 0.058225798 ubox
14 21 0.020327411 ubox
14 34 0.225104152 ubox
14 35 0.043956535 ubox
14 36 0.070467130 ubox
14 37 0.017180207 ubox
14 39 0.035338815 ubox
14 48 0.046902624 ubox
15 30 0.021216885 ubox
15 32 0.043053511 ubox
15 33 0.099984421 ubox
15 47 0.045283253 ubox
15 62 0.012158059 ubox
16 46 0.042256818 ubox
18 24 0.004394731 ubox
18 25 0.004294024 ubox
18 34 0.393706697 ubox
18 35 0.235591695 ubox
18 36 0.054957456 ubox
18 37 0.004610951 ubox
18 59 0.013917782 ubox
19 58 0.013936878 ubox
20 29 0.006822606 ubox
20 30 0.060330014 ubox
20 32 0.020183416 ubox
20 33 0.924945212 ubox
20 57 0.013940158 ubox
21 29 0.061264101 ubox
21 32 0.992515510 ubox
21 33 0.003500782 ubox
21 56 0.013935128 ubox
22 27 0.003499105 ubox
22 28 0.060920944 ubox
22 31 0.997360710 ubox
22 34 0.003232478 ubox
22 55 0.013924719 ubox
23 29 0.004066532 ubox
23 30 0.997734185 ubox
23 33 0.004159032 ubox
23 54 0.013927226 ubox
24 29 0.997080864 ubox
24 30 0.008287540 ubox
24 32 0.004186546 ubox
24 53 0.013927077 ubox
25 29 0.010802038 ubox
25 52 0.013919423 ubox
30 48 0.009439676 ubox
31 47 0.009134818 ubox
33 51 0.007292879 ubox
34 45 0.055249233 ubox
34 46 0.018283063 ubox
34 47 0.004263603 ubox
34 50 0.012729576 ubox
34 54 0.003249827 ubox
35 44 0.055323252 ubox
35 45 0.021236002 ubox
35 46 0.004815387 ubox
35 49 0.012733501 ubox
35 53 0.003321399 ubox
36 43 0.055299346 ubox
36 44 0.021264359 ubox
36 45 0.005123169 ubox
36 52 0.003321486 ubox
37 43 0.021215566 ubox
37 44 0.005114607 ubox
37 47 0.012641814 ubox
38 46 0.012714257 ubox
39 45 0.012611049 ubox
39 49 0.004125523 ubox
40 48 0.004134752 ubox
41 47 0.003958049 ubox
42 46 0.003375182 ubox
46 63 0.017714879 ubox
46 64 0.192071770 ubox
47 63 0.271387151 ubox
47 64 0.020043502 ubox
48 62 0.281068452 ubox
49 60 0.019463647 ubox
49 61 0.279977982 ubox
50 59 0.026659242 ubox
50 60 0.278445099 ubox
50 61 0.005098948 ubox
51 56 0.012794351 ubox
51 57 0.012051139 ubox
51 58 0.024476193 ubox
51 62 0.958465995 ubox
52 59 0.105037448 ubox
52 60 0.013673936 ubox
52 61 0.959589315 ubox
53 59 0.018736368 ubox
53 60 0.959736329 ubox
53 61 0.007292772 ubox
54 59 0.958512604 ubox
54 60 0.009468594 ubox
55 62 0.005415385 ubox
56 61 0.005400452 ubox
1 45 0.9500000 lbox
2 44 0.9500000 lbox
3 43 0.9500000 lbox
4 42 0.9500000 lbox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
showpage
end
%%EOF
