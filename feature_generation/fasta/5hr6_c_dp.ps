%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:51 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5hr6_c)
} def

/sequence { (\
CCCCUUCGUCUAGAGGCCCAGGACACCGCCCUUUCACGGCGGUAACAGGGGUUCGAAUCCCCUAGGGG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.012236367 ubox
1 22 0.004702408 ubox
1 51 0.013018659 ubox
1 66 0.011621174 ubox
1 67 0.075293254 ubox
1 68 0.961771812 ubox
2 15 0.012529446 ubox
2 16 0.013916354 ubox
2 21 0.004716927 ubox
2 22 0.005080270 ubox
2 50 0.013150228 ubox
2 65 0.011625390 ubox
2 66 0.075032889 ubox
2 67 0.987338042 ubox
2 68 0.115252283 ubox
3 15 0.014020498 ubox
3 16 0.039343515 ubox
3 21 0.005070227 ubox
3 22 0.020640437 ubox
3 49 0.013150086 ubox
3 65 0.073277732 ubox
3 66 0.987480080 ubox
3 67 0.117148270 ubox
3 68 0.009576668 ubox
4 13 0.019139280 ubox
4 15 0.040573142 ubox
4 16 0.059200289 ubox
4 21 0.023677226 ubox
4 22 0.010472490 ubox
4 48 0.013142067 ubox
4 65 0.987091736 ubox
4 66 0.117121948 ubox
4 67 0.009715080 ubox
4 68 0.003919593 ubox
5 12 0.019057543 ubox
5 14 0.037562988 ubox
5 15 0.070692147 ubox
5 20 0.023651797 ubox
5 21 0.011270219 ubox
5 22 0.003424616 ubox
5 23 0.016194299 ubox
5 47 0.012288588 ubox
5 57 0.043362715 ubox
5 64 0.949758494 ubox
5 65 0.113601060 ubox
5 66 0.008999030 ubox
5 67 0.003983236 ubox
6 13 0.032603268 ubox
6 14 0.103683331 ubox
6 16 0.016949674 ubox
6 20 0.012346859 ubox
6 21 0.006873134 ubox
6 22 0.024630272 ubox
6 23 0.027859640 ubox
6 25 0.015586546 ubox
6 42 0.012171614 ubox
6 56 0.083299022 ubox
6 57 0.005938114 ubox
6 64 0.100127383 ubox
6 65 0.006723159 ubox
6 66 0.004272922 ubox
7 13 0.107630631 ubox
7 15 0.023093845 ubox
7 16 0.011585222 ubox
7 21 0.028041048 ubox
7 22 0.030041257 ubox
7 38 0.003949948 ubox
7 41 0.016526213 ubox
7 55 0.083758905 ubox
7 65 0.005670692 ubox
7 67 0.004585602 ubox
7 68 0.012883860 ubox
8 17 0.129047432 ubox
8 18 0.010336816 ubox
8 19 0.005241493 ubox
8 24 0.583216900 ubox
8 37 0.003967920 ubox
8 40 0.016630384 ubox
8 54 0.079227042 ubox
8 58 0.100512973 ubox
8 59 0.320777997 ubox
8 60 0.153552924 ubox
8 61 0.313236989 ubox
8 62 0.102003497 ubox
8 63 0.010614868 ubox
9 13 0.004686689 ubox
9 14 0.005625779 ubox
9 16 0.129060205 ubox
9 20 0.013407726 ubox
9 22 0.047617444 ubox
9 23 0.583077201 ubox
9 36 0.003835033 ubox
9 39 0.016593784 ubox
9 55 0.005814119 ubox
9 56 0.139193400 ubox
9 57 0.105041123 ubox
9 66 0.014658850 ubox
10 15 0.127290702 ubox
10 16 0.014736988 ubox
10 21 0.077416028 ubox
10 22 0.580864858 ubox
10 38 0.016529378 ubox
10 55 0.140782288 ubox
10 65 0.021142836 ubox
11 15 0.013461233 ubox
11 16 0.005218000 ubox
11 20 0.092403220 ubox
11 21 0.553263731 ubox
11 36 0.005566237 ubox
11 55 0.027124817 ubox
11 56 0.123796631 ubox
11 57 0.089939207 ubox
11 64 0.025024793 ubox
12 32 0.003709285 ubox
12 34 0.014404950 ubox
12 53 0.011066056 ubox
12 58 0.033444411 ubox
12 63 0.029594366 ubox
13 17 0.058136917 ubox
13 18 0.179337897 ubox
13 19 0.319080134 ubox
13 24 0.003673073 ubox
13 31 0.003839266 ubox
13 33 0.015004581 ubox
13 35 0.006409249 ubox
13 52 0.003969992 ubox
13 53 0.008150853 ubox
13 54 0.731046397 ubox
13 58 0.004024408 ubox
13 59 0.038794836 ubox
13 62 0.029432250 ubox
14 32 0.015076900 ubox
14 34 0.006279097 ubox
14 52 0.005479382 ubox
14 53 0.724791676 ubox
14 58 0.038695445 ubox
14 63 0.010252508 ubox
15 19 0.058217438 ubox
15 24 0.038937699 ubox
15 30 0.008694064 ubox
15 31 0.014276190 ubox
15 52 0.686543341 ubox
15 53 0.222290441 ubox
15 54 0.177884772 ubox
15 60 0.022658159 ubox
15 61 0.017596862 ubox
15 62 0.010419725 ubox
16 24 0.021071848 ubox
16 29 0.010054311 ubox
16 30 0.013344430 ubox
16 52 0.351205623 ubox
16 53 0.125621717 ubox
16 54 0.007216991 ubox
16 59 0.021552654 ubox
16 60 0.016681185 ubox
16 61 0.009841412 ubox
17 21 0.007873531 ubox
17 22 0.038837684 ubox
17 28 0.011202423 ubox
17 50 0.662200854 ubox
17 51 0.430788260 ubox
17 67 0.050647203 ubox
17 68 0.020118925 ubox
18 22 0.011971229 ubox
18 28 0.005503322 ubox
18 49 0.662251010 ubox
18 50 0.430841786 ubox
18 66 0.050803171 ubox
18 67 0.020494839 ubox
19 28 0.004377786 ubox
19 48 0.661448236 ubox
19 49 0.430756488 ubox
19 65 0.050743288 ubox
19 66 0.020452470 ubox
20 63 0.009959550 ubox
21 26 0.007934253 ubox
21 27 0.012997174 ubox
21 46 0.477698972 ubox
21 54 0.004062667 ubox
21 62 0.009863544 ubox
21 63 0.004884162 ubox
22 26 0.012801763 ubox
22 43 0.004150449 ubox
22 46 0.551139201 ubox
22 53 0.004067570 ubox
22 61 0.007006033 ubox
22 62 0.005091878 ubox
23 43 0.012504077 ubox
23 52 0.004071836 ubox
24 42 0.007254918 ubox
24 51 0.004063063 ubox
25 43 0.968071269 ubox
26 39 0.003362310 ubox
26 42 0.999606293 ubox
27 38 0.003366282 ubox
27 41 0.999815268 ubox
28 37 0.003354315 ubox
28 40 0.999824151 ubox
29 38 0.004633554 ubox
29 39 0.995477583 ubox
30 38 0.990082076 ubox
30 39 0.093148942 ubox
31 38 0.131569629 ubox
32 36 0.164201632 ubox
32 38 0.003184548 ubox
43 64 0.003281444 ubox
44 63 0.006458221 ubox
45 63 0.009246683 ubox
46 65 0.025544049 ubox
47 63 0.578406446 ubox
48 60 0.003349493 ubox
48 61 0.065797781 ubox
48 62 0.607464804 ubox
48 63 0.042546293 ubox
49 59 0.003339556 ubox
49 60 0.066946285 ubox
49 61 0.607530811 ubox
49 62 0.044092767 ubox
50 58 0.003165569 ubox
50 59 0.067635529 ubox
50 60 0.607456611 ubox
50 61 0.044086283 ubox
51 58 0.065768964 ubox
51 59 0.606737960 ubox
51 60 0.044020465 ubox
52 56 0.012350120 ubox
52 57 0.095267883 ubox
53 57 0.092424071 ubox
55 59 0.006046368 ubox
55 60 0.016264721 ubox
55 61 0.013145364 ubox
55 62 0.020229500 ubox
56 63 0.004743909 ubox
57 63 0.003179767 ubox
58 68 0.018387079 ubox
59 66 0.004325328 ubox
59 67 0.028507488 ubox
59 68 0.027596607 ubox
60 65 0.004387470 ubox
60 66 0.028554097 ubox
60 67 0.028266591 ubox
60 68 0.008532383 ubox
61 65 0.028351649 ubox
61 66 0.028247572 ubox
61 67 0.008679898 ubox
62 66 0.008624069 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
showpage
end
%%EOF
