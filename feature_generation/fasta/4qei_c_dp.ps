%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4qei_c)
} def

/sequence { (\
CGCCGCUGGUGUAGUGGUAUCAUGCAAGAUUCCCAUUCUUGCGACCCGGGUUCGAUUCCCGGGCGGCG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.017838481 ubox
1 16 0.008864281 ubox
1 43 0.007398879 ubox
1 65 0.041795340 ubox
1 66 0.015671845 ubox
1 68 0.850808501 ubox
2 10 0.018637082 ubox
2 15 0.008975538 ubox
2 18 0.312849612 ubox
2 21 0.008028544 ubox
2 64 0.030058808 ubox
2 67 0.944334486 ubox
3 9 0.018692070 ubox
3 14 0.008983656 ubox
3 17 0.324376068 ubox
3 63 0.005774228 ubox
3 66 0.944420291 ubox
4 8 0.018557722 ubox
4 16 0.325111470 ubox
4 43 0.005075561 ubox
4 62 0.003765325 ubox
4 65 0.944153351 ubox
4 68 0.044440602 ubox
5 12 0.040191469 ubox
5 15 0.329386048 ubox
5 18 0.064086227 ubox
5 21 0.004270588 ubox
5 23 0.014350119 ubox
5 25 0.006256007 ubox
5 42 0.017896679 ubox
5 64 0.929324199 ubox
5 67 0.047542988 ubox
6 11 0.056049092 ubox
6 14 0.335024958 ubox
6 16 0.017430625 ubox
6 17 0.092573638 ubox
6 24 0.010595601 ubox
6 41 0.018123045 ubox
6 43 0.009416096 ubox
6 62 0.017684852 ubox
6 63 0.753765073 ubox
6 66 0.047544117 ubox
7 11 0.005177307 ubox
7 13 0.332066523 ubox
7 14 0.011882315 ubox
7 16 0.092916343 ubox
7 17 0.008975069 ubox
7 19 0.024491179 ubox
7 22 0.785913359 ubox
7 35 0.003452190 ubox
7 43 0.013746538 ubox
7 44 0.029190442 ubox
7 61 0.024651492 ubox
7 62 0.133557474 ubox
7 63 0.004874549 ubox
7 65 0.046867864 ubox
8 12 0.276490497 ubox
8 15 0.080654261 ubox
8 18 0.026661388 ubox
8 20 0.003939438 ubox
8 21 0.874779060 ubox
8 23 0.011583601 ubox
8 34 0.003812277 ubox
8 39 0.015424753 ubox
8 40 0.003963380 ubox
8 42 0.016850644 ubox
8 45 0.015783513 ubox
8 46 0.062126884 ubox
8 47 0.006239908 ubox
8 59 0.005645366 ubox
8 60 0.030309465 ubox
8 64 0.045232188 ubox
9 15 0.009128703 ubox
9 18 0.008552803 ubox
9 20 0.873568590 ubox
9 21 0.041030278 ubox
9 23 0.162444888 ubox
9 33 0.003780924 ubox
9 38 0.016305391 ubox
9 39 0.004311211 ubox
9 40 0.003415467 ubox
9 42 0.041846020 ubox
9 45 0.066146828 ubox
9 46 0.006473477 ubox
9 58 0.005721939 ubox
9 59 0.030259645 ubox
9 60 0.039462455 ubox
10 14 0.004682418 ubox
10 16 0.024323728 ubox
10 17 0.016897557 ubox
10 19 0.872315205 ubox
10 22 0.172010184 ubox
10 26 0.003760015 ubox
10 41 0.041460831 ubox
10 43 0.041223216 ubox
10 44 0.056953607 ubox
10 54 0.005753620 ubox
11 15 0.013784059 ubox
11 18 0.793940245 ubox
11 20 0.091024196 ubox
11 21 0.173132872 ubox
11 23 0.015015594 ubox
11 25 0.004534558 ubox
11 30 0.003213474 ubox
11 36 0.008051787 ubox
11 38 0.019343013 ubox
11 39 0.006483112 ubox
11 40 0.034052872 ubox
11 42 0.065365635 ubox
11 45 0.011766500 ubox
11 53 0.005936745 ubox
11 56 0.005820106 ubox
11 58 0.034362344 ubox
11 59 0.026174790 ubox
12 16 0.025901524 ubox
12 17 0.334357605 ubox
12 19 0.152019075 ubox
12 22 0.015583378 ubox
12 24 0.004492433 ubox
12 29 0.003279048 ubox
12 35 0.008224161 ubox
12 41 0.065268214 ubox
12 44 0.011628939 ubox
12 55 0.005838541 ubox
13 18 0.153912373 ubox
13 20 0.059650564 ubox
13 23 0.010241894 ubox
13 37 0.059786035 ubox
13 39 0.011533125 ubox
13 40 0.054271435 ubox
13 56 0.003649052 ubox
13 57 0.041076493 ubox
14 18 0.016772295 ubox
14 20 0.016091183 ubox
14 21 0.049419604 ubox
14 23 0.150429869 ubox
14 34 0.009548259 ubox
14 36 0.079835250 ubox
14 37 0.003775484 ubox
14 38 0.014072355 ubox
14 39 0.025185482 ubox
14 45 0.012793175 ubox
14 47 0.017633129 ubox
14 53 0.004264547 ubox
14 56 0.043320868 ubox
14 67 0.004098647 ubox
15 19 0.016075726 ubox
15 22 0.166242344 ubox
15 26 0.003530655 ubox
15 35 0.085121559 ubox
15 44 0.012698800 ubox
15 48 0.006720543 ubox
15 49 0.003202845 ubox
15 54 0.011015506 ubox
15 55 0.043346546 ubox
15 66 0.004084485 ubox
16 20 0.003756950 ubox
16 21 0.170976071 ubox
16 23 0.010055288 ubox
16 25 0.003560275 ubox
16 33 0.016815471 ubox
16 34 0.084906750 ubox
16 46 0.079633999 ubox
16 47 0.009468933 ubox
16 53 0.012375586 ubox
17 21 0.014028580 ubox
17 23 0.010066530 ubox
17 32 0.019351728 ubox
17 33 0.084303179 ubox
17 45 0.084504736 ubox
17 46 0.009390740 ubox
17 52 0.011490222 ubox
17 53 0.041908297 ubox
17 64 0.004188597 ubox
18 22 0.009978265 ubox
18 44 0.083433697 ubox
18 49 0.003508945 ubox
19 23 0.005065380 ubox
19 30 0.084890290 ubox
19 31 0.009390193 ubox
19 51 0.040411839 ubox
20 29 0.087010103 ubox
20 43 0.007813374 ubox
20 44 0.059044777 ubox
20 49 0.011601481 ubox
20 50 0.041696810 ubox
20 66 0.018000762 ubox
21 28 0.087047595 ubox
21 43 0.063687791 ubox
21 48 0.012207410 ubox
21 49 0.041498093 ubox
21 65 0.024357015 ubox
21 66 0.006925111 ubox
21 68 0.005599728 ubox
23 27 0.004467718 ubox
23 43 0.583413627 ubox
23 44 0.059722639 ubox
23 48 0.004433640 ubox
23 68 0.004410679 ubox
24 42 0.993087541 ubox
24 67 0.006769483 ubox
25 41 0.995503239 ubox
25 66 0.006116217 ubox
26 40 0.995334860 ubox
27 39 0.995434711 ubox
28 37 0.009084813 ubox
28 38 0.995912124 ubox
29 36 0.068996623 ubox
29 37 0.984776249 ubox
30 35 0.087749675 ubox
31 35 0.153735558 ubox
32 43 0.003385202 ubox
34 41 0.004343483 ubox
35 40 0.004254459 ubox
37 44 0.006088144 ubox
38 43 0.007156704 ubox
40 68 0.017524413 ubox
41 67 0.039396689 ubox
42 65 0.057438369 ubox
42 66 0.040753098 ubox
42 68 0.004583038 ubox
43 64 0.225132267 ubox
43 67 0.040771396 ubox
44 51 0.003355894 ubox
45 50 0.003468867 ubox
45 62 0.055350826 ubox
45 63 0.654201626 ubox
45 65 0.003206811 ubox
46 61 0.041714594 ubox
46 62 0.987335657 ubox
47 54 0.007932005 ubox
47 61 0.997524595 ubox
47 62 0.003742611 ubox
48 53 0.007960009 ubox
48 59 0.028454870 ubox
48 60 0.998437495 ubox
49 58 0.030747333 ubox
49 59 0.998391258 ubox
49 60 0.003979538 ubox
50 56 0.005668807 ubox
50 57 0.030353470 ubox
50 58 0.997279639 ubox
50 59 0.004927031 ubox
51 55 0.021085703 ubox
64 68 0.003623281 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
6 63 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
24 42 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
46 62 0.9500000 lbox
47 61 0.9500000 lbox
48 60 0.9500000 lbox
49 59 0.9500000 lbox
50 58 0.9500000 lbox
showpage
end
%%EOF
