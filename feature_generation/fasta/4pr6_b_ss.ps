%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCGGCAUGGUCCCAGCCUCCUCGCUGGCGCCGGCUGGGCAACACCAUUGCACUCCGGUGGCGAAUGGGAC\
) def
/coor [
[68.39128876 116.57409668]
[64.33417511 101.32685089]
[49.56205750 98.72212982]
[34.78994370 96.11740875]
[20.01782608 93.51268768]
[5.24570942 90.90795898]
[-4.07290983 92.52246857]
[-10.10794163 87.85392761]
[-24.75238228 84.60733795]
[-39.39682007 81.36074066]
[-54.04125977 78.11415100]
[-69.18897247 82.68113708]
[-79.93989563 72.37255859]
[-94.58434296 69.12596130]
[-109.22878265 65.87937164]
[-123.87322235 62.63277435]
[-138.51765442 59.38618088]
[-151.71052551 68.08813477]
[-167.17549133 64.83078003]
[-175.73747253 51.54665756]
[-172.31680298 36.11699295]
[-158.94288635 27.69593620]
[-143.55024719 31.27955055]
[-135.27107239 44.74174118]
[-120.62662506 47.98833466]
[-105.98218536 51.23492813]
[-91.33774567 54.48152542]
[-76.69330597 57.72811890]
[-62.59306335 52.92890930]
[-50.79466629 63.46970749]
[-36.15022659 66.71630096]
[-21.50578690 69.96289825]
[-6.86134720 73.20948792]
[7.85043240 76.13584900]
[22.62254906 78.74057007]
[37.39466476 81.34529114]
[52.16678238 83.95001221]
[66.93889618 86.55473328]
[74.64704132 74.87950897]
[86.25077057 67.06414795]
[99.96712494 64.30951691]
[113.68852997 67.03887177]
[125.30664062 74.83284760]
[133.03627014 86.49385071]
[135.68975830 100.23013306]
[150.33419800 103.47672272]
[164.97863770 106.72332001]
[179.62307739 109.96991730]
[194.26751709 113.21650696]
[208.97929382 116.14286041]
[223.75141907 118.74758911]
[238.57682800 121.02943420]
[253.44850159 122.98732758]
[268.38403320 116.21516418]
[281.55728149 125.98231506]
[279.41677856 142.24116516]
[264.16445923 148.26600647]
[251.49061584 137.85900879]
[236.61894226 135.90110779]
[229.35113525 138.22399902]
[221.14668274 133.51969910]
[206.37457275 130.91497803]
[199.01235962 132.91864014]
[191.02091980 127.86094666]
[176.37648010 124.61435699]
[161.73204041 121.36775970]
[147.08760071 118.12117004]
[132.44316101 114.87457275]
[122.86000824 127.40859985]
[108.80937195 134.58622742]
[93.03713226 135.00471497]
] def
/pairs [
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[8 33]
[9 32]
[10 31]
[11 30]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[45 68]
[46 67]
[47 66]
[48 65]
[49 64]
[50 62]
[51 61]
[52 59]
[53 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
