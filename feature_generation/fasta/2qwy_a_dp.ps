%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2qwy_a)
} def

/sequence { (\
GCGCGGCGAUUUAACCGUAUUGCAGUCGCGUGAUAAAUGUAGCUAAAAAGGA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.009315325 ubox
1 18 0.009080449 ubox
1 20 0.013698942 ubox
1 21 0.004897963 ubox
1 23 0.287762114 ubox
1 26 0.005102407 ubox
1 27 0.013661475 ubox
1 29 0.276981170 ubox
1 31 0.847773179 ubox
1 34 0.024932705 ubox
1 40 0.006805478 ubox
1 43 0.030913271 ubox
2 6 0.009256065 ubox
2 8 0.003170174 ubox
2 17 0.009363444 ubox
2 22 0.287830524 ubox
2 25 0.006181010 ubox
2 28 0.277293792 ubox
2 30 0.879031736 ubox
2 32 0.172784119 ubox
2 39 0.006784135 ubox
2 42 0.030579458 ubox
2 50 0.008219078 ubox
2 51 0.009395195 ubox
3 16 0.009173055 ubox
3 18 0.286100197 ubox
3 20 0.008872958 ubox
3 21 0.112602023 ubox
3 23 0.050601724 ubox
3 26 0.061644658 ubox
3 27 0.271412023 ubox
3 29 0.880436223 ubox
3 31 0.174632040 ubox
3 38 0.004655136 ubox
3 40 0.012682167 ubox
3 43 0.027104502 ubox
4 17 0.307923216 ubox
4 22 0.050619827 ubox
4 25 0.261502347 ubox
4 28 0.880412426 ubox
4 30 0.174484087 ubox
4 32 0.014809130 ubox
4 39 0.013512105 ubox
4 42 0.027125117 ubox
4 50 0.005363336 ubox
4 51 0.004955460 ubox
5 15 0.008936372 ubox
5 16 0.308149114 ubox
5 20 0.006421877 ubox
5 21 0.043810216 ubox
5 23 0.009049159 ubox
5 26 0.012663110 ubox
5 27 0.878697281 ubox
5 29 0.124470438 ubox
5 31 0.013332064 ubox
5 38 0.012456543 ubox
5 44 0.007322681 ubox
6 15 0.307874070 ubox
6 18 0.096431553 ubox
6 20 0.013902138 ubox
6 23 0.671885801 ubox
6 26 0.640214719 ubox
6 29 0.126543838 ubox
6 40 0.023590400 ubox
6 43 0.007680299 ubox
7 17 0.099600263 ubox
7 22 0.678199389 ubox
7 25 0.634361373 ubox
7 28 0.175982572 ubox
7 39 0.024730945 ubox
7 42 0.007668708 ubox
8 12 0.008511915 ubox
8 15 0.017880841 ubox
8 16 0.100277558 ubox
8 18 0.003644032 ubox
8 20 0.007292283 ubox
8 21 0.708954866 ubox
8 23 0.160574512 ubox
8 27 0.176300617 ubox
8 38 0.015129603 ubox
9 18 0.020135817 ubox
9 20 0.710290971 ubox
9 21 0.049283529 ubox
9 26 0.176160768 ubox
9 38 0.021648628 ubox
10 14 0.013403954 ubox
10 17 0.021677421 ubox
10 19 0.707467045 ubox
10 22 0.096553672 ubox
10 24 0.023422787 ubox
10 25 0.174954473 ubox
10 36 0.003698774 ubox
10 37 0.025990349 ubox
11 17 0.044129000 ubox
11 19 0.058454356 ubox
11 22 0.049132547 ubox
11 24 0.164188688 ubox
11 25 0.007097257 ubox
11 35 0.003493965 ubox
11 36 0.026107915 ubox
12 17 0.111990360 ubox
12 19 0.226001390 ubox
12 22 0.187200934 ubox
12 24 0.011505877 ubox
12 35 0.025975434 ubox
13 18 0.213373922 ubox
13 20 0.077472041 ubox
13 21 0.193066375 ubox
13 34 0.025281939 ubox
14 18 0.033032755 ubox
14 20 0.172408425 ubox
14 21 0.056740763 ubox
14 26 0.005353460 ubox
14 31 0.008867258 ubox
15 22 0.041042251 ubox
15 25 0.007097220 ubox
15 30 0.009106334 ubox
15 32 0.022956147 ubox
15 51 0.013127556 ubox
16 22 0.035669245 ubox
16 25 0.006031707 ubox
16 28 0.009096718 ubox
16 30 0.023842581 ubox
16 32 0.003735771 ubox
16 50 0.013181229 ubox
16 51 0.003638569 ubox
17 21 0.022401215 ubox
17 23 0.038129899 ubox
17 27 0.009074027 ubox
17 29 0.023877149 ubox
17 31 0.003654412 ubox
18 22 0.035786434 ubox
18 24 0.004178663 ubox
18 28 0.023418560 ubox
18 32 0.003659642 ubox
18 35 0.009385934 ubox
18 49 0.004731381 ubox
18 50 0.003387156 ubox
19 26 0.012918091 ubox
19 31 0.004534234 ubox
19 34 0.014153471 ubox
19 44 0.003736910 ubox
20 24 0.004117580 ubox
20 25 0.012360888 ubox
20 30 0.003229719 ubox
20 33 0.014708334 ubox
20 42 0.018659339 ubox
20 45 0.004002872 ubox
20 46 0.014039541 ubox
20 47 0.027645898 ubox
20 48 0.055058452 ubox
20 49 0.021455699 ubox
20 50 0.008132808 ubox
20 51 0.003403461 ubox
20 52 0.003455419 ubox
21 30 0.011439193 ubox
21 32 0.014634284 ubox
21 41 0.025955963 ubox
21 45 0.014775166 ubox
21 46 0.031340429 ubox
21 47 0.062912189 ubox
21 48 0.024127140 ubox
21 49 0.010351817 ubox
21 50 0.005019233 ubox
21 51 0.003942795 ubox
21 52 0.005176778 ubox
22 29 0.015574800 ubox
22 31 0.014634008 ubox
22 40 0.026868139 ubox
22 43 0.011301500 ubox
22 44 0.007518416 ubox
23 28 0.015576961 ubox
23 30 0.014661620 ubox
23 32 0.003304406 ubox
23 39 0.026929780 ubox
23 42 0.011313582 ubox
23 50 0.008416449 ubox
23 51 0.004440918 ubox
24 31 0.003262086 ubox
24 38 0.026596811 ubox
24 44 0.317574827 ubox
25 34 0.028867346 ubox
25 43 0.333146187 ubox
26 33 0.029320710 ubox
26 41 0.007633907 ubox
26 42 0.329596659 ubox
27 32 0.029394457 ubox
27 42 0.023587760 ubox
27 51 0.003302615 ubox
28 40 0.333897228 ubox
28 43 0.019862648 ubox
29 39 0.337100831 ubox
29 42 0.019876074 ubox
30 38 0.338135823 ubox
30 43 0.088204187 ubox
31 35 0.004041044 ubox
31 36 0.023520432 ubox
31 37 0.337114004 ubox
31 39 0.005026544 ubox
31 41 0.012569102 ubox
31 42 0.086261404 ubox
31 45 0.009421799 ubox
31 46 0.005847274 ubox
31 47 0.006026424 ubox
31 48 0.007281488 ubox
31 49 0.005382260 ubox
31 50 0.003395605 ubox
31 51 0.003549972 ubox
32 38 0.010260778 ubox
32 40 0.016522074 ubox
32 43 0.053119446 ubox
32 44 0.013233837 ubox
33 38 0.019811377 ubox
33 40 0.088447486 ubox
33 44 0.009967937 ubox
34 39 0.087641639 ubox
34 41 0.062800015 ubox
34 42 0.015566380 ubox
34 45 0.055615370 ubox
34 46 0.008927663 ubox
34 47 0.008023129 ubox
34 48 0.007543875 ubox
34 49 0.007267430 ubox
34 50 0.005963372 ubox
34 51 0.006207379 ubox
34 52 0.005613349 ubox
35 40 0.062853769 ubox
35 44 0.058399080 ubox
36 40 0.012066609 ubox
36 44 0.015554558 ubox
37 44 0.021279498 ubox
38 42 0.008981095 ubox
38 45 0.038330414 ubox
38 46 0.028845335 ubox
38 47 0.043344130 ubox
38 48 0.021255985 ubox
38 49 0.019830504 ubox
38 50 0.009826945 ubox
38 51 0.023915122 ubox
38 52 0.015112424 ubox
39 43 0.029475045 ubox
39 44 0.037055445 ubox
40 45 0.015631811 ubox
40 46 0.016935262 ubox
40 47 0.021455700 ubox
40 48 0.013054579 ubox
40 49 0.029526819 ubox
40 50 0.014236865 ubox
40 51 0.011648196 ubox
40 52 0.014758838 ubox
43 50 0.249886532 ubox
43 51 0.206710117 ubox
44 48 0.012576956 ubox
44 49 0.239008037 ubox
44 50 0.202827382 ubox
44 51 0.026969849 ubox
44 52 0.007363173 ubox
1 31 0.9500000 lbox
2 30 0.9500000 lbox
3 29 0.9500000 lbox
4 28 0.9500000 lbox
5 27 0.9500000 lbox
6 23 0.9500000 lbox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
showpage
end
%%EOF
