%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4rum_a)
} def

/sequence { (\
GGAACUGAGCAGGCAAUGACCAGAGCGGUCAUGCAGCCGGGCUGCGAAAGCGGCAACAGAUGAUUACACGCACAUCUGUGGGACAGUUCCCAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.004692931 ubox
1 38 0.003698712 ubox
1 57 0.005994012 ubox
1 77 0.004030457 ubox
1 89 0.004167116 ubox
1 90 0.906546413 ubox
1 91 0.123300571 ubox
1 93 0.028889655 ubox
2 37 0.003585641 ubox
2 76 0.004238094 ubox
2 89 0.913579895 ubox
2 90 0.087989013 ubox
2 91 0.004883975 ubox
2 93 0.019441912 ubox
3 75 0.003947409 ubox
3 88 0.917337663 ubox
4 87 0.917170206 ubox
5 39 0.009206818 ubox
5 40 0.394942268 ubox
5 41 0.004102097 ubox
5 86 0.917328469 ubox
6 39 0.396251385 ubox
6 40 0.011484105 ubox
6 85 0.916476038 ubox
7 38 0.399770004 ubox
7 84 0.912710902 ubox
8 43 0.051992742 ubox
9 34 0.017394895 ubox
9 37 0.628882082 ubox
9 38 0.049797941 ubox
9 42 0.056981138 ubox
9 54 0.009943207 ubox
9 79 0.004692056 ubox
9 84 0.008191418 ubox
10 33 0.017408853 ubox
10 36 0.630520071 ubox
10 39 0.121683232 ubox
10 40 0.251215439 ubox
10 41 0.057455217 ubox
10 53 0.009946738 ubox
10 78 0.004586836 ubox
10 80 0.129803971 ubox
10 81 0.582848276 ubox
10 82 0.077520590 ubox
11 32 0.014449466 ubox
11 77 0.003489272 ubox
11 79 0.060808022 ubox
12 21 0.005343465 ubox
12 34 0.037853144 ubox
12 37 0.019006108 ubox
12 38 0.744125566 ubox
12 79 0.006916806 ubox
13 20 0.005330373 ubox
13 34 0.664539659 ubox
13 37 0.745085349 ubox
13 38 0.003528345 ubox
13 51 0.010274704 ubox
14 33 0.665346833 ubox
14 36 0.743244984 ubox
14 50 0.010294630 ubox
15 32 0.470636450 ubox
16 32 0.866822174 ubox
17 31 0.996621445 ubox
17 33 0.006647195 ubox
18 30 0.999949186 ubox
19 29 0.999851812 ubox
20 28 0.999957620 ubox
21 27 0.999319023 ubox
21 28 0.003716899 ubox
26 39 0.005363125 ubox
27 38 0.005542728 ubox
28 37 0.005542882 ubox
29 36 0.005261274 ubox
32 46 0.003442479 ubox
33 45 0.014344386 ubox
34 39 0.004836080 ubox
34 40 0.004103526 ubox
34 44 0.014375168 ubox
35 43 0.014785659 ubox
36 42 0.014952192 ubox
36 54 0.063721909 ubox
36 84 0.003248566 ubox
37 41 0.014865254 ubox
37 53 0.063829362 ubox
37 81 0.040549379 ubox
37 82 0.039829111 ubox
38 52 0.063630768 ubox
38 59 0.012017787 ubox
38 80 0.042910768 ubox
38 81 0.042304157 ubox
38 82 0.013970175 ubox
39 51 0.039697254 ubox
39 54 0.007323519 ubox
39 57 0.022606648 ubox
39 79 0.011924822 ubox
40 51 0.007346299 ubox
40 54 0.040771363 ubox
40 57 0.005796956 ubox
40 79 0.010892063 ubox
41 51 0.051179614 ubox
41 54 0.993025809 ubox
42 46 0.004587669 ubox
42 50 0.056152479 ubox
42 52 0.006995076 ubox
42 53 0.995972301 ubox
43 48 0.005897719 ubox
43 49 0.055932246 ubox
43 52 0.995357945 ubox
43 55 0.016150072 ubox
44 51 0.997191539 ubox
44 54 0.030218469 ubox
45 50 0.996834154 ubox
45 52 0.010214104 ubox
45 53 0.029770642 ubox
46 51 0.011605177 ubox
54 80 0.038462559 ubox
54 81 0.037344640 ubox
54 82 0.018218653 ubox
55 65 0.003293570 ubox
55 79 0.043590285 ubox
56 64 0.003417645 ubox
56 79 0.949841330 ubox
57 62 0.008636276 ubox
57 78 0.994315861 ubox
57 80 0.006711848 ubox
58 77 0.997829018 ubox
58 79 0.005011185 ubox
59 65 0.004131896 ubox
59 67 0.006140571 ubox
59 69 0.003278909 ubox
59 76 0.998452270 ubox
60 64 0.003664631 ubox
60 65 0.005322184 ubox
60 75 0.998088112 ubox
61 68 0.017483926 ubox
61 70 0.013586216 ubox
61 72 0.049866089 ubox
61 74 0.996220390 ubox
62 67 0.020248215 ubox
62 69 0.020756337 ubox
62 71 0.061565807 ubox
62 73 0.992773979 ubox
62 76 0.004212061 ubox
63 75 0.004237582 ubox
64 68 0.016827496 ubox
64 70 0.072088175 ubox
64 72 0.178578030 ubox
64 74 0.004163057 ubox
64 81 0.003810891 ubox
64 83 0.007940920 ubox
65 70 0.153544675 ubox
65 72 0.084848873 ubox
65 80 0.005881721 ubox
65 82 0.005850748 ubox
66 79 0.006171011 ubox
67 78 0.006212921 ubox
67 80 0.021966671 ubox
67 81 0.010361409 ubox
67 82 0.007505220 ubox
68 77 0.006065432 ubox
68 79 0.022015745 ubox
69 78 0.022022084 ubox
69 80 0.024468848 ubox
69 81 0.007285729 ubox
69 82 0.039405883 ubox
70 77 0.016725435 ubox
70 79 0.024681477 ubox
71 78 0.024703485 ubox
71 80 0.041784489 ubox
72 77 0.021049623 ubox
72 79 0.041778106 ubox
73 78 0.041705435 ubox
78 93 0.085861834 ubox
79 83 0.003295768 ubox
79 92 0.175937996 ubox
80 84 0.008182220 ubox
80 89 0.004071492 ubox
80 90 0.014865812 ubox
80 91 0.396183407 ubox
81 88 0.003823473 ubox
81 89 0.015610235 ubox
81 90 0.396556622 ubox
81 91 0.006317958 ubox
82 88 0.015103280 ubox
82 89 0.396433033 ubox
82 90 0.006239019 ubox
83 87 0.016881389 ubox
83 88 0.357005810 ubox
1 90 0.9500000 lbox
2 89 0.9500000 lbox
3 88 0.9500000 lbox
4 87 0.9500000 lbox
5 86 0.9500000 lbox
6 85 0.9500000 lbox
7 84 0.9500000 lbox
10 81 0.9500000 lbox
12 38 0.9500000 lbox
13 37 0.9500000 lbox
14 36 0.9500000 lbox
16 32 0.9500000 lbox
17 31 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
56 79 0.9500000 lbox
57 78 0.9500000 lbox
58 77 0.9500000 lbox
59 76 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
62 73 0.9500000 lbox
showpage
end
%%EOF
