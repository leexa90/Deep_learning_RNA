%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3j7a_7)
} def

/sequence { (\
GGUAAUUGGCGCAGUUGGUUAGCGCGCGGGUCUCAUAAUCCCGAGGUCGUGAGUUCGAUCCUCACAUUACCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 23 0.005016674 ubox
1 34 0.004970197 ubox
1 65 0.003354378 ubox
1 70 0.004000476 ubox
1 71 0.985686836 ubox
1 72 0.142884265 ubox
2 33 0.004446631 ubox
2 34 0.010918276 ubox
2 65 0.005586241 ubox
2 70 0.993327560 ubox
2 71 0.107800761 ubox
3 21 0.005087505 ubox
3 64 0.005349145 ubox
3 69 0.997287230 ubox
4 20 0.005137637 ubox
4 67 0.008676852 ubox
4 68 0.994291163 ubox
5 19 0.005156784 ubox
5 31 0.030951460 ubox
5 67 0.962390855 ubox
5 68 0.043550299 ubox
6 18 0.005155214 ubox
6 29 0.004289974 ubox
6 30 0.034970633 ubox
6 64 0.012590490 ubox
6 66 0.786874665 ubox
7 17 0.005094782 ubox
7 21 0.006193446 ubox
7 26 0.013595848 ubox
7 28 0.020436576 ubox
7 29 0.052215280 ubox
7 64 0.151374835 ubox
7 66 0.530693773 ubox
7 73 0.003956487 ubox
8 16 0.005125016 ubox
8 20 0.006550234 ubox
8 25 0.013557845 ubox
8 27 0.118232266 ubox
8 42 0.006151653 ubox
8 61 0.005231843 ubox
8 62 0.005447315 ubox
8 63 0.137542742 ubox
8 65 0.726688251 ubox
8 67 0.003976326 ubox
8 72 0.005014644 ubox
9 15 0.005226492 ubox
9 19 0.006780789 ubox
9 23 0.006576643 ubox
9 25 0.352887095 ubox
9 27 0.933513654 ubox
9 61 0.005387905 ubox
9 62 0.015577244 ubox
9 63 0.006460940 ubox
9 65 0.005252969 ubox
10 14 0.005201336 ubox
10 18 0.006794783 ubox
10 22 0.006581721 ubox
10 24 0.353499122 ubox
10 26 0.935122177 ubox
10 28 0.006903741 ubox
11 19 0.003376806 ubox
11 23 0.353521937 ubox
11 25 0.935136868 ubox
11 27 0.013003019 ubox
11 60 0.004984245 ubox
11 61 0.005021361 ubox
12 17 0.003308751 ubox
12 18 0.004011397 ubox
12 22 0.353198758 ubox
12 24 0.932320465 ubox
12 26 0.012999149 ubox
13 19 0.030886686 ubox
13 20 0.117034132 ubox
14 19 0.084689499 ubox
14 20 0.069644092 ubox
14 23 0.891068298 ubox
14 25 0.006095237 ubox
14 59 0.009817309 ubox
15 21 0.173194986 ubox
15 22 0.881930189 ubox
15 24 0.005346531 ubox
15 58 0.010386044 ubox
16 21 0.734392288 ubox
16 22 0.039349654 ubox
16 24 0.006806178 ubox
16 57 0.010420306 ubox
17 23 0.043400589 ubox
17 56 0.010417872 ubox
17 60 0.003498685 ubox
18 23 0.013812591 ubox
18 55 0.009619493 ubox
18 59 0.003581468 ubox
19 58 0.003693648 ubox
20 57 0.003640559 ubox
21 55 0.004813537 ubox
22 50 0.007535693 ubox
22 54 0.006604555 ubox
23 46 0.003314743 ubox
23 49 0.007611964 ubox
23 51 0.004460602 ubox
23 53 0.006627555 ubox
24 47 0.003800480 ubox
24 48 0.007517257 ubox
24 50 0.004474545 ubox
25 43 0.003567021 ubox
25 45 0.005972891 ubox
25 46 0.007887335 ubox
25 49 0.004477301 ubox
25 51 0.006664600 ubox
26 42 0.089944363 ubox
26 48 0.006043416 ubox
26 50 0.007395187 ubox
26 63 0.008689941 ubox
26 65 0.003819183 ubox
27 43 0.165932983 ubox
27 49 0.007544664 ubox
27 57 0.015091435 ubox
28 34 0.008858932 ubox
28 40 0.007301689 ubox
28 41 0.356527596 ubox
28 42 0.926256050 ubox
28 48 0.012877613 ubox
28 56 0.017631296 ubox
28 61 0.040476073 ubox
28 62 0.003200545 ubox
28 72 0.020253466 ubox
29 33 0.005770116 ubox
29 34 0.006893420 ubox
29 39 0.006814342 ubox
29 40 0.357890775 ubox
29 41 0.926954371 ubox
29 42 0.039413798 ubox
29 47 0.011580401 ubox
29 48 0.062061234 ubox
29 55 0.017548249 ubox
29 56 0.007118394 ubox
29 60 0.040524062 ubox
29 61 0.003526363 ubox
29 71 0.020275851 ubox
30 34 0.003445959 ubox
30 36 0.005676633 ubox
30 39 0.356318036 ubox
30 40 0.925446462 ubox
30 41 0.039230734 ubox
30 47 0.059688759 ubox
30 48 0.026424759 ubox
30 54 0.016780622 ubox
30 55 0.005515942 ubox
30 59 0.040384287 ubox
30 60 0.003503934 ubox
30 70 0.020261825 ubox
31 35 0.014300975 ubox
31 37 0.031498947 ubox
31 38 0.386121790 ubox
31 46 0.069214402 ubox
31 58 0.040312603 ubox
31 69 0.017501868 ubox
32 45 0.078430372 ubox
32 53 0.031365242 ubox
32 57 0.032364170 ubox
33 37 0.163163920 ubox
33 38 0.092429679 ubox
33 44 0.078539221 ubox
33 52 0.043843582 ubox
34 43 0.078549490 ubox
34 51 0.043990861 ubox
35 39 0.013175524 ubox
35 50 0.043947895 ubox
35 54 0.003820202 ubox
36 49 0.042300809 ubox
36 53 0.003692890 ubox
36 69 0.009482406 ubox
37 68 0.015004729 ubox
38 47 0.041620275 ubox
38 67 0.015065247 ubox
38 68 0.003284958 ubox
39 46 0.041077819 ubox
39 52 0.009429862 ubox
39 66 0.014138323 ubox
40 45 0.040480158 ubox
40 46 0.014911332 ubox
40 51 0.009501227 ubox
41 45 0.014849860 ubox
42 49 0.009898340 ubox
42 57 0.004143412 ubox
43 48 0.014178943 ubox
43 56 0.004581855 ubox
43 61 0.056737379 ubox
43 62 0.011567858 ubox
43 63 0.974544362 ubox
43 65 0.007229771 ubox
43 72 0.008281031 ubox
44 55 0.004577828 ubox
44 62 0.982760453 ubox
45 54 0.004493689 ubox
45 60 0.174402627 ubox
45 61 0.977004752 ubox
45 68 0.003986672 ubox
45 71 0.016932222 ubox
46 59 0.210447254 ubox
46 60 0.969840175 ubox
46 67 0.008497973 ubox
46 70 0.017079432 ubox
47 58 0.980988809 ubox
47 66 0.009136360 ubox
47 69 0.016933289 ubox
48 57 0.992108920 ubox
49 55 0.009964337 ubox
49 56 0.984865974 ubox
49 59 0.009177604 ubox
49 65 0.110669707 ubox
50 57 0.015571619 ubox
50 58 0.009879885 ubox
50 64 0.110988983 ubox
51 55 0.027882909 ubox
51 56 0.021951921 ubox
51 63 0.111160206 ubox
52 62 0.111107801 ubox
53 60 0.013404745 ubox
53 61 0.109887315 ubox
54 58 0.004071490 ubox
57 63 0.004060020 ubox
58 62 0.003554633 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
9 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
14 23 0.9500000 lbox
15 22 0.9500000 lbox
16 21 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
43 63 0.9500000 lbox
44 62 0.9500000 lbox
45 61 0.9500000 lbox
46 60 0.9500000 lbox
47 58 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
showpage
end
%%EOF
