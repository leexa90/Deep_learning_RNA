%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:34 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCAUCGAAUCGCCACCUACAAGACUGGAGCUUGCUCCCUCGAAGGCGCCAAGUAUAUUCAU\
) def
/coor [
[113.85796356 285.33856201]
[98.51982117 282.98883057]
[87.51584625 272.04846191]
[85.07729340 256.72418213]
[92.14182281 242.90855408]
[105.99298859 235.91392517]
[108.26440430 221.08689880]
[110.53582764 206.25987244]
[112.80724335 191.43284607]
[112.04750061 176.45210266]
[108.28771210 161.93093872]
[104.52792358 147.40979004]
[100.76814270 132.88862610]
[90.19160461 131.40139771]
[80.64893341 126.60428619]
[73.14595795 119.00295258]
[68.47353363 109.39861298]
[67.12416840 98.80360413]
[69.24007416 88.33470917]
[74.59824371 79.09539795]
[82.63388062 72.05953217]
[92.50000000 67.96873474]
[92.50000000 52.96873474]
[83.82035065 43.08706284]
[84.35327148 30.35200500]
[93.24372864 21.79408836]
[94.00347137 6.81334114]
[94.76320648 -8.16740608]
[95.52294159 -23.14815331]
[87.57559204 -37.49289703]
[96.25557709 -51.40655518]
[112.63367462 -50.57595062]
[119.86150360 -35.85553741]
[110.50369263 -22.38841629]
[109.74395752 -7.40766907]
[108.98421478 7.57307863]
[108.22447968 22.55382729]
[117.11957550 37.48366928]
[107.50000000 52.96873474]
[107.50000000 67.96873474]
[124.43232727 77.97017670]
[132.63398743 95.84376526]
[129.17420959 115.20254517]
[115.28929901 129.12884521]
[119.04908752 143.64999390]
[122.80886841 158.17115784]
[126.56865692 172.69230652]
[136.00140381 161.02940369]
[150.38357544 156.76875305]
[164.64689636 161.41177368]
[173.76496887 173.32231140]
[174.52461243 188.30305481]
[166.65811157 201.07482910]
[152.93762207 207.13685608]
[138.19822693 204.35287476]
[127.63426208 193.70426941]
[125.36284637 208.53128052]
[123.09143066 223.35830688]
[120.82001495 238.18533325]
[131.94203186 249.00570679]
[134.54667664 264.30261230]
] def
/pairs [
[6 59]
[7 58]
[8 57]
[9 56]
[10 47]
[11 46]
[12 45]
[13 44]
[22 40]
[23 39]
[26 37]
[27 36]
[28 35]
[29 34]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
