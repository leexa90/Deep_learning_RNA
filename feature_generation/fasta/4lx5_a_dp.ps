%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4lx5_a)
} def

/sequence { (\
GGCUUCAUAUAAUCCGAAUGAUAUGGUUUCGGAGCUUCCACCAAGAGCCUUAAACUCUUGAUUAUGAAGUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003722497 ubox
1 70 0.009237870 ubox
1 71 0.939831759 ubox
2 70 0.994874844 ubox
2 71 0.026839468 ubox
3 69 0.999567057 ubox
4 68 0.999067140 ubox
5 67 0.999280194 ubox
6 66 0.999581309 ubox
7 37 0.003401017 ubox
7 62 0.003820594 ubox
7 65 0.996448857 ubox
8 40 0.003980646 ubox
8 61 0.006688670 ubox
8 64 0.987991441 ubox
8 66 0.007942004 ubox
9 36 0.023201297 ubox
9 37 0.056502890 ubox
9 62 0.138255556 ubox
9 63 0.923265992 ubox
9 65 0.033845255 ubox
10 23 0.003783095 ubox
10 33 0.006387226 ubox
10 34 0.035587723 ubox
10 40 0.013024471 ubox
10 60 0.010894251 ubox
10 61 0.186409101 ubox
10 64 0.061940802 ubox
11 28 0.009571467 ubox
11 29 0.013709389 ubox
11 36 0.085638295 ubox
11 37 0.077880602 ubox
11 59 0.011350951 ubox
11 62 0.089766905 ubox
11 63 0.076357295 ubox
12 22 0.018523354 ubox
12 27 0.010774220 ubox
12 28 0.014612458 ubox
12 36 0.079940602 ubox
12 37 0.027702374 ubox
12 58 0.009358255 ubox
12 59 0.005994931 ubox
12 62 0.089343597 ubox
12 63 0.010664727 ubox
13 21 0.019478996 ubox
13 26 0.007669096 ubox
13 33 0.932448734 ubox
13 34 0.018105291 ubox
13 61 0.068952241 ubox
14 20 0.019520194 ubox
14 25 0.007604878 ubox
14 26 0.027375219 ubox
14 31 0.003315669 ubox
14 32 0.997514796 ubox
14 60 0.035732981 ubox
15 20 0.006374172 ubox
15 25 0.027564931 ubox
15 26 0.004136406 ubox
15 31 0.997861662 ubox
15 60 0.010506339 ubox
16 24 0.020565202 ubox
16 29 0.049696075 ubox
16 30 0.996961806 ubox
16 38 0.003291827 ubox
16 57 0.018029673 ubox
16 58 0.006989899 ubox
16 59 0.013400714 ubox
17 22 0.006536838 ubox
17 24 0.005525115 ubox
17 28 0.259786849 ubox
17 29 0.960604199 ubox
17 37 0.003294588 ubox
17 56 0.017207321 ubox
17 58 0.012885167 ubox
17 59 0.005191675 ubox
18 22 0.006152329 ubox
18 24 0.015633742 ubox
18 27 0.364917209 ubox
18 28 0.895579860 ubox
18 29 0.020271424 ubox
18 56 0.003522348 ubox
18 58 0.005745370 ubox
18 59 0.003384018 ubox
18 62 0.004861717 ubox
19 23 0.018260758 ubox
19 25 0.043344720 ubox
19 26 0.443167389 ubox
19 31 0.003378318 ubox
19 54 0.009547339 ubox
19 61 0.004865074 ubox
20 24 0.032138062 ubox
20 27 0.079564851 ubox
20 28 0.108162137 ubox
20 29 0.019394890 ubox
20 30 0.015203311 ubox
20 55 0.009467356 ubox
20 57 0.012039308 ubox
20 59 0.006910949 ubox
21 27 0.136180219 ubox
21 28 0.036321702 ubox
21 29 0.015328659 ubox
21 56 0.010146930 ubox
21 58 0.006877111 ubox
21 59 0.004434576 ubox
22 26 0.128440536 ubox
22 52 0.018622174 ubox
23 27 0.011967343 ubox
23 28 0.013862173 ubox
23 50 0.004096867 ubox
23 51 0.018846295 ubox
23 58 0.004143665 ubox
23 59 0.003555776 ubox
24 40 0.009311510 ubox
24 43 0.009924366 ubox
25 30 0.005798259 ubox
25 36 0.007192658 ubox
25 39 0.010735018 ubox
25 42 0.014767926 ubox
25 49 0.029473021 ubox
25 56 0.017750077 ubox
25 57 0.005528096 ubox
26 35 0.007739396 ubox
26 38 0.010705993 ubox
26 41 0.015321369 ubox
26 48 0.029513271 ubox
26 55 0.021547490 ubox
27 34 0.007686539 ubox
27 40 0.015089559 ubox
27 46 0.004118602 ubox
27 47 0.028876954 ubox
27 54 0.021562189 ubox
28 33 0.006234636 ubox
28 45 0.004818782 ubox
28 46 0.028020843 ubox
28 47 0.004603755 ubox
28 53 0.021486776 ubox
29 44 0.005851967 ubox
29 45 0.026509164 ubox
29 46 0.006503126 ubox
29 52 0.020339586 ubox
30 45 0.007938138 ubox
31 39 0.051990696 ubox
31 41 0.003762323 ubox
31 42 0.025704420 ubox
31 49 0.005329681 ubox
31 50 0.020325666 ubox
32 38 0.052578772 ubox
32 39 0.007407963 ubox
32 41 0.025948899 ubox
32 42 0.007864035 ubox
32 48 0.005343694 ubox
32 49 0.020873575 ubox
33 37 0.046287629 ubox
33 50 0.004411435 ubox
34 38 0.056509621 ubox
34 39 0.127273142 ubox
34 41 0.137233419 ubox
34 42 0.007168688 ubox
34 48 0.052651539 ubox
34 49 0.004915707 ubox
34 70 0.025344103 ubox
35 45 0.006271660 ubox
35 47 0.052808129 ubox
35 69 0.026389253 ubox
36 40 0.022105315 ubox
36 44 0.006319357 ubox
36 46 0.050092996 ubox
36 47 0.005157448 ubox
36 61 0.009943918 ubox
36 68 0.026389013 ubox
37 43 0.006016294 ubox
37 44 0.003231102 ubox
37 45 0.045818668 ubox
37 46 0.017067330 ubox
37 60 0.003554427 ubox
37 61 0.021290022 ubox
37 67 0.026391287 ubox
38 45 0.023373814 ubox
38 60 0.018073090 ubox
38 66 0.026216317 ubox
39 45 0.004555355 ubox
39 60 0.018200595 ubox
40 59 0.015910346 ubox
40 62 0.116439818 ubox
40 63 0.011662910 ubox
40 65 0.003702351 ubox
41 60 0.033122826 ubox
42 60 0.994185621 ubox
43 59 0.996802882 ubox
44 58 0.997479272 ubox
45 57 0.998098264 ubox
46 56 0.997722118 ubox
47 55 0.994618539 ubox
49 60 0.007339609 ubox
50 54 0.030647924 ubox
50 61 0.023969655 ubox
51 60 0.025966373 ubox
52 59 0.025862374 ubox
53 58 0.022573575 ubox
53 62 0.003581728 ubox
55 60 0.011576995 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
showpage
end
%%EOF
