%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCAGUAGGAACACUAUACUACUGGAUAAUCAAAGACAAAUCUGCCCGAAGGGCUUGAGAACAUCGAAACACGAUGCAGAGGUGGCAGCCUCCGGUGGGUUAAAACCCAACGUUCUCAACAAUAGUGA\
) def
/coor [
[-4.27439880 179.19860840]
[-12.91152191 191.46238708]
[-21.54864502 203.72615051]
[-30.18576813 215.98992920]
[-38.82289124 228.25369263]
[-47.46001434 240.51747131]
[-56.09713745 252.78125000]
[-49.57144928 266.68487549]
[-50.88784027 281.98724365]
[-59.69221497 294.57211304]
[-73.61623383 301.05416870]
[-88.91440582 299.68981934]
[-101.47160339 290.84603882]
[-107.91000366 276.90179443]
[-106.49770355 261.60797119]
[-97.61460876 249.07855225]
[-83.65023041 242.68388367]
[-68.36090851 244.14411926]
[-59.72378540 231.88034058]
[-51.08666229 219.61657715]
[-42.44953918 207.35279846]
[-33.81241608 195.08903503]
[-25.17529297 182.82525635]
[-16.53817177 170.56149292]
[-29.99752426 177.18310547]
[-43.45687866 183.80471802]
[-52.21210098 195.98445129]
[-64.59169006 204.45474243]
[-79.11580658 208.20306396]
[-94.04827881 206.78135681]
[-107.60411072 200.35954285]
[-118.16284943 189.70530701]
[-124.46234894 176.09220886]
[-125.74955750 161.14753723]
[-121.87062073 146.65776062]
[-113.28920746 134.35493469]
[-101.03113556 125.70973206]
[-86.56169891 121.75556946]
[-71.61054230 122.96512604]
[-57.96490860 129.19381714]
[-47.25510025 139.69827271]
[-32.86185455 143.92135620]
[-18.46861076 148.14445496]
[-29.07521248 137.53785706]
[-39.68181229 126.93125153]
[-50.28841400 116.32464600]
[-65.76377869 109.40010071]
[-63.39385223 92.61260986]
[-46.60636520 90.24268341]
[-39.68181229 105.71804810]
[-29.07521248 116.32464600]
[-18.46861076 126.93125153]
[-7.86200857 137.53785706]
[6.97563887 139.73881531]
[20.20445824 132.66786194]
[33.43327713 125.59690857]
[46.66209412 118.52595520]
[59.89091492 111.45500183]
[73.11973572 104.38405609]
[86.34855652 97.31310272]
[95.28404236 85.26499176]
[98.21039581 70.55320740]
[101.13674927 55.84143066]
[104.06311035 41.12965012]
[106.98946381 26.41787148]
[99.30783844 12.33340645]
[105.66265869 -2.39737105]
[121.17904663 -6.47426891]
[133.95416260 3.23016000]
[134.18803406 19.27150917]
[121.70124054 29.34422684]
[118.77488708 44.05600739]
[115.84853363 58.76778412]
[112.92217255 73.47956085]
[109.99581909 88.19134521]
[116.18024445 92.43433380]
[128.54908752 100.92031097]
[134.73350525 105.16329956]
[147.40631104 97.13833618]
[160.07910156 89.11337280]
[172.75190735 81.08840179]
[185.42471313 73.06343842]
[192.55322266 58.29467773]
[208.92536926 57.35377884]
[217.69886780 71.20865631]
[209.84831238 85.60660553]
[193.44967651 85.73624420]
[180.77687073 93.76120758]
[168.10406494 101.78617096]
[155.43127441 109.81113434]
[142.75846863 117.83609772]
[144.95942688 132.67375183]
[159.41606140 136.67443848]
[174.77996826 132.89810181]
[184.98257446 143.74964905]
[199.43922424 147.75033569]
[213.89585876 151.75103760]
[228.35250854 155.75172424]
[242.80914307 159.75241089]
[258.53927612 155.11619568]
[270.23129272 166.61528015]
[265.85745239 182.42037964]
[249.91716003 186.27258301]
[238.80845642 174.20906067]
[224.35180664 170.20835876]
[209.89517212 166.20767212]
[195.43852234 162.20698547]
[180.98188782 158.20628357]
[166.65200806 162.26878357]
[155.41537476 151.13108826]
[140.95872498 147.13038635]
[93.41950226 110.54192352]
[80.19068146 117.61286926]
[66.96186829 124.68382263]
[53.73304749 131.75477600]
[40.50422668 138.82572937]
[27.27540970 145.89668274]
[14.04658985 152.96762085]
[28.75635338 150.03115845]
[43.17856216 154.15423584]
[54.11341095 164.42210388]
[59.13481140 178.55665588]
[57.12868118 193.42190552]
[48.54011536 205.71972656]
[35.27463531 212.72166443]
[20.27541161 212.87419128]
[6.87027597 206.14349365]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[43 53]
[44 52]
[45 51]
[46 50]
[54 118]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[60 112]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[92 111]
[93 110]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
