%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1gax_c)
} def

/sequence { (\
GGGCGGCUAGCUCAGCGGAAGAGCGCUCGCCUCACACGCGAGAGGUCGUAGGUUCAAGUCCUACGCCGCCCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.999031164 ubox
1 73 0.003745887 ubox
1 74 0.018949893 ubox
2 70 0.999803285 ubox
2 71 0.003807724 ubox
2 73 0.018241205 ubox
2 74 0.003574492 ubox
3 69 0.999825522 ubox
3 71 0.010830271 ubox
3 73 0.003574498 ubox
4 68 0.999815596 ubox
5 27 0.004588672 ubox
5 31 0.005878578 ubox
5 67 0.999415197 ubox
5 70 0.017777000 ubox
6 16 0.006859617 ubox
6 24 0.004042118 ubox
6 26 0.010875916 ubox
6 28 0.003969905 ubox
6 30 0.006317997 ubox
6 46 0.004192649 ubox
6 66 0.999202440 ubox
6 69 0.017841765 ubox
7 15 0.007498583 ubox
7 18 0.008559838 ubox
7 23 0.004154547 ubox
7 25 0.014660853 ubox
7 29 0.007934250 ubox
7 44 0.007957557 ubox
7 45 0.011795709 ubox
7 65 0.987591227 ubox
7 68 0.017866203 ubox
8 14 0.012134097 ubox
8 15 0.006715996 ubox
8 17 0.015972401 ubox
8 18 0.033027234 ubox
8 19 0.019226246 ubox
8 20 0.013103461 ubox
8 22 0.004071739 ubox
8 25 0.040448365 ubox
8 29 0.003815185 ubox
8 43 0.008615510 ubox
8 44 0.013843789 ubox
8 45 0.015006241 ubox
8 63 0.075544694 ubox
8 65 0.008897633 ubox
9 27 0.090834786 ubox
9 46 0.103928960 ubox
9 62 0.075317735 ubox
10 16 0.191456632 ubox
10 24 0.756030751 ubox
10 26 0.097430536 ubox
10 27 0.003976623 ubox
10 28 0.073760005 ubox
10 30 0.056033041 ubox
10 46 0.024418388 ubox
10 47 0.013886002 ubox
10 59 0.024879341 ubox
10 60 0.011359723 ubox
10 61 0.067060140 ubox
10 62 0.008032856 ubox
10 64 0.006697984 ubox
11 15 0.190297007 ubox
11 17 0.029376799 ubox
11 18 0.058653507 ubox
11 21 0.009236448 ubox
11 23 0.757774037 ubox
11 25 0.097162956 ubox
11 29 0.062684342 ubox
11 42 0.076342102 ubox
11 44 0.147928375 ubox
11 45 0.021512339 ubox
11 58 0.041967781 ubox
12 17 0.053459672 ubox
12 18 0.019280404 ubox
12 19 0.102553439 ubox
12 20 0.009544527 ubox
12 22 0.757700332 ubox
12 29 0.032975920 ubox
12 41 0.076698579 ubox
12 43 0.148907351 ubox
12 44 0.014843645 ubox
12 56 0.009035086 ubox
12 57 0.040275972 ubox
12 58 0.004404967 ubox
13 17 0.023555107 ubox
13 18 0.107888276 ubox
13 21 0.757174784 ubox
13 23 0.021756747 ubox
13 25 0.011230802 ubox
13 29 0.048747645 ubox
13 40 0.076426840 ubox
13 42 0.148838612 ubox
13 44 0.004148431 ubox
13 58 0.044746271 ubox
14 27 0.517326495 ubox
14 53 0.008431592 ubox
14 54 0.056618489 ubox
14 59 0.004663561 ubox
14 62 0.004582809 ubox
15 24 0.111859326 ubox
15 26 0.552913569 ubox
15 30 0.006293468 ubox
15 37 0.004356573 ubox
15 39 0.164311152 ubox
15 53 0.061287120 ubox
15 54 0.003975189 ubox
15 59 0.025306289 ubox
15 60 0.006196956 ubox
15 61 0.004362737 ubox
15 62 0.003468950 ubox
15 64 0.006096170 ubox
16 21 0.024491362 ubox
16 23 0.111968146 ubox
16 25 0.553274773 ubox
16 29 0.007042181 ubox
16 38 0.164345764 ubox
16 51 0.009586829 ubox
16 52 0.061586858 ubox
16 58 0.026487393 ubox
17 24 0.551716113 ubox
17 26 0.004401666 ubox
17 28 0.007896096 ubox
17 35 0.009511270 ubox
17 37 0.163890999 ubox
17 55 0.005026952 ubox
17 60 0.006294582 ubox
17 61 0.056583232 ubox
18 24 0.010054634 ubox
18 27 0.007213033 ubox
18 28 0.007041857 ubox
18 33 0.015824466 ubox
18 35 0.041657479 ubox
18 47 0.006725197 ubox
18 49 0.003847647 ubox
18 54 0.005004482 ubox
18 55 0.008837438 ubox
18 59 0.005669904 ubox
18 60 0.057683087 ubox
19 27 0.006089380 ubox
19 32 0.011948249 ubox
19 46 0.006068444 ubox
19 49 0.015265043 ubox
19 53 0.004762833 ubox
19 54 0.008762620 ubox
19 59 0.057253681 ubox
20 27 0.005401028 ubox
20 32 0.049648794 ubox
20 53 0.008127760 ubox
21 26 0.006577205 ubox
21 28 0.007556933 ubox
21 31 0.052128443 ubox
21 32 0.008260079 ubox
21 33 0.153482916 ubox
21 47 0.270526073 ubox
21 55 0.065640530 ubox
22 27 0.007082010 ubox
22 32 0.153556508 ubox
22 46 0.270259702 ubox
22 54 0.065786014 ubox
23 30 0.109922546 ubox
23 31 0.121951526 ubox
23 46 0.020263587 ubox
23 47 0.005278510 ubox
23 49 0.006454108 ubox
23 53 0.065879620 ubox
24 29 0.143931685 ubox
24 44 0.270285891 ubox
24 45 0.027110587 ubox
24 48 0.006757090 ubox
24 52 0.065867938 ubox
25 30 0.062103033 ubox
25 39 0.003541356 ubox
25 46 0.028057785 ubox
25 47 0.080907815 ubox
25 49 0.009552834 ubox
25 53 0.005147421 ubox
26 38 0.003536920 ubox
26 42 0.620735257 ubox
26 44 0.020344121 ubox
26 45 0.028010655 ubox
26 48 0.011027358 ubox
26 51 0.056795878 ubox
26 52 0.005265170 ubox
26 58 0.003179853 ubox
27 41 0.624586016 ubox
27 43 0.018912432 ubox
27 44 0.020710071 ubox
27 45 0.010093407 ubox
27 48 0.007685692 ubox
27 50 0.056139636 ubox
27 51 0.004802622 ubox
28 40 0.625827599 ubox
28 42 0.017577420 ubox
28 44 0.016158984 ubox
28 45 0.016852793 ubox
28 48 0.079133366 ubox
29 39 0.625924428 ubox
29 46 0.694787095 ubox
29 47 0.216427807 ubox
29 53 0.006982067 ubox
30 38 0.622521469 ubox
30 40 0.009638124 ubox
30 44 0.013714066 ubox
30 45 0.758739809 ubox
30 52 0.007267533 ubox
31 38 0.059199827 ubox
31 40 0.006431092 ubox
31 42 0.054573528 ubox
31 44 0.760014863 ubox
31 51 0.007271093 ubox
32 36 0.103180888 ubox
32 41 0.055844996 ubox
32 43 0.759834541 ubox
32 50 0.007221327 ubox
33 38 0.008615400 ubox
33 40 0.056392531 ubox
33 42 0.759343361 ubox
34 46 0.003633750 ubox
34 49 0.003223789 ubox
35 40 0.309187921 ubox
35 42 0.008129707 ubox
35 45 0.003852342 ubox
35 48 0.003235723 ubox
36 46 0.004868982 ubox
37 42 0.006930071 ubox
37 44 0.004173746 ubox
37 45 0.005084436 ubox
38 46 0.004984048 ubox
38 49 0.006616063 ubox
39 44 0.003927361 ubox
39 45 0.005904419 ubox
39 48 0.006837767 ubox
40 47 0.013179620 ubox
41 46 0.012948631 ubox
42 47 0.014420305 ubox
43 62 0.032185919 ubox
44 61 0.033305996 ubox
44 64 0.003173001 ubox
44 67 0.032952988 ubox
45 60 0.033289868 ubox
45 64 0.008942250 ubox
45 66 0.034369519 ubox
46 63 0.007259995 ubox
46 65 0.007341633 ubox
47 52 0.003240038 ubox
47 58 0.031977584 ubox
47 65 0.148123428 ubox
48 55 0.006434759 ubox
48 64 0.992235077 ubox
49 56 0.006607220 ubox
49 63 0.994280822 ubox
50 62 0.994685805 ubox
51 55 0.004185708 ubox
51 60 0.007303664 ubox
51 61 0.994988790 ubox
52 59 0.007766205 ubox
52 60 0.993964819 ubox
52 61 0.004367424 ubox
52 64 0.004115400 ubox
53 57 0.020022543 ubox
53 58 0.151456204 ubox
53 63 0.004060342 ubox
54 58 0.085887708 ubox
58 64 0.004540178 ubox
59 63 0.004097290 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
showpage
end
%%EOF
