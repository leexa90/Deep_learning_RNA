%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:42 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v6u_a1)
} def

/sequence { (\
GGGGCGGUAGCUCAGCCUGGGAGAGCACCGGACUGAAGAUCCGGGUGUCGGGGGUUCAAAUCCCCCCCGCCCCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 73 0.999158356 ubox
1 75 0.003867510 ubox
1 76 0.008944568 ubox
2 33 0.003254834 ubox
2 72 0.999930499 ubox
2 73 0.004703425 ubox
2 75 0.007304006 ubox
3 71 0.999951868 ubox
3 72 0.003895291 ubox
3 73 0.003914434 ubox
4 11 0.003698632 ubox
4 70 0.999957084 ubox
4 72 0.003581686 ubox
5 10 0.003733208 ubox
5 30 0.004414677 ubox
5 43 0.005559936 ubox
5 69 0.999932913 ubox
6 17 0.036155948 ubox
6 26 0.004431986 ubox
6 29 0.014346703 ubox
6 41 0.005482930 ubox
6 42 0.025789889 ubox
6 67 0.015804532 ubox
6 68 0.998458031 ubox
7 13 0.003229740 ubox
7 16 0.037043323 ubox
7 26 0.009610449 ubox
7 28 0.016160833 ubox
7 40 0.005705177 ubox
7 41 0.025876097 ubox
7 42 0.003700367 ubox
7 49 0.004280869 ubox
7 66 0.021335923 ubox
7 67 0.989106689 ubox
7 68 0.004131493 ubox
8 14 0.003437891 ubox
8 15 0.036521390 ubox
8 19 0.068853652 ubox
8 20 0.005332298 ubox
8 22 0.014771808 ubox
8 23 0.028289827 ubox
8 24 0.169536999 ubox
8 25 0.011139085 ubox
8 27 0.065297306 ubox
8 37 0.003509522 ubox
8 39 0.006907302 ubox
8 45 0.003252967 ubox
8 47 0.008614911 ubox
9 18 0.075310881 ubox
9 40 0.011005554 ubox
9 46 0.009214510 ubox
10 16 0.083974910 ubox
10 17 0.070462950 ubox
10 26 0.795596612 ubox
10 40 0.006802288 ubox
10 41 0.004381192 ubox
10 42 0.003978687 ubox
10 46 0.006970489 ubox
10 48 0.013773183 ubox
10 49 0.012301468 ubox
10 66 0.015235507 ubox
11 15 0.087717094 ubox
11 19 0.022766017 ubox
11 20 0.044706817 ubox
11 21 0.475368897 ubox
11 23 0.286613555 ubox
11 25 0.799029113 ubox
11 38 0.046314389 ubox
11 44 0.007006496 ubox
11 45 0.007243134 ubox
11 47 0.014662367 ubox
12 19 0.037404927 ubox
12 20 0.477387293 ubox
12 21 0.031535916 ubox
12 22 0.288883747 ubox
12 24 0.799257643 ubox
12 36 0.130690067 ubox
12 37 0.033207893 ubox
12 43 0.004312656 ubox
12 44 0.004837653 ubox
13 19 0.478816627 ubox
13 20 0.046396902 ubox
13 21 0.288179880 ubox
13 23 0.798654663 ubox
13 35 0.140848552 ubox
13 47 0.014250264 ubox
14 18 0.388271375 ubox
14 34 0.140869114 ubox
14 46 0.011840720 ubox
15 26 0.037266305 ubox
15 33 0.140602355 ubox
15 46 0.033320172 ubox
15 48 0.004782062 ubox
16 20 0.508326021 ubox
16 21 0.139324961 ubox
16 23 0.011346232 ubox
16 25 0.036767745 ubox
16 31 0.042054344 ubox
16 44 0.003808878 ubox
16 45 0.036356234 ubox
16 47 0.005087465 ubox
17 21 0.062338122 ubox
17 23 0.038750595 ubox
17 25 0.015556614 ubox
17 30 0.041499585 ubox
17 31 0.134533198 ubox
17 43 0.003772883 ubox
17 44 0.036374102 ubox
17 45 0.005469777 ubox
18 22 0.036295994 ubox
18 23 0.008729021 ubox
18 24 0.018546635 ubox
18 27 0.011068548 ubox
18 30 0.134730929 ubox
18 43 0.036252877 ubox
18 44 0.005455091 ubox
19 26 0.012526045 ubox
19 28 0.009007653 ubox
19 29 0.140551528 ubox
19 42 0.036004048 ubox
19 49 0.007507493 ubox
19 68 0.026720553 ubox
20 26 0.006348792 ubox
20 28 0.140479224 ubox
20 29 0.007657085 ubox
20 41 0.035649412 ubox
20 42 0.008134229 ubox
20 48 0.004618980 ubox
20 49 0.016951529 ubox
20 67 0.026764534 ubox
20 68 0.005942929 ubox
21 26 0.046404715 ubox
21 28 0.008297680 ubox
21 40 0.031964851 ubox
21 41 0.009517810 ubox
21 48 0.012425837 ubox
21 49 0.076538862 ubox
21 66 0.026059663 ubox
21 67 0.005927088 ubox
22 34 0.003918491 ubox
22 40 0.010661647 ubox
22 48 0.075074055 ubox
23 33 0.003931356 ubox
23 48 0.017873474 ubox
23 49 0.318264649 ubox
24 34 0.010839283 ubox
24 46 0.036661504 ubox
24 48 0.288248592 ubox
25 33 0.010900548 ubox
25 46 0.163827870 ubox
25 48 0.453669960 ubox
25 49 0.110040044 ubox
26 31 0.008733648 ubox
26 35 0.033723693 ubox
26 44 0.004291117 ubox
26 45 0.175513477 ubox
26 47 0.528688623 ubox
27 34 0.030412135 ubox
27 46 0.538356927 ubox
27 48 0.013719895 ubox
28 44 0.882935034 ubox
28 45 0.442515659 ubox
28 47 0.007858938 ubox
29 43 0.937170511 ubox
29 44 0.316058415 ubox
30 41 0.003901599 ubox
30 42 0.987143635 ubox
30 49 0.003355188 ubox
31 40 0.003811163 ubox
31 41 0.987432636 ubox
31 42 0.052889503 ubox
31 49 0.007805429 ubox
32 40 0.959781354 ubox
32 46 0.004728040 ubox
32 48 0.007825324 ubox
33 38 0.548821527 ubox
33 44 0.009822980 ubox
33 45 0.004532335 ubox
33 47 0.007591147 ubox
34 38 0.150459961 ubox
34 39 0.339195840 ubox
34 43 0.010877451 ubox
34 44 0.004170274 ubox
35 40 0.005750157 ubox
35 41 0.014255415 ubox
35 42 0.011069933 ubox
36 40 0.012950258 ubox
37 46 0.005585055 ubox
37 48 0.010577006 ubox
38 42 0.005649890 ubox
38 49 0.110707872 ubox
39 46 0.014901304 ubox
39 48 0.110680028 ubox
40 45 0.014256902 ubox
40 47 0.104399863 ubox
41 45 0.017292053 ubox
41 47 0.014556143 ubox
41 51 0.013369989 ubox
42 47 0.013657345 ubox
42 50 0.018360774 ubox
43 48 0.004200142 ubox
43 49 0.028409576 ubox
43 68 0.027425038 ubox
43 72 0.005561105 ubox
44 48 0.018489128 ubox
44 49 0.023852821 ubox
44 67 0.027573413 ubox
44 68 0.006877999 ubox
44 71 0.006461599 ubox
45 49 0.074947087 ubox
45 66 0.030176584 ubox
45 67 0.008144774 ubox
45 70 0.006529286 ubox
46 69 0.006541787 ubox
47 66 0.021769643 ubox
47 67 0.007404574 ubox
47 68 0.007547126 ubox
49 69 0.004884685 ubox
50 64 0.010081948 ubox
50 65 0.328414471 ubox
50 66 0.936110357 ubox
50 67 0.090387127 ubox
50 68 0.014370928 ubox
51 63 0.010069656 ubox
51 64 0.329432335 ubox
51 65 0.937958891 ubox
51 66 0.105524966 ubox
51 67 0.014583329 ubox
52 62 0.010022148 ubox
52 63 0.329778264 ubox
52 64 0.937910403 ubox
52 65 0.105822900 ubox
52 66 0.015167788 ubox
53 61 0.009500003 ubox
53 62 0.330083678 ubox
53 63 0.937805603 ubox
53 64 0.105735349 ubox
53 65 0.015106414 ubox
54 61 0.318052870 ubox
54 62 0.936709866 ubox
54 63 0.105530981 ubox
54 64 0.014980176 ubox
55 59 0.021065841 ubox
55 60 0.320356703 ubox
56 60 0.143048985 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
showpage
end
%%EOF
