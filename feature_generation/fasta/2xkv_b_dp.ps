%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2xkv_b)
} def

/sequence { (\
UCUGUUGGUUCUCUGUGCUCUGUGCUCUGUUUACCAGGUCAGGUCCGAAAGGAAGCAGCCAAGGCAGAGACGCAGAGCAGGCAGAUGUAGCUGGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.005826168 ubox
1 85 0.017093243 ubox
1 93 0.013253851 ubox
1 94 0.151326660 ubox
2 7 0.011378036 ubox
2 84 0.018706479 ubox
2 90 0.005592867 ubox
2 93 0.211493026 ubox
2 94 0.082537638 ubox
3 83 0.018711712 ubox
3 89 0.005646713 ubox
3 93 0.078890711 ubox
3 94 0.009245072 ubox
4 82 0.018713772 ubox
4 88 0.005277119 ubox
4 91 0.277451843 ubox
4 92 0.008486884 ubox
4 95 0.932782671 ubox
5 81 0.018092851 ubox
5 90 0.277625223 ubox
5 93 0.007319990 ubox
5 94 0.941205712 ubox
6 80 0.016854691 ubox
6 89 0.275789392 ubox
6 90 0.004669641 ubox
6 93 0.933714855 ubox
6 94 0.006658877 ubox
7 14 0.004905385 ubox
7 88 0.269206972 ubox
7 91 0.022353929 ubox
7 92 0.954651252 ubox
8 13 0.005117147 ubox
8 78 0.004122019 ubox
8 86 0.025209416 ubox
8 88 0.008955936 ubox
8 91 0.959575618 ubox
9 85 0.020409527 ubox
9 87 0.008211003 ubox
9 89 0.030718509 ubox
9 90 0.957894384 ubox
10 84 0.009725149 ubox
10 85 0.267488660 ubox
10 87 0.063643024 ubox
10 89 0.908097456 ubox
10 90 0.006225857 ubox
11 77 0.007460543 ubox
11 84 0.273788595 ubox
11 87 0.814762011 ubox
11 90 0.003949011 ubox
12 76 0.007745026 ubox
12 81 0.003901138 ubox
12 83 0.270637495 ubox
12 85 0.949040808 ubox
12 87 0.020666729 ubox
13 75 0.007795745 ubox
13 80 0.006830181 ubox
13 81 0.102323883 ubox
13 84 0.961182633 ubox
13 87 0.004124719 ubox
14 74 0.007841892 ubox
14 79 0.005128331 ubox
14 80 0.092814938 ubox
14 81 0.239496470 ubox
14 83 0.960177641 ubox
15 73 0.007898516 ubox
15 82 0.957691416 ubox
16 72 0.007895613 ubox
16 79 0.612536689 ubox
16 80 0.071919291 ubox
16 81 0.753512383 ubox
17 71 0.007890770 ubox
17 78 0.998040126 ubox
18 69 0.006986725 ubox
18 77 0.999931929 ubox
19 68 0.006987595 ubox
19 70 0.003773162 ubox
19 76 0.999816162 ubox
20 67 0.006988487 ubox
20 69 0.003785663 ubox
20 75 0.999951779 ubox
21 66 0.006973949 ubox
21 68 0.003771268 ubox
21 74 0.999723277 ubox
22 65 0.006962562 ubox
22 73 0.999951958 ubox
23 64 0.006804996 ubox
23 66 0.003801059 ubox
23 72 0.999543354 ubox
24 65 0.003830787 ubox
24 71 0.999177207 ubox
25 63 0.003395931 ubox
25 64 0.003828452 ubox
25 69 0.999662283 ubox
26 62 0.003380092 ubox
26 63 0.003772041 ubox
26 68 0.999760361 ubox
26 70 0.009471928 ubox
27 58 0.007797643 ubox
27 67 0.999906148 ubox
27 69 0.009477769 ubox
28 57 0.007978090 ubox
28 66 0.999668364 ubox
28 68 0.009310299 ubox
29 56 0.008241650 ubox
29 65 0.999791094 ubox
30 55 0.008227067 ubox
30 62 0.006172100 ubox
30 63 0.070716347 ubox
30 64 0.974236916 ubox
30 66 0.007918342 ubox
31 36 0.004161274 ubox
31 54 0.008158999 ubox
31 61 0.016323006 ubox
31 62 0.099771816 ubox
31 63 0.903885816 ubox
31 64 0.043670553 ubox
32 36 0.005316100 ubox
32 53 0.007580723 ubox
32 61 0.111735544 ubox
32 62 0.788639106 ubox
32 63 0.051015554 ubox
32 64 0.015461011 ubox
33 39 0.004357809 ubox
33 44 0.045432777 ubox
34 38 0.004658714 ubox
34 43 0.064996062 ubox
34 52 0.006327231 ubox
34 58 0.007178013 ubox
34 63 0.252613931 ubox
34 64 0.197764003 ubox
35 42 0.065099681 ubox
35 47 0.004189974 ubox
35 51 0.006281847 ubox
35 58 0.017037300 ubox
35 63 0.209228809 ubox
35 64 0.009785075 ubox
37 46 0.014246587 ubox
37 56 0.018095931 ubox
37 59 0.040260342 ubox
37 60 0.991945553 ubox
38 45 0.014239825 ubox
38 56 0.063598399 ubox
38 59 0.993600215 ubox
38 60 0.019027525 ubox
39 48 0.004148948 ubox
39 54 0.015395549 ubox
39 55 0.052502236 ubox
39 57 0.042142168 ubox
39 58 0.960742869 ubox
40 47 0.004383433 ubox
40 55 0.070568344 ubox
40 58 0.167084925 ubox
42 56 0.252917109 ubox
42 60 0.012883167 ubox
43 56 0.100036779 ubox
43 59 0.012908281 ubox
44 52 0.006261616 ubox
44 53 0.978779283 ubox
44 54 0.145318734 ubox
44 55 0.071837202 ubox
44 58 0.009653153 ubox
45 51 0.006625492 ubox
45 52 0.999341569 ubox
46 51 0.999002943 ubox
46 52 0.015250419 ubox
46 55 0.003613921 ubox
51 56 0.003228489 ubox
51 60 0.025451863 ubox
52 59 0.025413659 ubox
55 59 0.003616257 ubox
55 60 0.008135462 ubox
56 63 0.004832672 ubox
58 65 0.004404912 ubox
59 64 0.004710423 ubox
80 95 0.007492087 ubox
82 93 0.009450810 ubox
83 92 0.009491734 ubox
84 91 0.009462250 ubox
87 95 0.003910584 ubox
88 94 0.003902266 ubox
4 95 0.9500000 lbox
5 94 0.9500000 lbox
6 93 0.9500000 lbox
7 92 0.9500000 lbox
8 91 0.9500000 lbox
9 90 0.9500000 lbox
10 89 0.9500000 lbox
11 87 0.9500000 lbox
12 85 0.9500000 lbox
13 84 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
16 81 0.9500000 lbox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
19 76 0.9500000 lbox
20 75 0.9500000 lbox
21 74 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 69 0.9500000 lbox
26 68 0.9500000 lbox
27 67 0.9500000 lbox
28 66 0.9500000 lbox
29 65 0.9500000 lbox
30 64 0.9500000 lbox
31 63 0.9500000 lbox
32 62 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
44 53 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
showpage
end
%%EOF
