%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5ktj_a)
} def

/sequence { (\
CUCGUUUGAGCGAGUAUAAACAGUUGGUUAGGCUCAAAGCGGAGAGCAG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.014901172 ubox
1 14 0.144815732 ubox
1 23 0.004005362 ubox
1 31 0.003374577 ubox
1 39 0.003986596 ubox
1 41 0.023199983 ubox
1 42 0.230498312 ubox
1 44 0.703766170 ubox
1 46 0.087575948 ubox
1 49 0.019346776 ubox
2 9 0.015223208 ubox
2 13 0.146981876 ubox
2 22 0.004024180 ubox
2 38 0.004183383 ubox
2 41 0.159950659 ubox
2 42 0.559261083 ubox
2 43 0.674133519 ubox
2 44 0.011139928 ubox
2 45 0.085478900 ubox
2 46 0.004443521 ubox
2 48 0.018631539 ubox
3 8 0.015246651 ubox
3 12 0.147229892 ubox
3 31 0.005491125 ubox
3 39 0.028526248 ubox
3 41 0.811780648 ubox
3 42 0.508503605 ubox
3 44 0.075856264 ubox
3 49 0.004083831 ubox
4 11 0.147028751 ubox
4 21 0.007440314 ubox
4 33 0.044151423 ubox
4 40 0.927086212 ubox
4 47 0.034811310 ubox
5 9 0.003373013 ubox
5 10 0.139894023 ubox
5 20 0.007445358 ubox
5 32 0.044283138 ubox
5 37 0.005774795 ubox
5 38 0.543256944 ubox
5 39 0.805221381 ubox
5 41 0.011453229 ubox
5 42 0.024908214 ubox
5 43 0.022398137 ubox
5 45 0.005038051 ubox
5 46 0.034746095 ubox
6 10 0.004277323 ubox
6 19 0.007432364 ubox
6 31 0.057767593 ubox
6 36 0.007868053 ubox
6 37 0.723630712 ubox
6 38 0.647652691 ubox
6 39 0.018024156 ubox
6 41 0.015289080 ubox
6 42 0.023099730 ubox
6 44 0.005202818 ubox
6 45 0.034473924 ubox
7 18 0.007382072 ubox
7 27 0.005750518 ubox
7 30 0.062268011 ubox
7 36 0.868985417 ubox
7 37 0.456527857 ubox
7 38 0.009103873 ubox
7 41 0.022879596 ubox
7 43 0.005287032 ubox
7 44 0.034114962 ubox
8 17 0.007017811 ubox
8 29 0.062994236 ubox
8 35 0.984997477 ubox
8 40 0.022799055 ubox
9 25 0.007067577 ubox
9 28 0.062991741 ubox
9 29 0.003727802 ubox
9 34 0.985372492 ubox
10 24 0.007369709 ubox
10 28 0.004551554 ubox
10 33 0.985527182 ubox
10 40 0.035749703 ubox
11 23 0.007534625 ubox
11 26 0.064011742 ubox
11 27 0.005484765 ubox
11 31 0.061387125 ubox
11 32 0.982604114 ubox
11 39 0.035742608 ubox
12 21 0.010644639 ubox
12 24 0.005989745 ubox
12 25 0.072071113 ubox
12 28 0.013399988 ubox
12 29 0.475834040 ubox
12 35 0.052470505 ubox
13 24 0.071631127 ubox
13 25 0.005507651 ubox
13 28 0.520131675 ubox
13 29 0.097196402 ubox
13 34 0.052765552 ubox
14 21 0.049202542 ubox
14 24 0.005259077 ubox
14 25 0.017029358 ubox
14 28 0.084184461 ubox
14 29 0.272849131 ubox
14 33 0.052901335 ubox
15 19 0.004212262 ubox
15 20 0.047152831 ubox
15 22 0.064726125 ubox
15 23 0.007191208 ubox
15 26 0.566482723 ubox
15 27 0.043759831 ubox
15 30 0.080140038 ubox
15 31 0.024369319 ubox
15 32 0.050506818 ubox
16 24 0.073096165 ubox
16 25 0.567351165 ubox
16 28 0.191868127 ubox
16 29 0.080626644 ubox
17 22 0.019568717 ubox
17 23 0.082930636 ubox
17 26 0.599021624 ubox
17 27 0.180641163 ubox
17 30 0.077096653 ubox
17 31 0.046720274 ubox
18 24 0.049428046 ubox
18 25 0.601200986 ubox
18 28 0.016929527 ubox
18 29 0.081832802 ubox
19 24 0.502908680 ubox
19 25 0.131089862 ubox
19 28 0.062628249 ubox
19 29 0.147187510 ubox
20 24 0.103362415 ubox
20 25 0.042105917 ubox
20 28 0.172978382 ubox
20 29 0.005571203 ubox
21 26 0.096959139 ubox
21 27 0.175317056 ubox
21 31 0.011922444 ubox
21 46 0.006538000 ubox
22 28 0.008765848 ubox
22 29 0.009419149 ubox
22 34 0.008246907 ubox
23 28 0.007780949 ubox
23 29 0.007722740 ubox
23 33 0.008849889 ubox
23 47 0.010203588 ubox
24 30 0.004871520 ubox
24 31 0.007857202 ubox
24 32 0.008834900 ubox
24 37 0.006694973 ubox
24 43 0.007710199 ubox
24 46 0.010144802 ubox
24 49 0.011825181 ubox
25 30 0.007506486 ubox
25 31 0.010636459 ubox
25 36 0.007750731 ubox
25 42 0.007902577 ubox
25 45 0.009644563 ubox
25 48 0.018241929 ubox
26 35 0.007905090 ubox
26 47 0.018984144 ubox
27 33 0.005251626 ubox
27 34 0.005301610 ubox
27 40 0.008097255 ubox
27 47 0.010980093 ubox
28 32 0.004917349 ubox
28 39 0.008079781 ubox
28 43 0.004743045 ubox
28 44 0.004147440 ubox
28 45 0.017609860 ubox
28 46 0.011077993 ubox
28 49 0.004423085 ubox
29 38 0.007896613 ubox
29 42 0.004771937 ubox
29 43 0.005067179 ubox
29 44 0.015952396 ubox
29 45 0.010693893 ubox
29 48 0.005511072 ubox
29 49 0.006636526 ubox
31 47 0.008377806 ubox
32 40 0.024142474 ubox
32 47 0.150971702 ubox
33 39 0.024168815 ubox
33 44 0.012217356 ubox
33 46 0.151345430 ubox
34 38 0.021781834 ubox
34 43 0.013943773 ubox
34 45 0.151389133 ubox
35 41 0.004075121 ubox
35 42 0.014163541 ubox
35 44 0.151373549 ubox
39 47 0.140760416 ubox
40 46 0.140895114 ubox
40 49 0.004047461 ubox
41 47 0.013028313 ubox
42 47 0.033513691 ubox
2 42 0.9500000 lbox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 35 0.9500000 lbox
9 34 0.9500000 lbox
10 33 0.9500000 lbox
11 32 0.9500000 lbox
12 29 0.9500000 lbox
13 28 0.9500000 lbox
15 26 0.9500000 lbox
16 25 0.9500000 lbox
showpage
end
%%EOF
