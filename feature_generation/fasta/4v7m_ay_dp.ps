%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:42 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v7m_ay)
} def

/sequence { (\
GGGGUAUCGCCAAGCGGUAAGGCACCGGAUUGUGAUUCCGGCUUUCCGAGGUUCGAAUCCUCGUACCCCAGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 39 0.017996987 ubox
1 62 0.011680751 ubox
1 68 0.015532441 ubox
1 69 0.997543058 ubox
1 73 0.007172854 ubox
2 38 0.017917265 ubox
2 39 0.035616352 ubox
2 60 0.003409333 ubox
2 61 0.011593887 ubox
2 67 0.015577774 ubox
2 68 0.998303464 ubox
2 69 0.015693876 ubox
2 72 0.005946932 ubox
3 11 0.003743312 ubox
3 37 0.016378823 ubox
3 38 0.035660370 ubox
3 39 0.031070913 ubox
3 59 0.003415788 ubox
3 60 0.011616498 ubox
3 66 0.015530740 ubox
3 67 0.998310719 ubox
3 68 0.015609627 ubox
3 73 0.003445728 ubox
4 10 0.003805038 ubox
4 23 0.007338945 ubox
4 36 0.009548062 ubox
4 37 0.033491274 ubox
4 38 0.031056494 ubox
4 58 0.003412467 ubox
4 59 0.011612762 ubox
4 66 0.997882837 ubox
4 67 0.015334377 ubox
4 72 0.003450870 ubox
5 9 0.003582054 ubox
5 19 0.263295958 ubox
5 20 0.010507725 ubox
5 21 0.003468736 ubox
5 22 0.007337865 ubox
5 35 0.005544844 ubox
5 57 0.003636937 ubox
5 65 0.951595987 ubox
5 71 0.003163592 ubox
6 18 0.472392127 ubox
6 36 0.049124552 ubox
6 58 0.006088280 ubox
6 64 0.837397148 ubox
7 12 0.004612304 ubox
7 13 0.004605794 ubox
7 17 0.544061645 ubox
7 19 0.021475808 ubox
7 20 0.037705247 ubox
7 21 0.006479559 ubox
7 22 0.030370797 ubox
7 24 0.033649892 ubox
7 35 0.055872166 ubox
7 55 0.003654395 ubox
7 56 0.085805670 ubox
7 57 0.006489116 ubox
7 63 0.539787110 ubox
8 14 0.039063539 ubox
8 16 0.668142776 ubox
8 17 0.012497509 ubox
8 21 0.044223635 ubox
8 22 0.010211989 ubox
8 34 0.057521395 ubox
8 55 0.102958114 ubox
8 63 0.147252093 ubox
9 15 0.720945405 ubox
9 18 0.349936519 ubox
9 23 0.496150622 ubox
9 33 0.057537116 ubox
9 42 0.017733532 ubox
9 46 0.003435157 ubox
9 47 0.005938648 ubox
9 52 0.126640125 ubox
9 53 0.007184815 ubox
9 54 0.091561635 ubox
9 59 0.007174630 ubox
9 60 0.006590046 ubox
9 61 0.011534470 ubox
9 62 0.067443299 ubox
9 64 0.013128414 ubox
10 14 0.715833677 ubox
10 16 0.006666311 ubox
10 17 0.360871000 ubox
10 22 0.496661950 ubox
10 32 0.055580976 ubox
10 41 0.017526411 ubox
10 51 0.149511056 ubox
10 55 0.004300147 ubox
10 63 0.014944803 ubox
11 16 0.360504242 ubox
11 17 0.005800881 ubox
11 21 0.496234243 ubox
11 32 0.015765008 ubox
11 40 0.016906668 ubox
11 50 0.149378828 ubox
11 51 0.008165533 ubox
11 63 0.007725118 ubox
12 18 0.022508073 ubox
12 30 0.031427768 ubox
12 31 0.021444199 ubox
12 44 0.015011607 ubox
12 53 0.005674571 ubox
12 58 0.003533346 ubox
13 18 0.059430464 ubox
13 30 0.020800188 ubox
13 43 0.016707238 ubox
13 52 0.005924182 ubox
13 53 0.003395062 ubox
13 61 0.017447137 ubox
14 18 0.059307439 ubox
14 23 0.157915785 ubox
14 42 0.016849567 ubox
14 47 0.005560276 ubox
14 52 0.003606165 ubox
14 54 0.003805118 ubox
14 60 0.017709582 ubox
14 62 0.004278175 ubox
14 64 0.004658392 ubox
15 21 0.010657664 ubox
15 22 0.157971047 ubox
15 27 0.058445668 ubox
15 40 0.011299746 ubox
15 41 0.012981218 ubox
15 48 0.183088358 ubox
15 51 0.003163236 ubox
15 55 0.012609840 ubox
15 63 0.005365318 ubox
16 23 0.014798699 ubox
16 26 0.064790612 ubox
16 39 0.016320381 ubox
16 46 0.016328480 ubox
16 47 0.375209174 ubox
16 54 0.012595736 ubox
16 59 0.016952630 ubox
16 60 0.005522568 ubox
17 23 0.069463904 ubox
17 25 0.065304580 ubox
17 26 0.003426100 ubox
17 38 0.016336958 ubox
17 39 0.005380562 ubox
17 42 0.004232495 ubox
17 45 0.017807669 ubox
17 46 0.404945351 ubox
17 47 0.155681422 ubox
17 53 0.010885634 ubox
17 58 0.016929782 ubox
17 59 0.005586140 ubox
18 22 0.065116324 ubox
18 24 0.063622999 ubox
18 56 0.003349537 ubox
18 57 0.016459046 ubox
19 36 0.004370253 ubox
19 37 0.007643425 ubox
19 43 0.004293655 ubox
19 44 0.175155628 ubox
19 45 0.568399330 ubox
20 36 0.007821830 ubox
20 43 0.211137844 ubox
20 44 0.636210725 ubox
20 45 0.050812764 ubox
21 26 0.007203835 ubox
21 42 0.211954377 ubox
21 43 0.658318801 ubox
21 44 0.055971069 ubox
21 45 0.053116504 ubox
21 46 0.119682685 ubox
21 47 0.224859314 ubox
21 53 0.019657580 ubox
21 54 0.014974915 ubox
21 73 0.009486424 ubox
22 33 0.013002774 ubox
22 42 0.658677810 ubox
22 43 0.050908715 ubox
22 44 0.059354716 ubox
22 45 0.111247577 ubox
22 46 0.226554427 ubox
22 47 0.011409159 ubox
22 52 0.026673873 ubox
22 53 0.011005402 ubox
22 64 0.007935698 ubox
22 72 0.009496352 ubox
23 32 0.013072289 ubox
23 34 0.012037617 ubox
23 40 0.014291957 ubox
23 41 0.498040936 ubox
23 51 0.028795214 ubox
23 63 0.008089273 ubox
23 71 0.009486177 ubox
24 31 0.011772246 ubox
24 33 0.012095846 ubox
24 43 0.127444117 ubox
24 44 0.073883126 ubox
24 45 0.045514612 ubox
24 52 0.003172502 ubox
24 64 0.004831901 ubox
25 32 0.012017565 ubox
25 40 0.145112942 ubox
25 41 0.857528576 ubox
25 50 0.007315881 ubox
25 51 0.003219497 ubox
25 63 0.005328319 ubox
26 40 0.978885116 ubox
26 48 0.031644155 ubox
27 38 0.048775334 ubox
27 39 0.993851625 ubox
27 47 0.045344069 ubox
27 60 0.062297510 ubox
28 37 0.049424487 ubox
28 38 0.993846198 ubox
28 46 0.045578115 ubox
28 59 0.062600677 ubox
29 36 0.087684103 ubox
29 37 0.982341664 ubox
29 45 0.045514413 ubox
29 58 0.062575317 ubox
30 34 0.019106959 ubox
30 35 0.104391754 ubox
30 56 0.003478168 ubox
30 57 0.062335618 ubox
31 35 0.153253978 ubox
31 55 0.004884122 ubox
31 56 0.061583331 ubox
32 36 0.018847314 ubox
32 37 0.008087938 ubox
32 42 0.045181712 ubox
32 54 0.006498044 ubox
33 40 0.012552943 ubox
33 41 0.043467202 ubox
33 55 0.045285850 ubox
34 39 0.017048728 ubox
34 53 0.035409633 ubox
34 54 0.051055637 ubox
34 59 0.006624641 ubox
35 52 0.036064718 ubox
35 53 0.050721193 ubox
35 58 0.006875165 ubox
36 50 0.004031009 ubox
36 51 0.035766597 ubox
36 57 0.006922393 ubox
37 49 0.004763831 ubox
37 50 0.032671644 ubox
37 51 0.046379350 ubox
37 56 0.006953390 ubox
38 48 0.003591095 ubox
38 50 0.050980562 ubox
38 51 0.003760449 ubox
38 55 0.006836512 ubox
39 48 0.062554868 ubox
39 50 0.003631225 ubox
40 46 0.005892173 ubox
40 47 0.064213383 ubox
40 53 0.006129535 ubox
40 73 0.050537100 ubox
41 45 0.004071078 ubox
41 46 0.063374918 ubox
41 47 0.004398234 ubox
41 52 0.006972191 ubox
41 72 0.050590740 ubox
42 48 0.003548231 ubox
42 50 0.005100657 ubox
42 51 0.007989892 ubox
42 63 0.003584325 ubox
42 71 0.050585415 ubox
43 49 0.005128991 ubox
43 50 0.007845417 ubox
43 65 0.009440134 ubox
43 70 0.048877596 ubox
44 48 0.004653148 ubox
44 49 0.006372207 ubox
44 57 0.005058269 ubox
44 65 0.021634371 ubox
45 56 0.005854616 ubox
45 65 0.053062300 ubox
46 55 0.005095517 ubox
46 63 0.027640589 ubox
47 55 0.012698023 ubox
47 63 0.783925092 ubox
48 54 0.013486068 ubox
48 59 0.005973818 ubox
48 60 0.003480072 ubox
48 62 0.979430907 ubox
48 68 0.010735516 ubox
48 69 0.016853320 ubox
49 53 0.011742410 ubox
49 58 0.006067144 ubox
49 61 0.982582489 ubox
50 59 0.018929747 ubox
50 60 0.982994262 ubox
50 61 0.005194683 ubox
50 67 0.021993814 ubox
51 58 0.023686275 ubox
51 59 0.981832066 ubox
51 60 0.006311499 ubox
51 66 0.022050524 ubox
52 56 0.019713406 ubox
52 57 0.119009145 ubox
52 65 0.020665342 ubox
53 57 0.149483341 ubox
54 63 0.072828370 ubox
55 59 0.004865598 ubox
55 60 0.016766630 ubox
55 62 0.093319800 ubox
56 61 0.087333314 ubox
63 72 0.004039211 ubox
64 71 0.003977669 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
25 41 0.9500000 lbox
26 40 0.9500000 lbox
27 39 0.9500000 lbox
28 38 0.9500000 lbox
29 37 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
showpage
end
%%EOF
