%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:37 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3la5_a)
} def

/sequence { (\
GGCUUCAUAUAAUCCGAAUGAUAUGGUUUCGGAGCUUCCACCAAGAGCCUUAAACUCUUGACUAUGGAGUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.008072323 ubox
1 36 0.018915017 ubox
1 49 0.030333329 ubox
1 70 0.009219604 ubox
1 71 0.937863470 ubox
2 35 0.025817089 ubox
2 48 0.030385176 ubox
2 70 0.992790910 ubox
2 71 0.026789759 ubox
3 34 0.025861311 ubox
3 47 0.030376893 ubox
3 69 0.997473535 ubox
4 33 0.019930048 ubox
4 46 0.029928626 ubox
4 68 0.997187982 ubox
5 32 0.015098031 ubox
5 45 0.028150804 ubox
5 46 0.003897507 ubox
5 67 0.996688456 ubox
5 68 0.005502404 ubox
6 25 0.004081695 ubox
6 31 0.014557434 ubox
6 45 0.005475073 ubox
6 66 0.997364326 ubox
6 67 0.007190180 ubox
7 24 0.004404557 ubox
7 37 0.003705439 ubox
7 65 0.994808670 ubox
8 23 0.004451395 ubox
8 40 0.005213474 ubox
8 61 0.005712432 ubox
8 64 0.987958531 ubox
8 66 0.008876827 ubox
9 22 0.004435644 ubox
9 24 0.004077255 ubox
9 36 0.023686965 ubox
9 37 0.057622746 ubox
9 63 0.932391554 ubox
9 65 0.017129989 ubox
10 21 0.004071789 ubox
10 23 0.004866695 ubox
10 25 0.003313880 ubox
10 33 0.006496259 ubox
10 34 0.036144941 ubox
10 40 0.013628445 ubox
10 60 0.011040405 ubox
10 61 0.133259113 ubox
10 64 0.028151829 ubox
11 22 0.003714876 ubox
11 24 0.003573928 ubox
11 28 0.013053182 ubox
11 29 0.014587143 ubox
11 36 0.086310336 ubox
11 37 0.078511525 ubox
11 59 0.011433919 ubox
11 63 0.032922143 ubox
12 19 0.004002609 ubox
12 22 0.019338882 ubox
12 27 0.014012835 ubox
12 28 0.015462959 ubox
12 36 0.080489868 ubox
12 37 0.027845356 ubox
12 58 0.009348772 ubox
12 59 0.004822575 ubox
12 63 0.010806613 ubox
13 18 0.003924406 ubox
13 21 0.020430208 ubox
13 26 0.009939647 ubox
13 33 0.934444854 ubox
13 34 0.018134113 ubox
13 61 0.018100297 ubox
14 20 0.020464170 ubox
14 25 0.009818251 ubox
14 26 0.029473626 ubox
14 31 0.003314261 ubox
14 32 0.998096950 ubox
14 60 0.009439974 ubox
15 20 0.005534122 ubox
15 25 0.029650300 ubox
15 26 0.004087685 ubox
15 31 0.998429197 ubox
15 60 0.004269574 ubox
16 24 0.022125173 ubox
16 29 0.049592738 ubox
16 30 0.997516648 ubox
16 38 0.003220682 ubox
16 57 0.005958395 ubox
16 59 0.004773216 ubox
17 22 0.007195006 ubox
17 24 0.005693907 ubox
17 28 0.259902760 ubox
17 29 0.961138758 ubox
17 37 0.003223390 ubox
17 56 0.005685220 ubox
17 58 0.004573005 ubox
18 22 0.006505442 ubox
18 24 0.015631708 ubox
18 27 0.365099244 ubox
18 28 0.896078246 ubox
18 29 0.020282339 ubox
19 23 0.018269365 ubox
19 25 0.043368415 ubox
19 26 0.443396915 ubox
19 31 0.003337386 ubox
20 24 0.032154791 ubox
20 27 0.079609064 ubox
20 28 0.108221309 ubox
20 29 0.019396614 ubox
20 30 0.014893513 ubox
20 55 0.003209634 ubox
20 57 0.003656488 ubox
21 27 0.136255036 ubox
21 28 0.036335696 ubox
21 29 0.015028346 ubox
22 26 0.128511105 ubox
22 52 0.005819106 ubox
23 27 0.011968067 ubox
23 28 0.013863044 ubox
23 51 0.005891818 ubox
24 40 0.009274392 ubox
24 43 0.006902696 ubox
25 30 0.005740175 ubox
25 36 0.007106982 ubox
25 39 0.010676350 ubox
25 42 0.009955280 ubox
25 49 0.009309823 ubox
25 56 0.007517701 ubox
26 35 0.007656628 ubox
26 38 0.010647475 ubox
26 41 0.010760053 ubox
26 48 0.009322611 ubox
26 55 0.008854056 ubox
27 34 0.007604737 ubox
27 40 0.010603018 ubox
27 47 0.009121631 ubox
27 54 0.008862390 ubox
28 33 0.006168282 ubox
28 46 0.008851217 ubox
28 53 0.008833239 ubox
29 45 0.008373721 ubox
29 52 0.008362229 ubox
31 39 0.049172228 ubox
31 42 0.008292497 ubox
31 50 0.008367695 ubox
32 38 0.049763218 ubox
32 39 0.006990720 ubox
32 41 0.008970840 ubox
32 49 0.008615482 ubox
33 37 0.043852512 ubox
33 50 0.003705877 ubox
33 63 0.005149422 ubox
34 38 0.056375958 ubox
34 39 0.126837707 ubox
34 41 0.137831174 ubox
34 42 0.007285914 ubox
34 48 0.048298905 ubox
34 49 0.004456203 ubox
34 62 0.011584008 ubox
34 70 0.044851933 ubox
34 71 0.010282956 ubox
35 45 0.005196847 ubox
35 47 0.048453955 ubox
35 69 0.046694168 ubox
36 40 0.022216549 ubox
36 44 0.005350563 ubox
36 46 0.045963021 ubox
36 47 0.004829802 ubox
36 61 0.010677620 ubox
36 68 0.037042303 ubox
36 69 0.030071492 ubox
37 43 0.005154621 ubox
37 45 0.042041284 ubox
37 46 0.015738519 ubox
37 60 0.003786634 ubox
37 61 0.020129345 ubox
37 67 0.023795190 ubox
37 68 0.049976296 ubox
38 45 0.021522873 ubox
38 60 0.017251512 ubox
38 66 0.023430510 ubox
38 67 0.058444252 ubox
39 45 0.004317797 ubox
39 60 0.018294151 ubox
39 66 0.058515498 ubox
40 59 0.015979960 ubox
40 63 0.012173627 ubox
40 65 0.056137554 ubox
41 60 0.033269563 ubox
42 60 0.994428881 ubox
43 59 0.997005868 ubox
44 58 0.997652159 ubox
45 57 0.998266207 ubox
46 56 0.997890005 ubox
47 55 0.994785871 ubox
49 60 0.007405579 ubox
50 54 0.030653336 ubox
50 61 0.022465598 ubox
51 60 0.024610442 ubox
52 59 0.024544043 ubox
53 58 0.021428197 ubox
54 70 0.028392967 ubox
55 60 0.011071480 ubox
55 69 0.030095006 ubox
56 68 0.030107467 ubox
57 67 0.030095417 ubox
58 66 0.029742532 ubox
60 71 0.004891374 ubox
61 70 0.005701550 ubox
62 69 0.005791848 ubox
63 68 0.005514345 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
8 64 0.9500000 lbox
9 63 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 31 0.9500000 lbox
16 30 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
showpage
end
%%EOF
