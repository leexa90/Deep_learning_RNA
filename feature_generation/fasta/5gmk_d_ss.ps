%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:51 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGAGGUCAACAUCAAGAACUGUGGGCCUUUUAUUGCCUAUAGAACUUAUAACGAACAUGGUUCUUGCCUUUUACCAGAACCAUCCGGGUGUUGUCUCCAUAGAAACAGGUAAAGCUGUCCGUUACUGUGGGCUUGCCAUAUUUUUUGGAACUUUUC\
) def
/coor [
[256.98950195 179.50054932]
[243.23393250 173.51853943]
[229.47836304 167.53654480]
[215.72279358 161.55455017]
[201.96722412 155.57254028]
[194.53752136 155.79023743]
[187.99815369 149.33076477]
[174.36503601 143.07473755]
[160.73190308 136.81869507]
[147.09878540 130.56266785]
[133.46566772 124.30663300]
[119.83254242 118.05059814]
[106.19942474 111.79455566]
[91.21143341 111.19441223]
[77.12175751 116.34038544]
[63.03207779 121.48635101]
[56.31213760 135.53910828]
[41.94989395 140.55714417]
[28.59414482 134.06410217]
[14.50446796 139.21008301]
[0.41479048 144.35604858]
[-13.67488670 149.50201416]
[-27.76456451 154.64797974]
[-41.85424042 159.79394531]
[-55.94392014 164.93991089]
[-70.03359985 170.08589172]
[-74.16444397 185.04301453]
[-86.31891632 194.68917847]
[-101.82335663 195.31524658]
[-114.71599579 186.68046570]
[-120.03935242 172.10508728]
[-115.74649048 157.19366455]
[-103.48809814 147.67990112]
[-87.97777557 147.22207642]
[-75.17956543 155.99621582]
[-61.08988571 150.85023499]
[-47.00020981 145.70426941]
[-32.91053391 140.55830383]
[-18.82085609 135.41233826]
[-4.73117781 130.26637268]
[9.35849953 125.12039948]
[23.44817734 119.97442627]
[29.47546768 106.40213013]
[43.69109726 100.98267365]
[57.88610840 107.39667511]
[71.97578430 102.25070953]
[86.06546783 97.10473633]
[89.12512970 90.25722504]
[75.43019867 84.13767242]
[81.54997253 70.44284058]
[95.24445343 76.56219482]
[98.30411530 69.71467590]
[92.73761749 55.78577805]
[82.44606781 52.05350113]
[76.06426239 43.43120956]
[75.52428436 32.93824387]
[80.76321411 24.08571434]
[75.75846863 9.94525814]
[70.75372314 -4.19519901]
[65.74898529 -18.33565521]
[60.74423599 -32.47611237]
[55.73949051 -46.61656952]
[50.73474503 -60.75702667]
[45.72999954 -74.89748383]
[33.83164597 -85.32531738]
[36.87912750 -99.90483093]
[22.17034149 -105.21383667]
[14.36006546 -118.76129913]
[17.13607407 -134.15051270]
[29.18762207 -144.11515808]
[44.82433701 -143.95024109]
[56.66303635 -133.73362732]
[59.11385345 -118.28929138]
[51.01958466 -104.90957642]
[62.55996704 -95.49316406]
[59.87045670 -79.90222931]
[64.87520599 -65.76177216]
[69.87995148 -51.62131500]
[74.88469696 -37.48085785]
[79.88943481 -23.34040070]
[84.89418030 -9.19994450]
[89.89892578 4.94051313]
[94.90367126 19.08097076]
[110.49322510 30.46487236]
[106.66651917 50.21928787]
[112.23300934 64.14818573]
[112.45545959 98.16143799]
[126.08857727 104.41747284]
[139.72169495 110.67350769]
[153.35482788 116.92954254]
[166.98794556 123.18557739]
[180.62106323 129.44161987]
[194.25419617 135.69764709]
[207.94921875 141.81697083]
[221.70478821 147.79898071]
[235.46035767 153.78097534]
[249.21592712 159.76296997]
[262.97149658 165.74497986]
[273.18923950 153.64965820]
[286.97204590 145.48370361]
[302.85470581 142.25755310]
[319.10137939 144.44880676]
[333.89520264 151.93598938]
[345.54144287 163.99868774]
[352.66143799 179.38529968]
[367.19467163 175.67239380]
[381.72787476 171.95948792]
[396.26107788 168.24658203]
[404.10586548 154.52670288]
[419.37612915 150.45304871]
[433.01229858 158.44244385]
[436.92428589 173.75491333]
[428.79116821 187.30586243]
[413.43820190 191.05572510]
[399.97399902 182.77980042]
[385.44076538 186.49270630]
[370.90756226 190.20561218]
[356.37435913 193.91851807]
[353.54003906 208.64830017]
[365.65762329 217.48934937]
[377.77520752 226.33038330]
[392.79605103 219.48278809]
[409.12863159 221.11880493]
[422.34109497 230.69972229]
[428.89593506 245.54382324]
[427.09698486 261.57644653]
[439.38903809 270.17324829]
[451.68109131 278.77008057]
[463.97317505 287.36688232]
[476.26522827 295.96371460]
[492.24987793 294.59619141]
[503.18029785 306.33953857]
[500.67153931 322.18524170]
[486.64816284 329.97781372]
[471.86767578 323.73947144]
[467.66839600 308.25576782]
[455.37634277 299.65893555]
[443.08428955 291.06213379]
[430.79223633 282.46530151]
[418.50015259 273.86849976]
[406.50488281 280.45986938]
[392.77331543 281.23165894]
[379.99237061 275.97558594]
[370.68768311 265.66842651]
[366.72451782 252.29107666]
[368.93417358 238.44798279]
[356.81658936 229.60693359]
[344.69900513 220.76588440]
[334.74871826 230.81716919]
[322.51638794 237.69740295]
[308.97119141 240.93000793]
[295.16778564 240.32472229]
[282.16421509 235.98776245]
[270.94076538 228.30906677]
[262.32617188 217.92802429]
[256.93640137 205.68052673]
] def
/pairs [
[1 98]
[2 97]
[3 96]
[4 95]
[5 94]
[7 93]
[8 92]
[9 91]
[10 90]
[11 89]
[12 88]
[13 87]
[14 47]
[15 46]
[16 45]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[52 86]
[53 85]
[57 83]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[66 74]
[105 118]
[106 117]
[107 116]
[108 115]
[119 148]
[120 147]
[121 146]
[126 140]
[127 139]
[128 138]
[129 137]
[130 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
