%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3r4f_a)
} def

/sequence { (\
GCGUGUAUGUGGGGAAACCCUGAUUGAGUUCAGCCCACAUACUUUGUUGAUGGUUGUCAAUCGCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.022305745 ubox
1 42 0.003175713 ubox
1 43 0.007105674 ubox
1 44 0.012514138 ubox
1 45 0.023205981 ubox
1 47 0.217055536 ubox
1 48 0.011699885 ubox
1 62 0.012901242 ubox
1 64 0.803127183 ubox
1 65 0.025013045 ubox
2 9 0.023113990 ubox
2 46 0.247913129 ubox
2 49 0.005799932 ubox
2 52 0.007283903 ubox
2 53 0.003220109 ubox
2 63 0.805879063 ubox
3 8 0.014995058 ubox
3 42 0.019695235 ubox
3 43 0.059897624 ubox
3 44 0.096949048 ubox
3 45 0.240211819 ubox
3 48 0.004633869 ubox
3 51 0.007493792 ubox
3 61 0.011752270 ubox
3 62 0.772505304 ubox
3 64 0.058206168 ubox
3 65 0.007268704 ubox
4 41 0.017867939 ubox
4 46 0.008349537 ubox
4 50 0.007465364 ubox
4 59 0.004374970 ubox
4 60 0.047069523 ubox
4 63 0.056394963 ubox
5 40 0.013482773 ubox
5 42 0.995388963 ubox
5 43 0.012938822 ubox
5 61 0.003357353 ubox
5 62 0.016470931 ubox
5 64 0.003656758 ubox
6 39 0.008489095 ubox
6 41 0.997655743 ubox
6 63 0.003372263 ubox
7 40 0.997899353 ubox
8 39 0.998097726 ubox
9 21 0.003996353 ubox
9 38 0.998535783 ubox
10 37 0.998226202 ubox
11 20 0.050717603 ubox
11 21 0.015069702 ubox
11 35 0.004242982 ubox
11 36 0.996713423 ubox
12 18 0.003205072 ubox
12 19 0.052044099 ubox
12 20 0.017145167 ubox
12 21 0.003316042 ubox
12 34 0.005918847 ubox
12 35 0.994933226 ubox
12 36 0.060325279 ubox
13 18 0.053221600 ubox
13 19 0.030972710 ubox
13 20 0.013138809 ubox
13 34 0.992049500 ubox
13 35 0.083805601 ubox
14 18 0.038413993 ubox
14 19 0.068338991 ubox
14 20 0.010745787 ubox
14 30 0.008267387 ubox
14 31 0.180077668 ubox
14 34 0.101967869 ubox
15 29 0.007734991 ubox
15 30 0.158971902 ubox
16 25 0.005671737 ubox
16 29 0.129691305 ubox
16 30 0.323862662 ubox
17 24 0.005450840 ubox
17 29 0.378734766 ubox
17 30 0.030704676 ubox
18 26 0.010681081 ubox
18 28 0.389828442 ubox
18 33 0.023260569 ubox
19 26 0.144556655 ubox
19 28 0.069082627 ubox
19 33 0.056839854 ubox
20 26 0.358408395 ubox
20 28 0.152424742 ubox
20 33 0.892201851 ubox
21 26 0.015464109 ubox
21 27 0.153940435 ubox
21 28 0.007769040 ubox
21 32 0.895310009 ubox
21 63 0.035819305 ubox
22 30 0.008401830 ubox
22 31 0.895997125 ubox
22 62 0.053381837 ubox
23 29 0.035327504 ubox
23 30 0.883018773 ubox
23 61 0.053497014 ubox
24 28 0.045632890 ubox
24 33 0.018340597 ubox
24 60 0.053480552 ubox
25 32 0.019289425 ubox
25 59 0.053510282 ubox
26 31 0.019554542 ubox
26 58 0.053528517 ubox
27 57 0.053044300 ubox
31 56 0.053173705 ubox
32 55 0.053228533 ubox
33 54 0.053364671 ubox
34 53 0.052605569 ubox
35 52 0.051677426 ubox
35 53 0.009375876 ubox
36 49 0.023601544 ubox
36 52 0.013094669 ubox
37 47 0.023435588 ubox
37 48 0.017058646 ubox
37 51 0.015752107 ubox
38 46 0.029153875 ubox
38 49 0.043772107 ubox
39 45 0.028660455 ubox
39 47 0.006302268 ubox
39 48 0.043291496 ubox
40 46 0.007731999 ubox
41 45 0.006548777 ubox
41 47 0.011606780 ubox
42 46 0.012002893 ubox
42 53 0.003388087 ubox
42 63 0.006540654 ubox
43 49 0.003826372 ubox
43 50 0.010223719 ubox
43 52 0.004629196 ubox
43 60 0.005065177 ubox
43 63 0.024472624 ubox
44 49 0.010793283 ubox
44 50 0.004214724 ubox
44 59 0.003247466 ubox
44 60 0.027304055 ubox
44 63 0.103516408 ubox
45 49 0.004120580 ubox
45 50 0.006007150 ubox
45 52 0.003272289 ubox
45 59 0.030937660 ubox
45 60 0.008260103 ubox
45 63 0.138173834 ubox
46 55 0.003368640 ubox
46 58 0.031386287 ubox
46 61 0.849061601 ubox
46 62 0.196895195 ubox
46 64 0.091349144 ubox
46 65 0.035470923 ubox
47 56 0.011179216 ubox
47 59 0.008209106 ubox
47 60 0.920474848 ubox
47 63 0.068052882 ubox
48 56 0.009676420 ubox
48 59 0.951125408 ubox
48 60 0.012534822 ubox
48 63 0.178015633 ubox
49 55 0.017629913 ubox
49 58 0.956481308 ubox
49 61 0.007606687 ubox
49 62 0.246356922 ubox
49 64 0.027135942 ubox
49 65 0.015974034 ubox
50 54 0.015248728 ubox
50 55 0.009545470 ubox
50 57 0.948935792 ubox
50 61 0.246410590 ubox
51 56 0.903618016 ubox
51 59 0.067166524 ubox
51 60 0.234335769 ubox
51 63 0.053487029 ubox
52 57 0.009376346 ubox
52 58 0.091105822 ubox
52 62 0.070805454 ubox
52 64 0.004898237 ubox
52 65 0.096999041 ubox
53 57 0.059297676 ubox
53 58 0.092848858 ubox
53 61 0.070835371 ubox
53 62 0.011137566 ubox
53 64 0.098132460 ubox
54 59 0.003939919 ubox
54 60 0.070104148 ubox
54 63 0.091240041 ubox
55 59 0.058430281 ubox
55 60 0.014188634 ubox
55 63 0.034888762 ubox
56 61 0.016453295 ubox
56 62 0.049289167 ubox
56 64 0.009814716 ubox
57 63 0.009164042 ubox
58 63 0.004859695 ubox
1 64 0.9500000 lbox
2 63 0.9500000 lbox
3 62 0.9500000 lbox
5 42 0.9500000 lbox
6 41 0.9500000 lbox
7 40 0.9500000 lbox
8 39 0.9500000 lbox
9 38 0.9500000 lbox
10 37 0.9500000 lbox
11 36 0.9500000 lbox
12 35 0.9500000 lbox
13 34 0.9500000 lbox
20 33 0.9500000 lbox
21 32 0.9500000 lbox
22 31 0.9500000 lbox
23 30 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
51 56 0.9500000 lbox
showpage
end
%%EOF
