%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5l3p_y)
} def

/sequence { (\
GCUGAUAUAGCUCAGUUGGUAGAGCGCACCCUUGGUGAGGGUGAGGUCGGCAGUUCGAAUCUGCCUAUCAGCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.069441104 ubox
1 16 0.011415799 ubox
1 72 0.996522280 ubox
2 10 0.069561226 ubox
2 15 0.013434949 ubox
2 71 0.997268732 ubox
3 9 0.068873154 ubox
3 14 0.018699897 ubox
3 70 0.997033009 ubox
4 8 0.057336769 ubox
4 13 0.019452617 ubox
4 69 0.997159769 ubox
5 12 0.018379445 ubox
5 68 0.995324140 ubox
6 21 0.012697661 ubox
6 67 0.988259779 ubox
7 16 0.006582160 ubox
7 20 0.017432489 ubox
7 47 0.003716716 ubox
7 66 0.933299413 ubox
7 68 0.010931406 ubox
8 14 0.005076762 ubox
8 15 0.009099834 ubox
8 18 0.120474559 ubox
8 19 0.015920972 ubox
8 21 0.248946518 ubox
8 26 0.044741325 ubox
8 44 0.004267776 ubox
8 45 0.003339324 ubox
8 46 0.005128612 ubox
8 63 0.009119026 ubox
8 67 0.023976933 ubox
9 16 0.009816015 ubox
9 17 0.136095992 ubox
9 20 0.262058081 ubox
9 47 0.003351576 ubox
9 62 0.009898273 ubox
9 66 0.029453413 ubox
10 16 0.140687551 ubox
10 17 0.005566565 ubox
10 20 0.221375429 ubox
10 25 0.903370822 ubox
10 61 0.009810748 ubox
10 64 0.013754374 ubox
10 65 0.003537490 ubox
11 15 0.140227591 ubox
11 18 0.270087015 ubox
11 19 0.226960236 ubox
11 22 0.008280413 ubox
11 24 0.906216654 ubox
11 63 0.013784544 ubox
12 18 0.199076901 ubox
12 19 0.049600801 ubox
12 21 0.010987144 ubox
12 23 0.906138282 ubox
12 58 0.010573857 ubox
13 18 0.108336904 ubox
13 19 0.019103611 ubox
13 22 0.905996748 ubox
13 57 0.010821603 ubox
13 63 0.003389166 ubox
14 20 0.138692686 ubox
14 55 0.007547491 ubox
14 60 0.003409955 ubox
14 62 0.003773428 ubox
15 20 0.045369458 ubox
15 25 0.016438714 ubox
15 54 0.007234573 ubox
15 56 0.005780917 ubox
15 61 0.003808154 ubox
15 72 0.072085255 ubox
16 21 0.036159098 ubox
16 24 0.016445346 ubox
16 53 0.008396469 ubox
16 58 0.010828265 ubox
16 71 0.072281997 ubox
17 21 0.010473002 ubox
17 22 0.003587421 ubox
17 23 0.016293039 ubox
17 26 0.003557139 ubox
17 52 0.009200574 ubox
17 57 0.011040167 ubox
17 70 0.073022790 ubox
18 25 0.005002406 ubox
18 51 0.009069849 ubox
18 56 0.011089644 ubox
18 65 0.008836672 ubox
18 69 0.073212662 ubox
19 25 0.004481218 ubox
19 48 0.003223332 ubox
19 51 0.011987787 ubox
19 55 0.007640508 ubox
19 64 0.008845890 ubox
19 68 0.072992152 ubox
20 24 0.004205416 ubox
20 49 0.005840687 ubox
20 50 0.011651723 ubox
20 63 0.008841619 ubox
20 67 0.072810516 ubox
21 62 0.008834170 ubox
21 66 0.069932607 ubox
22 48 0.419503221 ubox
22 61 0.008820537 ubox
22 65 0.012911199 ubox
23 47 0.419014149 ubox
23 60 0.008241616 ubox
24 47 0.030616880 ubox
24 48 0.007920541 ubox
24 64 0.012065714 ubox
25 45 0.419312465 ubox
25 46 0.041758183 ubox
25 63 0.012054588 ubox
26 47 0.029275212 ubox
26 48 0.057422931 ubox
26 62 0.003762341 ubox
27 37 0.008711100 ubox
27 43 0.995886628 ubox
27 45 0.013326122 ubox
27 46 0.025893715 ubox
28 36 0.008759751 ubox
28 42 0.999396231 ubox
29 35 0.008766115 ubox
29 41 0.999893540 ubox
29 43 0.004625831 ubox
30 34 0.008702445 ubox
30 40 0.999875955 ubox
30 41 0.009473919 ubox
30 46 0.003374538 ubox
31 39 0.999822750 ubox
31 40 0.011874945 ubox
31 45 0.003448298 ubox
32 37 0.037705061 ubox
32 38 0.990079337 ubox
32 39 0.013781532 ubox
32 44 0.003499540 ubox
33 37 0.892193434 ubox
33 38 0.062784705 ubox
33 43 0.003467231 ubox
34 42 0.003234150 ubox
39 48 0.003775457 ubox
39 66 0.003799403 ubox
40 47 0.003553562 ubox
40 65 0.004834862 ubox
41 64 0.004845479 ubox
42 63 0.004706921 ubox
43 48 0.019292614 ubox
44 62 0.031081989 ubox
44 66 0.015171655 ubox
45 61 0.032056929 ubox
45 65 0.017232754 ubox
45 66 0.008674939 ubox
45 69 0.014774311 ubox
46 60 0.031804910 ubox
46 64 0.016741725 ubox
46 65 0.005484845 ubox
46 66 0.011353840 ubox
46 68 0.025207829 ubox
47 58 0.025682481 ubox
47 59 0.022556240 ubox
47 63 0.010147635 ubox
47 67 0.029083233 ubox
48 57 0.035116368 ubox
48 63 0.011085575 ubox
49 56 0.034982364 ubox
49 61 0.006536294 ubox
49 62 0.011117399 ubox
49 65 0.997837649 ubox
49 66 0.003502344 ubox
50 55 0.024734070 ubox
50 60 0.005179045 ubox
50 61 0.011062356 ubox
50 64 0.999105232 ubox
50 65 0.003363217 ubox
51 57 0.003653405 ubox
51 63 0.999121190 ubox
52 60 0.006910391 ubox
52 62 0.998706905 ubox
53 60 0.020126346 ubox
53 61 0.997230599 ubox
54 58 0.020137219 ubox
54 59 0.120275459 ubox
55 59 0.152210807 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
