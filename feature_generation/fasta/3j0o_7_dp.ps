%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:30 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3j0o_7)
} def

/sequence { (\
GCUUGUGGCAGUCAAGCGUUCAUAGCGACAUUGCUUUUUGAUUCUUCGAU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.006214491 ubox
1 9 0.140781157 ubox
1 12 0.007339400 ubox
1 13 0.004460670 ubox
1 17 0.822611503 ubox
1 26 0.088605201 ubox
1 29 0.004572339 ubox
1 34 0.128315664 ubox
1 36 0.005293576 ubox
1 38 0.004126418 ubox
1 39 0.007428252 ubox
1 42 0.011574878 ubox
1 43 0.005276573 ubox
1 44 0.018235691 ubox
1 47 0.008101955 ubox
1 50 0.012676488 ubox
2 7 0.033486964 ubox
2 8 0.140662069 ubox
2 11 0.009173033 ubox
2 16 0.823310460 ubox
2 25 0.088363435 ubox
2 27 0.005568270 ubox
2 33 0.128461968 ubox
2 40 0.114006103 ubox
2 48 0.009350623 ubox
3 7 0.126740057 ubox
3 10 0.008532953 ubox
3 11 0.004366126 ubox
3 15 0.822794764 ubox
3 24 0.069365888 ubox
3 25 0.012555779 ubox
3 40 0.023679079 ubox
3 41 0.034107275 ubox
3 48 0.004079499 ubox
3 49 0.166844107 ubox
4 10 0.007668141 ubox
4 14 0.822177728 ubox
4 15 0.003628005 ubox
4 22 0.034919256 ubox
4 24 0.055842154 ubox
4 30 0.128466470 ubox
4 40 0.035918399 ubox
4 41 0.014878748 ubox
4 48 0.180030382 ubox
4 49 0.007163636 ubox
5 9 0.008349494 ubox
5 12 0.008424782 ubox
5 13 0.821608872 ubox
5 17 0.003697948 ubox
5 21 0.036550318 ubox
5 23 0.078153334 ubox
5 29 0.130704945 ubox
5 31 0.007785052 ubox
5 34 0.007396800 ubox
5 35 0.005408657 ubox
5 36 0.031919171 ubox
5 37 0.124484890 ubox
5 38 0.022810306 ubox
5 39 0.028004640 ubox
5 42 0.009373977 ubox
5 44 0.005633789 ubox
5 47 0.186533653 ubox
5 50 0.011976657 ubox
6 10 0.016178226 ubox
6 11 0.214453838 ubox
6 14 0.028753377 ubox
6 16 0.003583724 ubox
6 22 0.079538501 ubox
6 28 0.130359821 ubox
6 30 0.007890752 ubox
6 33 0.007299686 ubox
6 40 0.005263271 ubox
6 41 0.009855232 ubox
6 48 0.012238299 ubox
6 49 0.012940997 ubox
7 12 0.112223783 ubox
7 13 0.033931341 ubox
7 19 0.016006549 ubox
7 20 0.020654345 ubox
7 21 0.079228902 ubox
7 29 0.007581909 ubox
7 32 0.006351767 ubox
7 34 0.009782507 ubox
7 35 0.453823275 ubox
7 36 0.020355922 ubox
7 37 0.006059571 ubox
7 44 0.009786653 ubox
7 45 0.181011721 ubox
7 46 0.011102885 ubox
7 47 0.015870488 ubox
8 12 0.027263225 ubox
8 13 0.004434408 ubox
8 17 0.055470626 ubox
8 19 0.044674415 ubox
8 20 0.054623277 ubox
8 26 0.130678037 ubox
8 31 0.005700586 ubox
8 34 0.487667125 ubox
8 35 0.003367047 ubox
8 43 0.007235848 ubox
8 44 0.186754573 ubox
8 45 0.013047110 ubox
8 46 0.014135502 ubox
8 47 0.012470961 ubox
9 16 0.055736695 ubox
9 18 0.058666254 ubox
9 25 0.130529393 ubox
9 33 0.487925178 ubox
9 40 0.012270421 ubox
10 19 0.013189315 ubox
10 20 0.008920215 ubox
10 23 0.032435498 ubox
10 31 0.017645874 ubox
10 32 0.485197738 ubox
10 35 0.031502680 ubox
10 36 0.004629015 ubox
10 39 0.012415922 ubox
10 42 0.005634083 ubox
10 43 0.192630889 ubox
10 45 0.007067051 ubox
10 50 0.004946945 ubox
11 17 0.051941250 ubox
11 19 0.008714320 ubox
11 20 0.007147250 ubox
11 21 0.034185976 ubox
11 23 0.038765367 ubox
11 26 0.004135356 ubox
11 29 0.114158575 ubox
11 31 0.470790871 ubox
11 34 0.033680600 ubox
11 35 0.004929790 ubox
11 38 0.012006387 ubox
11 42 0.198278405 ubox
11 44 0.006948176 ubox
11 47 0.005849702 ubox
11 50 0.105524499 ubox
12 16 0.048627312 ubox
12 22 0.042013985 ubox
12 24 0.003455323 ubox
12 25 0.003924528 ubox
12 28 0.116206417 ubox
12 30 0.456797499 ubox
12 33 0.018028885 ubox
12 41 0.199019379 ubox
12 48 0.006263652 ubox
12 49 0.114125028 ubox
13 18 0.029174012 ubox
13 27 0.115959268 ubox
13 33 0.030329050 ubox
13 40 0.199092245 ubox
13 48 0.115712314 ubox
14 19 0.008859225 ubox
14 20 0.031173565 ubox
14 23 0.004559139 ubox
14 31 0.008276793 ubox
14 32 0.030817890 ubox
14 36 0.076555159 ubox
14 37 0.006878361 ubox
14 38 0.013177475 ubox
14 39 0.184631358 ubox
14 46 0.111847428 ubox
15 19 0.025348436 ubox
15 20 0.008513249 ubox
15 23 0.004242396 ubox
15 31 0.030132217 ubox
15 32 0.003910479 ubox
15 35 0.147269131 ubox
15 36 0.010225385 ubox
15 37 0.014356373 ubox
15 38 0.132775729 ubox
15 39 0.003704510 ubox
15 45 0.113960838 ubox
15 46 0.023015039 ubox
16 20 0.003214569 ubox
16 21 0.008122808 ubox
16 26 0.451395136 ubox
16 29 0.081615299 ubox
16 31 0.005706990 ubox
16 34 0.164589286 ubox
16 35 0.003984459 ubox
16 36 0.015344476 ubox
16 37 0.086555271 ubox
16 38 0.004581647 ubox
16 44 0.113890706 ubox
16 45 0.021942303 ubox
17 25 0.451556269 ubox
17 27 0.193733662 ubox
17 33 0.164669238 ubox
17 40 0.006547743 ubox
17 48 0.006826556 ubox
18 23 0.017056437 ubox
18 26 0.199114922 ubox
18 29 0.099326433 ubox
18 31 0.031378230 ubox
18 32 0.142721679 ubox
18 34 0.032432877 ubox
18 35 0.012967240 ubox
18 36 0.021964989 ubox
18 37 0.007520845 ubox
18 38 0.012652808 ubox
18 39 0.016067718 ubox
18 42 0.166932391 ubox
18 43 0.156156971 ubox
18 44 0.194561794 ubox
18 45 0.020019041 ubox
18 46 0.006588441 ubox
18 47 0.023568688 ubox
18 50 0.016693786 ubox
19 24 0.051654733 ubox
19 25 0.196904730 ubox
19 28 0.097289613 ubox
19 30 0.043547193 ubox
19 33 0.031974539 ubox
19 40 0.032056755 ubox
19 41 0.159294608 ubox
19 48 0.006042372 ubox
19 49 0.017472166 ubox
20 24 0.150207061 ubox
20 25 0.006763165 ubox
20 27 0.089146531 ubox
20 28 0.123384644 ubox
20 30 0.023636970 ubox
20 40 0.139258895 ubox
20 41 0.540438596 ubox
20 48 0.012328490 ubox
20 49 0.032581629 ubox
21 25 0.013574827 ubox
21 27 0.128267323 ubox
21 33 0.021209575 ubox
21 40 0.574269143 ubox
21 48 0.034864851 ubox
22 31 0.018601088 ubox
22 32 0.020952452 ubox
22 35 0.007185917 ubox
22 36 0.061409967 ubox
22 37 0.179344233 ubox
22 38 0.067651520 ubox
22 39 0.554696634 ubox
22 42 0.009420023 ubox
22 46 0.003789623 ubox
22 50 0.005910919 ubox
23 27 0.006859114 ubox
23 28 0.010000751 ubox
23 30 0.018403426 ubox
23 33 0.005178019 ubox
23 40 0.005133790 ubox
23 41 0.009992458 ubox
23 49 0.005964006 ubox
24 31 0.008093687 ubox
24 32 0.005961605 ubox
24 35 0.782863591 ubox
24 36 0.052908814 ubox
24 37 0.045011095 ubox
24 38 0.010619548 ubox
24 39 0.003886090 ubox
24 45 0.022900593 ubox
24 46 0.003347772 ubox
24 50 0.005434142 ubox
25 29 0.008212603 ubox
25 31 0.005296413 ubox
25 34 0.825707271 ubox
25 35 0.009265617 ubox
25 36 0.019359772 ubox
25 37 0.003231351 ubox
25 44 0.023161891 ubox
25 45 0.003671841 ubox
25 50 0.005298289 ubox
26 33 0.825604363 ubox
26 40 0.009623616 ubox
26 48 0.052027031 ubox
27 31 0.015141570 ubox
27 32 0.628586516 ubox
27 34 0.026182565 ubox
27 36 0.008125433 ubox
27 37 0.004155725 ubox
27 38 0.003914555 ubox
27 39 0.009683031 ubox
27 42 0.007751472 ubox
27 43 0.013618092 ubox
27 44 0.017706616 ubox
27 47 0.053532040 ubox
28 32 0.026824081 ubox
28 35 0.008087792 ubox
28 36 0.004278062 ubox
28 37 0.004539969 ubox
28 38 0.009325491 ubox
28 42 0.014180423 ubox
28 43 0.017000659 ubox
28 45 0.003277729 ubox
28 46 0.052311776 ubox
29 33 0.008429013 ubox
29 40 0.039975214 ubox
30 36 0.007597790 ubox
30 37 0.006986406 ubox
30 39 0.039908172 ubox
30 42 0.025208300 ubox
30 43 0.005273335 ubox
30 45 0.004098790 ubox
30 50 0.007046384 ubox
31 41 0.025723032 ubox
31 49 0.007892477 ubox
32 40 0.025252580 ubox
32 41 0.013254736 ubox
32 48 0.008014531 ubox
33 39 0.017249060 ubox
33 42 0.006776036 ubox
33 47 0.007791325 ubox
34 40 0.038853888 ubox
35 40 0.005121806 ubox
35 41 0.004946956 ubox
35 49 0.006248191 ubox
36 40 0.005627008 ubox
36 41 0.004637397 ubox
36 48 0.006939302 ubox
36 49 0.018724902 ubox
37 48 0.015891291 ubox
37 49 0.040997696 ubox
38 48 0.031831067 ubox
38 49 0.633653106 ubox
39 48 0.685189526 ubox
39 49 0.019121930 ubox
40 44 0.009579331 ubox
40 45 0.005179759 ubox
40 46 0.010459592 ubox
40 47 0.712470027 ubox
41 45 0.013533855 ubox
41 46 0.696759850 ubox
41 50 0.029251092 ubox
42 48 0.005357714 ubox
42 49 0.036980827 ubox
43 48 0.035191828 ubox
43 49 0.068277129 ubox
44 48 0.072780134 ubox
45 49 0.006972111 ubox
1 17 0.9500000 lbox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
5 13 0.9500000 lbox
20 41 0.9500000 lbox
21 40 0.9500000 lbox
22 39 0.9500000 lbox
24 35 0.9500000 lbox
25 34 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
showpage
end
%%EOF
