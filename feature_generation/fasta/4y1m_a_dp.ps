%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:43 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4y1m_a)
} def

/sequence { (\
GAUUUGGGGAGUAGCCGAUUUCCGAAAGGAAAUGUACGUGUCAACAUUUUCGUUGAAAAACGUGGCACGUACGGACUGAAGAAAUUCAGUCAGGCGAGACCAUAUCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 103 0.003596139 ubox
1 105 0.004770397 ubox
1 106 0.977547385 ubox
1 107 0.030438107 ubox
2 12 0.003177894 ubox
2 103 0.010942770 ubox
2 105 0.980764610 ubox
3 11 0.003238322 ubox
3 27 0.003209812 ubox
3 102 0.008574917 ubox
3 104 0.899511144 ubox
4 10 0.003223872 ubox
4 18 0.004887619 ubox
4 26 0.003724159 ubox
4 97 0.003442976 ubox
4 102 0.016933963 ubox
4 104 0.053539801 ubox
5 17 0.006955407 ubox
5 24 0.003192542 ubox
5 25 0.003793391 ubox
5 96 0.003534745 ubox
5 102 0.958385739 ubox
5 104 0.044257954 ubox
6 16 0.007922840 ubox
6 23 0.003219158 ubox
6 95 0.003548785 ubox
6 101 0.970075316 ubox
6 103 0.047648947 ubox
6 106 0.010005230 ubox
6 107 0.027005888 ubox
7 15 0.007905493 ubox
7 16 0.013412156 ubox
7 22 0.003210259 ubox
7 23 0.003947487 ubox
7 100 0.966566085 ubox
7 101 0.183730166 ubox
7 103 0.013556787 ubox
7 105 0.009308832 ubox
7 106 0.027273558 ubox
7 107 0.006266608 ubox
8 15 0.014940578 ubox
8 16 0.058127241 ubox
8 21 0.003194577 ubox
8 22 0.003972363 ubox
8 100 0.199170172 ubox
8 101 0.154362960 ubox
8 105 0.016038307 ubox
8 106 0.006206637 ubox
8 107 0.015669669 ubox
9 15 0.058065216 ubox
9 16 0.006160304 ubox
9 20 0.003216862 ubox
9 21 0.003988826 ubox
9 100 0.154961843 ubox
9 101 0.008954408 ubox
9 105 0.005287058 ubox
9 106 0.015866711 ubox
10 19 0.003225149 ubox
10 20 0.004017936 ubox
10 103 0.004474877 ubox
10 105 0.015701356 ubox
11 19 0.004037402 ubox
11 95 0.037820793 ubox
11 100 0.019417567 ubox
11 101 0.005341469 ubox
12 18 0.003996239 ubox
12 94 0.035839301 ubox
12 96 0.143644039 ubox
12 97 0.312039847 ubox
12 98 0.023052797 ubox
12 99 0.021822452 ubox
13 103 0.003208571 ubox
14 95 0.996607360 ubox
15 93 0.006018852 ubox
15 94 0.997220946 ubox
16 93 0.995998572 ubox
16 94 0.004189116 ubox
16 96 0.004087080 ubox
17 33 0.039235703 ubox
17 91 0.020721700 ubox
17 95 0.004303095 ubox
18 33 0.913311315 ubox
18 90 0.006196602 ubox
19 31 0.013476207 ubox
19 32 0.969139359 ubox
19 92 0.005806865 ubox
20 30 0.011906843 ubox
20 31 0.992474432 ubox
20 32 0.012055746 ubox
21 29 0.006811387 ubox
21 30 0.998893125 ubox
21 31 0.009808727 ubox
22 28 0.006819421 ubox
22 29 0.999923018 ubox
23 28 0.999537868 ubox
23 29 0.004039987 ubox
28 107 0.003914369 ubox
29 106 0.003947129 ubox
30 105 0.003721523 ubox
33 73 0.286148774 ubox
34 72 0.998401944 ubox
35 71 0.999494693 ubox
36 70 0.999720952 ubox
37 69 0.999956309 ubox
38 68 0.999957620 ubox
39 67 0.999791153 ubox
40 66 0.999983609 ubox
41 56 0.015672573 ubox
41 65 0.999424888 ubox
42 55 0.023171035 ubox
42 64 0.998644506 ubox
42 65 0.012402458 ubox
43 49 0.003378834 ubox
43 50 0.004768095 ubox
43 54 0.025435266 ubox
43 63 0.964665199 ubox
44 48 0.004033282 ubox
44 49 0.006049162 ubox
44 50 0.004298339 ubox
44 53 0.031491647 ubox
44 63 0.225207734 ubox
45 52 0.031561653 ubox
45 55 0.007429291 ubox
45 62 0.315219408 ubox
45 64 0.016879224 ubox
46 50 0.003343243 ubox
46 54 0.007472582 ubox
46 63 0.019547162 ubox
47 56 0.013073076 ubox
47 57 0.037243927 ubox
47 58 0.094520448 ubox
47 59 0.809413181 ubox
47 60 0.199511855 ubox
47 62 0.011836558 ubox
48 55 0.013509080 ubox
48 56 0.040469956 ubox
48 57 0.099643818 ubox
48 58 0.865279771 ubox
48 59 0.202240706 ubox
48 60 0.020424219 ubox
48 62 0.004626769 ubox
49 55 0.040531588 ubox
49 56 0.098481619 ubox
49 57 0.875422580 ubox
49 58 0.196822424 ubox
49 59 0.021162100 ubox
49 60 0.010570292 ubox
49 62 0.004468437 ubox
49 64 0.008802305 ubox
50 55 0.088550627 ubox
50 56 0.878145694 ubox
50 57 0.176058646 ubox
50 58 0.019888983 ubox
50 59 0.010740618 ubox
50 62 0.006607427 ubox
51 55 0.872389373 ubox
51 62 0.412887490 ubox
52 61 0.415851292 ubox
53 59 0.005676514 ubox
53 60 0.414788851 ubox
54 58 0.006478444 ubox
54 59 0.407110312 ubox
54 60 0.008513224 ubox
54 62 0.005267362 ubox
55 61 0.005882508 ubox
72 93 0.004093041 ubox
73 91 0.055832939 ubox
73 95 0.005055129 ubox
74 90 0.029361845 ubox
74 91 0.996592617 ubox
75 90 0.999214520 ubox
76 89 0.999972552 ubox
77 88 0.999753355 ubox
78 87 0.999974966 ubox
79 85 0.009435368 ubox
79 86 0.995456297 ubox
80 85 0.948045862 ubox
80 86 0.014882199 ubox
81 85 0.014364990 ubox
93 100 0.005056473 ubox
93 101 0.010789210 ubox
94 100 0.010834685 ubox
96 106 0.005025293 ubox
97 105 0.004996403 ubox
1 106 0.9500000 lbox
2 105 0.9500000 lbox
3 104 0.9500000 lbox
5 102 0.9500000 lbox
6 101 0.9500000 lbox
7 100 0.9500000 lbox
14 95 0.9500000 lbox
15 94 0.9500000 lbox
16 93 0.9500000 lbox
18 33 0.9500000 lbox
19 32 0.9500000 lbox
20 31 0.9500000 lbox
21 30 0.9500000 lbox
22 29 0.9500000 lbox
23 28 0.9500000 lbox
34 72 0.9500000 lbox
35 71 0.9500000 lbox
36 70 0.9500000 lbox
37 69 0.9500000 lbox
38 68 0.9500000 lbox
39 67 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
43 63 0.9500000 lbox
47 59 0.9500000 lbox
48 58 0.9500000 lbox
49 57 0.9500000 lbox
50 56 0.9500000 lbox
51 55 0.9500000 lbox
74 91 0.9500000 lbox
75 90 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
80 85 0.9500000 lbox
showpage
end
%%EOF
