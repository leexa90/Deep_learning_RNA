%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:43 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGUCGUGACUGGCGAACAGGUGGGAAACCACCGGGGAGCGACCCUUGCCGCCCGCCUGGGCAA\
) def
/coor [
[180.91450500 171.26837158]
[168.99584961 162.16093445]
[157.07717896 153.05349731]
[145.15850830 143.94606018]
[133.23985291 134.83862305]
[121.32118225 125.73118591]
[109.40251923 116.62374878]
[95.02725983 118.43984985]
[83.51421356 109.64235687]
[81.49004364 95.29492188]
[69.57138062 86.18748474]
[62.70599365 89.31814575]
[55.25004959 90.16547394]
[47.93869019 88.67180634]
[41.48481369 85.00904846]
[36.50955963 79.55927277]
[33.48255157 72.87505341]
[32.67764664 65.62348175]
[34.14833069 58.51956558]
[37.72497559 52.25580215]
[29.50478935 39.70875168]
[21.28460121 27.16169930]
[13.06441307 14.61464691]
[4.84422588 2.06759453]
[-10.03312111 -4.83143377]
[-11.22736263 -21.18703842]
[2.49003482 -30.17397690]
[17.00778770 -22.54725647]
[17.39127731 -6.15259314]
[25.61146545 6.39445877]
[33.83165359 18.94151115]
[42.05184174 31.48856354]
[50.27202988 44.03561401]
[73.26823425 50.40099716]
[78.67881775 74.26881409]
[90.59748077 83.37625122]
[104.97274017 81.56015015]
[116.48578644 90.35764313]
[118.50995636 104.70507812]
[130.42861938 113.81251526]
[142.34729004 122.91995239]
[154.26594543 132.02738953]
[166.18461609 141.13482666]
[178.10328674 150.24226379]
[190.02194214 159.34970093]
[201.82124329 154.10041809]
[214.65521240 154.51535034]
[225.96047974 160.44747925]
[233.50691223 170.65417480]
[235.83753967 183.05703735]
[232.54951477 195.16488647]
[243.53355408 205.38012695]
[254.51757812 215.59536743]
[265.50161743 225.81059265]
[281.59768677 228.94877625]
[286.67138672 244.54331970]
[275.50329590 256.55191040]
[259.58221436 252.62112427]
[255.28636169 236.79463196]
[244.30233765 226.57939148]
[233.31831360 216.36415100]
[222.33427429 206.14891052]
[205.51252747 210.44172668]
[189.23670959 203.97525024]
] def
/pairs [
[1 45]
[2 44]
[3 43]
[4 42]
[5 41]
[6 40]
[7 39]
[10 36]
[11 35]
[20 33]
[21 32]
[22 31]
[23 30]
[24 29]
[51 62]
[52 61]
[53 60]
[54 59]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
