%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:51 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5hr7_c)
} def

/sequence { (\
CCCCUUCGUCUAGAGGCCCAGGACACCGCCCUUUCACGGCGGUAACAGGGGUUCGAAUCCCCUAGGGGAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 16 0.009770864 ubox
1 51 0.028341536 ubox
1 66 0.004857173 ubox
1 67 0.031469483 ubox
1 68 0.981220671 ubox
2 8 0.003170529 ubox
2 15 0.010727040 ubox
2 16 0.011114239 ubox
2 50 0.028627863 ubox
2 51 0.004978924 ubox
2 65 0.004859010 ubox
2 66 0.031380333 ubox
2 67 0.985634104 ubox
2 68 0.127519620 ubox
3 8 0.003444052 ubox
3 15 0.011708951 ubox
3 16 0.031182781 ubox
3 22 0.009519160 ubox
3 49 0.028627531 ubox
3 50 0.004995406 ubox
3 65 0.030665486 ubox
3 66 0.985647983 ubox
3 67 0.127813272 ubox
3 68 0.010595999 ubox
4 13 0.018356077 ubox
4 15 0.033337938 ubox
4 16 0.038620889 ubox
4 21 0.011440606 ubox
4 22 0.005782118 ubox
4 48 0.028609701 ubox
4 49 0.004988473 ubox
4 65 0.985229666 ubox
4 66 0.127762613 ubox
4 67 0.010600642 ubox
4 68 0.004336791 ubox
5 12 0.018388606 ubox
5 14 0.030942106 ubox
5 15 0.055097216 ubox
5 20 0.012163114 ubox
5 21 0.007190736 ubox
5 22 0.003373300 ubox
5 23 0.015951635 ubox
5 47 0.026745825 ubox
5 48 0.004890572 ubox
5 57 0.054325586 ubox
5 64 0.947937749 ubox
5 65 0.123908365 ubox
5 66 0.009818362 ubox
5 67 0.004323798 ubox
5 69 0.005472405 ubox
6 13 0.026895181 ubox
6 14 0.093859797 ubox
6 16 0.016860024 ubox
6 20 0.009500030 ubox
6 21 0.006835219 ubox
6 22 0.024440523 ubox
6 23 0.027797290 ubox
6 25 0.015551659 ubox
6 42 0.012832913 ubox
6 45 0.003293591 ubox
6 47 0.004304748 ubox
6 56 0.091336649 ubox
6 57 0.006034756 ubox
6 64 0.108354946 ubox
6 65 0.007329779 ubox
6 66 0.004609849 ubox
6 68 0.005614874 ubox
6 69 0.040931970 ubox
7 13 0.097855822 ubox
7 15 0.023067931 ubox
7 16 0.011449233 ubox
7 21 0.027871763 ubox
7 22 0.029981172 ubox
7 38 0.003919931 ubox
7 41 0.017033012 ubox
7 55 0.091963227 ubox
7 65 0.006089593 ubox
7 67 0.005777374 ubox
7 68 0.044267075 ubox
8 17 0.127020173 ubox
8 18 0.010001863 ubox
8 19 0.005196334 ubox
8 24 0.582877728 ubox
8 37 0.003937929 ubox
8 40 0.017134384 ubox
8 46 0.003254223 ubox
8 54 0.086989038 ubox
8 58 0.100286399 ubox
8 59 0.320016422 ubox
8 60 0.153335054 ubox
8 61 0.312673795 ubox
8 62 0.102756501 ubox
8 63 0.010686388 ubox
8 70 0.004384224 ubox
9 13 0.004689400 ubox
9 14 0.005588829 ubox
9 16 0.127029895 ubox
9 20 0.013380681 ubox
9 22 0.047590512 ubox
9 23 0.582738178 ubox
9 36 0.003806054 ubox
9 39 0.017096666 ubox
9 55 0.005883470 ubox
9 56 0.139648004 ubox
9 57 0.104850698 ubox
9 66 0.044324046 ubox
9 69 0.004340445 ubox
10 15 0.125301712 ubox
10 16 0.014495512 ubox
10 21 0.077372816 ubox
10 22 0.580527212 ubox
10 38 0.017030298 ubox
10 55 0.141314696 ubox
10 65 0.047452094 ubox
10 68 0.004215602 ubox
11 15 0.013246487 ubox
11 16 0.005209262 ubox
11 20 0.092350936 ubox
11 21 0.552942109 ubox
11 36 0.005734878 ubox
11 55 0.027271584 ubox
11 56 0.123808366 ubox
11 57 0.089861733 ubox
11 64 0.049311255 ubox
12 32 0.003766986 ubox
12 34 0.014829100 ubox
12 53 0.011310347 ubox
12 58 0.033486382 ubox
12 63 0.051772127 ubox
13 17 0.058102964 ubox
13 18 0.179233600 ubox
13 19 0.318894749 ubox
13 24 0.003672976 ubox
13 31 0.003898162 ubox
13 33 0.015444564 ubox
13 35 0.006603039 ubox
13 52 0.004058742 ubox
13 53 0.008595188 ubox
13 54 0.731190452 ubox
13 58 0.004031211 ubox
13 59 0.038898414 ubox
13 61 0.003197677 ubox
13 62 0.051422527 ubox
14 32 0.015518760 ubox
14 34 0.006468951 ubox
14 52 0.005745247 ubox
14 53 0.724989717 ubox
14 58 0.038828938 ubox
14 63 0.010284679 ubox
15 19 0.058182987 ubox
15 24 0.038879366 ubox
15 30 0.008912218 ubox
15 31 0.014694585 ubox
15 33 0.003217432 ubox
15 52 0.686735747 ubox
15 53 0.225447972 ubox
15 54 0.177785541 ubox
15 59 0.003893721 ubox
15 60 0.039169323 ubox
15 61 0.030464968 ubox
15 62 0.010462346 ubox
16 24 0.020942322 ubox
16 29 0.010317307 ubox
16 30 0.013735519 ubox
16 52 0.354061317 ubox
16 53 0.125559390 ubox
16 54 0.007291823 ubox
16 59 0.037257648 ubox
16 60 0.028870184 ubox
16 61 0.009884421 ubox
17 21 0.007350591 ubox
17 22 0.036834611 ubox
17 28 0.011502475 ubox
17 50 0.662614658 ubox
17 51 0.435553495 ubox
17 67 0.021215279 ubox
17 68 0.020560316 ubox
18 22 0.011626592 ubox
18 28 0.005664442 ubox
18 49 0.662666492 ubox
18 50 0.435615808 ubox
18 51 0.003208461 ubox
18 66 0.021310482 ubox
18 67 0.020609266 ubox
19 28 0.004506131 ubox
19 48 0.661863951 ubox
19 49 0.435528759 ubox
19 50 0.003189479 ubox
19 65 0.021304674 ubox
19 66 0.020564595 ubox
20 63 0.004434602 ubox
21 26 0.008125348 ubox
21 27 0.013363517 ubox
21 46 0.477595913 ubox
21 54 0.006957936 ubox
21 62 0.004416080 ubox
22 26 0.013162156 ubox
22 43 0.004121461 ubox
22 46 0.553851451 ubox
22 53 0.006966189 ubox
23 43 0.012475485 ubox
23 52 0.006971902 ubox
24 42 0.007237895 ubox
24 51 0.006956747 ubox
25 43 0.968173840 ubox
26 39 0.003347143 ubox
26 42 0.999599555 ubox
27 38 0.003351097 ubox
27 41 0.999806922 ubox
28 37 0.003339194 ubox
28 40 0.999815745 ubox
29 38 0.004633511 ubox
29 39 0.995469200 ubox
30 38 0.990073738 ubox
30 39 0.093148147 ubox
31 38 0.131568517 ubox
32 36 0.164200248 ubox
32 38 0.003191256 ubox
43 64 0.003169518 ubox
44 63 0.006400317 ubox
45 63 0.009193891 ubox
46 65 0.023982983 ubox
47 63 0.574304224 ubox
48 61 0.064999812 ubox
48 62 0.603158296 ubox
48 63 0.042245489 ubox
49 60 0.065910745 ubox
49 61 0.603222378 ubox
49 62 0.043780227 ubox
50 59 0.066599830 ubox
50 60 0.603147672 ubox
50 61 0.043773463 ubox
51 58 0.064775596 ubox
51 59 0.602434393 ubox
51 60 0.043707908 ubox
52 56 0.012269637 ubox
52 57 0.094270943 ubox
53 57 0.091770305 ubox
55 59 0.006154099 ubox
55 60 0.016454582 ubox
55 61 0.013325380 ubox
55 62 0.020169928 ubox
55 70 0.005830938 ubox
56 63 0.004725820 ubox
57 63 0.003167855 ubox
58 68 0.007739117 ubox
58 69 0.080475016 ubox
59 67 0.012502554 ubox
59 68 0.088138852 ubox
60 66 0.012606866 ubox
60 67 0.088169324 ubox
60 68 0.009491835 ubox
61 65 0.012564127 ubox
61 66 0.088092094 ubox
61 67 0.009571330 ubox
62 66 0.009556554 ubox
1 68 0.9500000 lbox
2 67 0.9500000 lbox
3 66 0.9500000 lbox
4 65 0.9500000 lbox
5 64 0.9500000 lbox
8 24 0.9500000 lbox
9 23 0.9500000 lbox
10 22 0.9500000 lbox
11 21 0.9500000 lbox
25 43 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
showpage
end
%%EOF
