%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:27 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2der_c)
} def

/sequence { (\
GUCCCCUUCGUCUAGAGGCCCAGGACACCGCCCUUUCACGGCGGUAACAGGGGUUCGAAUCCCCUAGGGGACGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.998727824 ubox
1 74 0.004408593 ubox
2 71 0.999652325 ubox
2 73 0.003216309 ubox
3 70 0.999974698 ubox
4 69 0.999967634 ubox
4 70 0.004738526 ubox
5 24 0.004350277 ubox
5 68 0.999944417 ubox
5 69 0.006400462 ubox
6 17 0.003546892 ubox
6 18 0.017993212 ubox
6 23 0.006290170 ubox
6 24 0.004192881 ubox
6 67 0.999503668 ubox
6 68 0.007705257 ubox
7 16 0.004500555 ubox
7 17 0.041571706 ubox
7 22 0.007800204 ubox
7 23 0.006026336 ubox
7 24 0.003385389 ubox
7 25 0.016008802 ubox
7 59 0.040047495 ubox
7 66 0.961655790 ubox
7 67 0.008552904 ubox
8 15 0.004609068 ubox
8 16 0.084915886 ubox
8 18 0.016942312 ubox
8 22 0.008844157 ubox
8 23 0.006875101 ubox
8 24 0.024569700 ubox
8 25 0.027978989 ubox
8 27 0.015653167 ubox
8 44 0.012030929 ubox
8 58 0.081602780 ubox
8 59 0.005963540 ubox
8 66 0.032023811 ubox
9 15 0.088245953 ubox
9 17 0.023010379 ubox
9 18 0.011371972 ubox
9 23 0.027961937 ubox
9 24 0.030133286 ubox
9 40 0.003900522 ubox
9 43 0.016385946 ubox
9 57 0.081993767 ubox
10 19 0.126240292 ubox
10 20 0.009913166 ubox
10 21 0.005183143 ubox
10 26 0.580821040 ubox
10 39 0.003918464 ubox
10 42 0.016489984 ubox
10 56 0.077556887 ubox
10 60 0.101372541 ubox
10 61 0.323858440 ubox
10 62 0.153619705 ubox
10 63 0.316844801 ubox
10 64 0.098139824 ubox
10 65 0.010247508 ubox
11 15 0.004661659 ubox
11 16 0.005532152 ubox
11 18 0.126248502 ubox
11 22 0.013448112 ubox
11 24 0.047420079 ubox
11 25 0.580681766 ubox
11 38 0.003787234 ubox
11 41 0.016453694 ubox
11 57 0.005824179 ubox
11 58 0.140070012 ubox
11 59 0.105913562 ubox
12 17 0.124524329 ubox
12 18 0.014427123 ubox
12 23 0.077100953 ubox
12 24 0.578478473 ubox
12 40 0.016389832 ubox
12 57 0.141652427 ubox
12 67 0.007106836 ubox
13 17 0.013182442 ubox
13 18 0.005196407 ubox
13 22 0.092026125 ubox
13 23 0.550990721 ubox
13 38 0.005519243 ubox
13 57 0.027296224 ubox
13 58 0.124821502 ubox
13 59 0.090547372 ubox
13 66 0.014145102 ubox
14 34 0.003672173 ubox
14 36 0.014282029 ubox
14 55 0.011078712 ubox
14 60 0.033273675 ubox
14 65 0.021132019 ubox
15 19 0.057898642 ubox
15 20 0.178603291 ubox
15 21 0.317769587 ubox
15 26 0.003657232 ubox
15 33 0.003800791 ubox
15 35 0.014876365 ubox
15 37 0.006355108 ubox
15 54 0.003974231 ubox
15 55 0.008085896 ubox
15 56 0.736728671 ubox
15 60 0.004002133 ubox
15 61 0.038555675 ubox
15 64 0.021053513 ubox
16 34 0.014948042 ubox
16 36 0.006226055 ubox
16 54 0.005445531 ubox
16 55 0.730410201 ubox
16 60 0.038449878 ubox
16 65 0.010236891 ubox
17 21 0.057980766 ubox
17 26 0.038934764 ubox
17 32 0.008616023 ubox
17 33 0.014154177 ubox
17 54 0.691863755 ubox
17 55 0.223022954 ubox
17 56 0.179520125 ubox
17 62 0.016446198 ubox
17 63 0.012747196 ubox
17 64 0.010401655 ubox
18 26 0.020966489 ubox
18 31 0.009965151 ubox
18 32 0.013230381 ubox
18 54 0.353121786 ubox
18 55 0.126774134 ubox
18 56 0.007170752 ubox
18 61 0.015644096 ubox
18 62 0.012089264 ubox
18 63 0.009823680 ubox
19 23 0.007244822 ubox
19 24 0.036483970 ubox
19 30 0.011103797 ubox
19 52 0.667270653 ubox
19 53 0.432876733 ubox
20 24 0.011539946 ubox
20 30 0.005456270 ubox
20 51 0.667320606 ubox
20 52 0.432928055 ubox
21 30 0.004340369 ubox
21 50 0.666511374 ubox
21 51 0.432842549 ubox
23 28 0.007841442 ubox
23 29 0.012880787 ubox
23 48 0.480487994 ubox
24 28 0.012686771 ubox
24 45 0.004132633 ubox
24 48 0.553985017 ubox
25 45 0.012533556 ubox
26 44 0.007271125 ubox
27 45 0.968258148 ubox
28 41 0.003355255 ubox
28 44 0.999611749 ubox
29 40 0.003359190 ubox
29 43 0.999818040 ubox
30 39 0.003347250 ubox
30 42 0.999826774 ubox
31 40 0.004633569 ubox
31 41 0.995480218 ubox
32 40 0.990084665 ubox
32 41 0.093149157 ubox
33 40 0.131569954 ubox
34 38 0.164202063 ubox
34 40 0.003177097 ubox
46 65 0.006357949 ubox
47 65 0.009165066 ubox
48 67 0.014925240 ubox
49 65 0.572000696 ubox
50 63 0.064556974 ubox
50 64 0.600762641 ubox
50 65 0.042090506 ubox
51 62 0.065411223 ubox
51 63 0.600825664 ubox
51 64 0.043618576 ubox
52 61 0.066099059 ubox
52 62 0.600750958 ubox
52 63 0.043611488 ubox
53 60 0.064288192 ubox
53 61 0.600040095 ubox
53 62 0.043545845 ubox
54 58 0.012203676 ubox
54 59 0.093752205 ubox
55 59 0.091402745 ubox
57 61 0.005988040 ubox
57 62 0.016160261 ubox
57 63 0.012998092 ubox
57 64 0.020136892 ubox
58 65 0.004722336 ubox
59 65 0.003167708 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
