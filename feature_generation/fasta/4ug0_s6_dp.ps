%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4ug0_s6)
} def

/sequence { (\
GCAGAGUGGCGCAGCGGAAGCGUGCUGGGCCCAUAACCCAGAGGUCGAUGGAUCGAAACCAUCCUCUGCUACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.004336828 ubox
1 37 0.007158547 ubox
1 38 0.006651488 ubox
1 69 0.995137582 ubox
1 70 0.009779473 ubox
1 72 0.005552086 ubox
1 73 0.006234620 ubox
2 6 0.004480148 ubox
2 68 0.996890688 ubox
3 34 0.004442995 ubox
3 67 0.996643543 ubox
3 70 0.008191234 ubox
4 32 0.005118414 ubox
4 34 0.013279753 ubox
4 37 0.008699140 ubox
4 38 0.008633332 ubox
4 66 0.996839685 ubox
4 69 0.008502670 ubox
4 73 0.008320071 ubox
5 34 0.016826363 ubox
5 65 0.994222581 ubox
5 70 0.005377496 ubox
6 32 0.147359112 ubox
6 34 0.133037195 ubox
6 37 0.014486002 ubox
6 62 0.018355057 ubox
6 63 0.009948189 ubox
6 64 0.970629714 ubox
6 69 0.005443573 ubox
6 72 0.010308473 ubox
7 27 0.077060435 ubox
7 33 0.264505918 ubox
7 35 0.031146475 ubox
7 36 0.016320249 ubox
7 61 0.051401586 ubox
7 71 0.010230984 ubox
8 26 0.130826789 ubox
8 30 0.004912285 ubox
8 31 0.952869725 ubox
8 32 0.240620698 ubox
8 34 0.005208748 ubox
8 46 0.008503924 ubox
8 60 0.054671509 ubox
8 62 0.007730479 ubox
8 63 0.044511732 ubox
8 70 0.009239926 ubox
8 73 0.003537976 ubox
9 15 0.003773512 ubox
9 23 0.031073351 ubox
9 25 0.139552784 ubox
9 30 0.972945358 ubox
9 31 0.170350526 ubox
9 45 0.008224711 ubox
9 59 0.048423851 ubox
9 62 0.011378989 ubox
9 69 0.009167618 ubox
9 72 0.003523654 ubox
10 14 0.003755688 ubox
10 22 0.034725958 ubox
10 24 0.146276887 ubox
10 27 0.003464676 ubox
10 28 0.007336520 ubox
10 29 0.987760022 ubox
10 44 0.008203906 ubox
10 68 0.009116592 ubox
11 21 0.034872521 ubox
11 23 0.146289289 ubox
11 25 0.026089661 ubox
11 30 0.006532526 ubox
11 69 0.003777563 ubox
12 20 0.034851226 ubox
12 22 0.145798227 ubox
12 24 0.027975515 ubox
12 27 0.987850382 ubox
12 28 0.005973370 ubox
12 29 0.005846347 ubox
12 68 0.003804221 ubox
13 23 0.025986904 ubox
13 26 0.987828268 ubox
13 67 0.003868179 ubox
14 21 0.148539257 ubox
14 23 0.021575331 ubox
14 25 0.987899797 ubox
14 66 0.003894998 ubox
15 20 0.148570917 ubox
15 22 0.037143825 ubox
15 24 0.987440785 ubox
16 21 0.072752473 ubox
16 23 0.911328130 ubox
16 64 0.003888690 ubox
17 21 0.105520554 ubox
17 23 0.017097054 ubox
17 63 0.003869868 ubox
18 23 0.008936056 ubox
18 62 0.003728327 ubox
19 23 0.003959317 ubox
20 45 0.004751616 ubox
21 44 0.005140377 ubox
23 42 0.005639964 ubox
25 41 0.058579851 ubox
26 40 0.070391452 ubox
26 56 0.005310528 ubox
27 38 0.007944338 ubox
27 39 0.082293845 ubox
27 46 0.006934534 ubox
27 54 0.004576770 ubox
28 37 0.008098217 ubox
28 38 0.082324924 ubox
28 39 0.003832941 ubox
28 45 0.005391156 ubox
28 46 0.128720656 ubox
28 53 0.004488471 ubox
28 54 0.011203196 ubox
29 37 0.082131739 ubox
29 38 0.003838423 ubox
29 45 0.129335376 ubox
29 46 0.004410707 ubox
29 53 0.010556707 ubox
30 43 0.003169713 ubox
30 44 0.129497185 ubox
31 43 0.129407781 ubox
31 44 0.020350145 ubox
31 51 0.064151343 ubox
32 41 0.126247779 ubox
32 43 0.032287127 ubox
32 44 0.012944506 ubox
32 47 0.016785090 ubox
32 50 0.080406959 ubox
33 45 0.013419498 ubox
33 49 0.080868113 ubox
34 40 0.034127233 ubox
34 41 0.020317636 ubox
34 42 0.008831207 ubox
34 43 0.007684303 ubox
34 44 0.011752710 ubox
34 47 0.013820926 ubox
34 48 0.079861467 ubox
34 71 0.009226905 ubox
35 45 0.035217687 ubox
35 70 0.010200974 ubox
36 45 0.893248926 ubox
36 53 0.003509595 ubox
36 70 0.005573398 ubox
37 41 0.012665450 ubox
37 43 0.029892545 ubox
37 44 0.946311927 ubox
38 43 0.943436361 ubox
38 44 0.152622012 ubox
38 51 0.026034850 ubox
38 68 0.003652450 ubox
39 43 0.153964977 ubox
39 44 0.027275130 ubox
39 50 0.026166712 ubox
39 55 0.003859168 ubox
39 68 0.076564985 ubox
40 45 0.010512863 ubox
40 49 0.026032477 ubox
40 62 0.004747378 ubox
40 67 0.077855495 ubox
40 70 0.005652600 ubox
41 45 0.003701034 ubox
41 46 0.042028970 ubox
41 60 0.011328629 ubox
41 62 0.012678930 ubox
41 63 0.070120075 ubox
41 66 0.078292750 ubox
41 69 0.005889514 ubox
42 62 0.070064834 ubox
42 65 0.078411234 ubox
43 54 0.072630813 ubox
43 59 0.009967167 ubox
43 60 0.094712950 ubox
43 64 0.078500851 ubox
43 65 0.003810234 ubox
43 67 0.006438177 ubox
44 53 0.073070624 ubox
44 59 0.094653962 ubox
44 60 0.004579256 ubox
44 63 0.066216904 ubox
44 64 0.006183091 ubox
44 66 0.007154672 ubox
45 52 0.073350045 ubox
45 56 0.085172480 ubox
45 57 0.012815420 ubox
45 58 0.059895696 ubox
46 51 0.073489224 ubox
46 55 0.111523411 ubox
47 54 0.111965892 ubox
47 60 0.007314488 ubox
47 62 0.006019205 ubox
47 63 0.981739330 ubox
47 64 0.012997420 ubox
48 53 0.099237754 ubox
48 62 0.985807950 ubox
49 56 0.003261155 ubox
49 58 0.005086360 ubox
49 61 0.986109130 ubox
50 59 0.014984828 ubox
50 60 0.986510670 ubox
50 64 0.032157893 ubox
51 59 0.984303396 ubox
51 60 0.010452524 ubox
51 63 0.046770882 ubox
52 62 0.046921213 ubox
53 57 0.160508936 ubox
53 58 0.173968382 ubox
53 61 0.045824247 ubox
55 59 0.017856512 ubox
55 60 0.038102315 ubox
55 63 0.034175672 ubox
55 64 0.003508656 ubox
56 62 0.032846398 ubox
57 62 0.003610828 ubox
70 74 0.006028397 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
8 31 0.9500000 lbox
9 30 0.9500000 lbox
10 29 0.9500000 lbox
12 27 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
36 45 0.9500000 lbox
37 44 0.9500000 lbox
38 43 0.9500000 lbox
47 63 0.9500000 lbox
48 62 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
showpage
end
%%EOF
