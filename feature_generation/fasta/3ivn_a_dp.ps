%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3ivn_a)
} def

/sequence { (\
GCCAGUAUAACCUCAAUGAUAUGGUUUGAGGGUGUCUACCAGGAACCGUAAAAUCCUGACUACUGGUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 67 0.906584185 ubox
1 68 0.119298385 ubox
2 66 0.999176073 ubox
3 65 0.999904837 ubox
4 37 0.011849267 ubox
4 61 0.004246038 ubox
4 64 0.999609961 ubox
5 36 0.013886605 ubox
5 39 0.011779597 ubox
5 60 0.005922344 ubox
5 63 0.999646363 ubox
6 34 0.010887845 ubox
6 38 0.013832712 ubox
6 59 0.006767901 ubox
6 62 0.991859051 ubox
7 17 0.003581750 ubox
7 33 0.021386448 ubox
7 35 0.235707801 ubox
7 37 0.014275312 ubox
7 61 0.917083931 ubox
8 15 0.005555012 ubox
8 16 0.004638656 ubox
8 18 0.004294299 ubox
8 32 0.024026396 ubox
8 34 0.334389190 ubox
8 38 0.014158155 ubox
8 58 0.021880936 ubox
8 59 0.112710345 ubox
8 62 0.032317733 ubox
9 17 0.005079461 ubox
9 26 0.022502376 ubox
9 33 0.243623759 ubox
9 35 0.017817252 ubox
9 37 0.013927761 ubox
9 57 0.022312215 ubox
9 61 0.055519684 ubox
10 17 0.005412055 ubox
10 25 0.026006625 ubox
10 33 0.149112085 ubox
10 35 0.013181521 ubox
10 37 0.006916946 ubox
10 57 0.031239165 ubox
10 61 0.028792087 ubox
11 18 0.013117221 ubox
11 24 0.026505260 ubox
11 31 0.806628950 ubox
11 32 0.128836808 ubox
11 34 0.008103604 ubox
11 58 0.101018738 ubox
12 18 0.040755907 ubox
12 23 0.026495754 ubox
12 30 0.813257744 ubox
12 31 0.096749006 ubox
12 32 0.004537265 ubox
12 58 0.168935097 ubox
13 18 0.003598857 ubox
13 19 0.025611296 ubox
13 29 0.817609530 ubox
13 30 0.045025558 ubox
13 31 0.004459173 ubox
13 53 0.003962136 ubox
13 58 0.013250667 ubox
13 59 0.427810680 ubox
14 18 0.027111570 ubox
14 23 0.004427800 ubox
14 28 0.818746907 ubox
14 30 0.006101208 ubox
14 58 0.436455007 ubox
15 20 0.004980275 ubox
15 22 0.004551780 ubox
15 26 0.209335175 ubox
15 27 0.787407187 ubox
15 54 0.032075811 ubox
15 57 0.416402037 ubox
16 22 0.012796376 ubox
16 25 0.297359473 ubox
16 26 0.734263351 ubox
16 27 0.017530296 ubox
16 54 0.370093594 ubox
16 57 0.056129065 ubox
17 21 0.014921528 ubox
17 23 0.035697998 ubox
17 24 0.361903171 ubox
17 28 0.005922715 ubox
17 50 0.006303667 ubox
17 51 0.034261505 ubox
17 52 0.062260396 ubox
17 53 0.396327453 ubox
18 22 0.026401998 ubox
18 25 0.065370579 ubox
18 26 0.090854105 ubox
18 27 0.021196979 ubox
18 36 0.009220239 ubox
18 49 0.004031304 ubox
18 54 0.057403944 ubox
18 55 0.267469704 ubox
18 56 0.015987622 ubox
18 60 0.004516468 ubox
19 25 0.113397756 ubox
19 26 0.032881642 ubox
19 27 0.003718290 ubox
19 35 0.009241431 ubox
19 49 0.010383017 ubox
19 54 0.267131753 ubox
19 57 0.003322395 ubox
20 24 0.106896141 ubox
20 34 0.009238730 ubox
20 48 0.008299544 ubox
20 50 0.529658289 ubox
20 51 0.021685582 ubox
20 52 0.014867299 ubox
20 53 0.172784464 ubox
20 58 0.004015632 ubox
21 25 0.009716273 ubox
21 26 0.011241256 ubox
21 33 0.009217945 ubox
21 49 0.570563327 ubox
21 57 0.004308703 ubox
22 32 0.009101539 ubox
22 48 0.571935956 ubox
22 51 0.005846773 ubox
23 47 0.572914173 ubox
23 55 0.007822932 ubox
23 56 0.005686378 ubox
24 46 0.572931027 ubox
24 54 0.007959017 ubox
24 55 0.005663234 ubox
25 44 0.008383475 ubox
25 45 0.572461144 ubox
25 53 0.009171521 ubox
26 42 0.005793410 ubox
26 43 0.011756107 ubox
26 44 0.571621060 ubox
26 45 0.010561018 ubox
26 52 0.009343878 ubox
27 41 0.009388727 ubox
27 42 0.015552368 ubox
27 43 0.567968962 ubox
27 44 0.014785061 ubox
27 51 0.008252743 ubox
27 59 0.011499918 ubox
28 36 0.010064925 ubox
28 39 0.006509811 ubox
28 40 0.010658075 ubox
29 35 0.009965683 ubox
29 37 0.010330661 ubox
29 49 0.009492509 ubox
29 57 0.015473967 ubox
30 36 0.010700443 ubox
30 37 0.010286188 ubox
30 39 0.015952468 ubox
30 40 0.514446385 ubox
30 56 0.015724368 ubox
31 35 0.006989115 ubox
31 36 0.012733895 ubox
31 37 0.012466656 ubox
31 39 0.513508528 ubox
31 40 0.251600359 ubox
31 47 0.019453016 ubox
31 55 0.015735251 ubox
31 61 0.004317270 ubox
32 36 0.041272559 ubox
32 37 0.034926468 ubox
32 39 0.363873174 ubox
32 40 0.008906181 ubox
32 46 0.022207050 ubox
32 47 0.007608769 ubox
32 54 0.015779531 ubox
32 60 0.048444264 ubox
32 61 0.009408904 ubox
32 63 0.003659765 ubox
33 38 0.342515680 ubox
33 41 0.005145257 ubox
33 45 0.021991549 ubox
33 53 0.015664600 ubox
33 59 0.048195600 ubox
33 62 0.004300009 ubox
34 39 0.069163915 ubox
34 40 0.009110781 ubox
34 46 0.007819608 ubox
34 60 0.182397598 ubox
34 61 0.003201845 ubox
35 43 0.010561491 ubox
35 44 0.020661193 ubox
35 45 0.005639610 ubox
35 51 0.003186149 ubox
35 52 0.003950217 ubox
35 59 0.182268626 ubox
36 42 0.013027925 ubox
36 43 0.022340708 ubox
36 58 0.144351216 ubox
37 41 0.011765039 ubox
37 42 0.021273173 ubox
37 50 0.018285042 ubox
37 58 0.003810768 ubox
37 59 0.018494506 ubox
37 62 0.009533157 ubox
38 49 0.018965976 ubox
38 57 0.009286203 ubox
38 61 0.014505193 ubox
38 67 0.007127571 ubox
39 48 0.018980550 ubox
39 58 0.026363162 ubox
39 66 0.007702979 ubox
40 58 0.803100762 ubox
40 65 0.007702025 ubox
41 57 0.818007838 ubox
41 64 0.007678413 ubox
42 47 0.003278012 ubox
42 56 0.818748327 ubox
42 63 0.007649118 ubox
43 55 0.818622556 ubox
44 49 0.005678668 ubox
44 54 0.777005031 ubox
45 49 0.021979438 ubox
45 54 0.062817612 ubox
47 58 0.006709997 ubox
48 54 0.015846848 ubox
48 55 0.006255182 ubox
48 57 0.006306200 ubox
48 60 0.009243997 ubox
49 53 0.026456804 ubox
49 58 0.004130235 ubox
49 59 0.008674703 ubox
50 57 0.005097896 ubox
51 57 0.006772339 ubox
52 57 0.006776182 ubox
53 57 0.003454207 ubox
54 59 0.003405925 ubox
59 67 0.003754824 ubox
60 66 0.003870443 ubox
61 65 0.003488263 ubox
1 67 0.9500000 lbox
2 66 0.9500000 lbox
3 65 0.9500000 lbox
4 64 0.9500000 lbox
5 63 0.9500000 lbox
6 62 0.9500000 lbox
7 61 0.9500000 lbox
11 31 0.9500000 lbox
12 30 0.9500000 lbox
13 29 0.9500000 lbox
14 28 0.9500000 lbox
15 27 0.9500000 lbox
16 26 0.9500000 lbox
40 58 0.9500000 lbox
41 57 0.9500000 lbox
42 56 0.9500000 lbox
43 55 0.9500000 lbox
44 54 0.9500000 lbox
showpage
end
%%EOF
