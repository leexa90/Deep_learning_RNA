%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:49 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5ddp_a)
} def

/sequence { (\
GUUGACCCAGGAAACUGGGCGGAAGUAAGGUCCAUUGCACUCCGGGCCUGAAGCAACGCG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.031766184 ubox
1 15 0.006172920 ubox
1 20 0.017232008 ubox
1 26 0.010056947 ubox
1 47 0.005672236 ubox
1 54 0.081528660 ubox
1 57 0.506646064 ubox
1 59 0.065760584 ubox
2 14 0.006172014 ubox
2 19 0.005727898 ubox
2 21 0.011949243 ubox
2 22 0.276581375 ubox
2 23 0.148371858 ubox
2 24 0.025906059 ubox
2 25 0.011198242 ubox
2 46 0.005635027 ubox
2 51 0.004616341 ubox
2 52 0.005981131 ubox
2 53 0.079872163 ubox
2 56 0.506523609 ubox
2 58 0.059384214 ubox
2 60 0.003317064 ubox
3 13 0.006135473 ubox
3 21 0.366334126 ubox
3 22 0.158585686 ubox
3 23 0.025862479 ubox
3 24 0.014242298 ubox
3 25 0.003473210 ubox
3 45 0.004840875 ubox
3 50 0.004863256 ubox
3 51 0.007027372 ubox
3 52 0.067969988 ubox
3 55 0.504921179 ubox
3 56 0.005604325 ubox
3 58 0.012963544 ubox
3 60 0.012234485 ubox
4 20 0.419600466 ubox
4 48 0.003239420 ubox
4 54 0.499616043 ubox
4 57 0.017600672 ubox
4 59 0.019956822 ubox
5 26 0.006674553 ubox
5 49 0.003760194 ubox
6 10 0.004592333 ubox
6 18 0.045541563 ubox
6 19 0.757769318 ubox
6 21 0.006025975 ubox
6 22 0.003492445 ubox
6 25 0.003609352 ubox
6 46 0.005663481 ubox
6 50 0.009122969 ubox
6 53 0.051677362 ubox
6 60 0.011070994 ubox
7 17 0.032446139 ubox
7 18 0.995998662 ubox
7 19 0.003346555 ubox
7 45 0.005698102 ubox
8 17 0.997509089 ubox
8 18 0.003314686 ubox
8 44 0.005672792 ubox
8 50 0.061162088 ubox
9 16 0.997667842 ubox
9 49 0.061353999 ubox
10 15 0.997003835 ubox
10 16 0.004427574 ubox
10 43 0.005616667 ubox
10 48 0.061376891 ubox
11 15 0.008353369 ubox
11 42 0.005620933 ubox
11 47 0.061220732 ubox
12 41 0.005475813 ubox
15 44 0.004239460 ubox
15 45 0.051321231 ubox
15 46 0.024765592 ubox
16 34 0.008359941 ubox
16 44 0.051392331 ubox
16 45 0.024674354 ubox
17 33 0.008827232 ubox
17 41 0.003963052 ubox
17 42 0.004270345 ubox
17 43 0.051398277 ubox
18 32 0.008832312 ubox
18 40 0.004412927 ubox
18 41 0.004499259 ubox
18 42 0.051274663 ubox
18 43 0.023583670 ubox
19 26 0.084922604 ubox
19 31 0.008854400 ubox
19 38 0.021121412 ubox
19 40 0.019616667 ubox
19 41 0.039241481 ubox
19 42 0.023662369 ubox
19 47 0.003956193 ubox
19 54 0.019938564 ubox
19 57 0.010103649 ubox
19 59 0.640291220 ubox
20 25 0.178961458 ubox
20 29 0.003872391 ubox
20 30 0.008839895 ubox
20 37 0.021369082 ubox
20 44 0.148007297 ubox
20 45 0.006863955 ubox
20 46 0.003900081 ubox
20 50 0.015133088 ubox
20 53 0.042153081 ubox
20 58 0.700730443 ubox
20 60 0.091098263 ubox
21 26 0.030930698 ubox
21 33 0.022353764 ubox
21 36 0.010152282 ubox
21 38 0.019847352 ubox
21 40 0.037064098 ubox
21 41 0.017572090 ubox
21 43 0.150486074 ubox
21 49 0.008510922 ubox
21 54 0.055489924 ubox
21 57 0.703792764 ubox
21 59 0.104984847 ubox
22 26 0.012995913 ubox
22 32 0.022540436 ubox
22 35 0.007826479 ubox
22 38 0.006696003 ubox
22 40 0.019671666 ubox
22 42 0.150489682 ubox
22 48 0.004701778 ubox
22 54 0.123901548 ubox
22 57 0.103971570 ubox
22 59 0.034420801 ubox
23 31 0.021544490 ubox
23 36 0.019234357 ubox
23 41 0.145173322 ubox
24 31 0.003696038 ubox
24 35 0.018794963 ubox
24 36 0.007864716 ubox
24 41 0.027862365 ubox
24 49 0.005322263 ubox
25 32 0.009020907 ubox
25 33 0.006342752 ubox
25 35 0.008903469 ubox
25 38 0.152289528 ubox
25 40 0.038695087 ubox
25 49 0.004243055 ubox
25 54 0.481248672 ubox
25 57 0.023752709 ubox
25 59 0.022583571 ubox
26 34 0.008888038 ubox
26 37 0.152619144 ubox
26 39 0.037323216 ubox
26 50 0.092489450 ubox
26 51 0.180015948 ubox
26 52 0.175669629 ubox
26 53 0.465645763 ubox
26 55 0.004028969 ubox
26 56 0.020654343 ubox
26 58 0.020666622 ubox
27 36 0.152672572 ubox
27 49 0.070506084 ubox
28 35 0.148273949 ubox
28 36 0.015006674 ubox
28 49 0.965566851 ubox
29 33 0.014359502 ubox
29 35 0.015021334 ubox
29 36 0.023531911 ubox
29 38 0.014535471 ubox
29 40 0.003907162 ubox
29 48 0.986705957 ubox
29 49 0.006484037 ubox
30 35 0.016151582 ubox
30 36 0.004786491 ubox
30 38 0.011867911 ubox
30 40 0.003208555 ubox
30 47 0.986810034 ubox
30 48 0.004948192 ubox
31 37 0.011334104 ubox
31 46 0.986150986 ubox
32 37 0.003320020 ubox
32 45 0.986428193 ubox
32 46 0.025935933 ubox
33 44 0.985624066 ubox
33 45 0.026029800 ubox
34 41 0.061892745 ubox
35 39 0.012700643 ubox
35 44 0.006852620 ubox
35 45 0.003326102 ubox
35 56 0.003538963 ubox
36 44 0.012617890 ubox
36 55 0.004099652 ubox
37 41 0.032348426 ubox
37 42 0.138687428 ubox
37 43 0.073632323 ubox
37 47 0.010044438 ubox
37 54 0.004203242 ubox
38 44 0.005945819 ubox
38 46 0.010212788 ubox
38 53 0.004194898 ubox
40 45 0.011015082 ubox
43 58 0.003834702 ubox
44 57 0.005559535 ubox
45 54 0.009678349 ubox
45 57 0.007060988 ubox
45 59 0.005146643 ubox
46 54 0.048508547 ubox
46 57 0.003611403 ubox
46 59 0.043106418 ubox
47 53 0.050476420 ubox
47 58 0.043079353 ubox
48 53 0.011843970 ubox
49 53 0.003640858 ubox
49 55 0.016328614 ubox
49 56 0.032420676 ubox
49 58 0.010400909 ubox
49 60 0.006701056 ubox
50 54 0.023337151 ubox
50 57 0.038281922 ubox
50 59 0.038454605 ubox
53 57 0.014554345 ubox
53 59 0.072900870 ubox
54 58 0.068283908 ubox
54 60 0.013473957 ubox
7 18 0.9500000 lbox
8 17 0.9500000 lbox
9 16 0.9500000 lbox
10 15 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
21 57 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 44 0.9500000 lbox
showpage
end
%%EOF
