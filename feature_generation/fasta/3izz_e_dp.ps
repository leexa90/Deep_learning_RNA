%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:30 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3izz_e)
} def

/sequence { (\
ACCGCCCGUCACGCCAUGGGAGCGGGCUCUACCCGAAGUCGCCGGGAGCCUACGGGCAGGCGCCGAGGGUAGGGCCCGUGACUGGGGCGAAGUCGUAAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 9 0.043307109 ubox
1 93 0.049520072 ubox
1 96 0.082747129 ubox
2 8 0.049672405 ubox
2 85 0.005455138 ubox
2 86 0.003988524 ubox
2 87 0.009042405 ubox
2 89 0.014090152 ubox
2 92 0.056370680 ubox
2 95 0.083388211 ubox
3 8 0.034379630 ubox
3 22 0.007067305 ubox
3 84 0.005468512 ubox
3 85 0.003963373 ubox
3 86 0.009329772 ubox
3 87 0.006499784 ubox
3 89 0.366461584 ubox
3 92 0.011490835 ubox
3 95 0.158088637 ubox
4 9 0.005266061 ubox
4 10 0.020808534 ubox
4 12 0.005764556 ubox
4 83 0.003983379 ubox
4 88 0.370486737 ubox
4 93 0.076646284 ubox
4 94 0.162005098 ubox
4 96 0.155137002 ubox
4 99 0.053775865 ubox
5 20 0.027552636 ubox
5 85 0.011017793 ubox
5 86 0.048439768 ubox
5 87 0.368209411 ubox
5 92 0.094970041 ubox
5 95 0.156122334 ubox
6 19 0.027658909 ubox
6 84 0.011061055 ubox
6 85 0.063499062 ubox
6 86 0.365817517 ubox
6 87 0.003220042 ubox
6 92 0.085879672 ubox
6 95 0.065263345 ubox
7 13 0.010515327 ubox
7 18 0.027768150 ubox
7 84 0.075544257 ubox
7 85 0.359620819 ubox
7 86 0.004466498 ubox
7 89 0.025946921 ubox
7 92 0.115366363 ubox
7 95 0.764209022 ubox
8 12 0.021679761 ubox
8 14 0.073166751 ubox
8 15 0.041151893 ubox
8 17 0.034304252 ubox
8 82 0.279527676 ubox
8 83 0.022056556 ubox
8 88 0.025760503 ubox
8 93 0.040219003 ubox
8 94 0.782671817 ubox
8 96 0.006196479 ubox
8 99 0.013962429 ubox
9 13 0.068696777 ubox
9 16 0.033512145 ubox
9 19 0.006977925 ubox
9 20 0.003906593 ubox
9 21 0.011925526 ubox
9 81 0.282743212 ubox
9 84 0.039078159 ubox
9 85 0.006098498 ubox
9 87 0.024712845 ubox
9 89 0.005397466 ubox
9 90 0.106075449 ubox
9 91 0.056203715 ubox
9 92 0.177737508 ubox
9 95 0.006105968 ubox
9 97 0.003386511 ubox
9 98 0.013728170 ubox
10 18 0.027663241 ubox
10 19 0.005563872 ubox
10 20 0.012698803 ubox
10 80 0.282946635 ubox
10 84 0.038513670 ubox
10 86 0.022836126 ubox
10 87 0.004319215 ubox
10 89 0.098739830 ubox
10 92 0.584822548 ubox
10 95 0.011438019 ubox
11 17 0.025793275 ubox
11 79 0.271171623 ubox
11 83 0.028233276 ubox
11 93 0.023040630 ubox
11 96 0.011660161 ubox
12 18 0.024968009 ubox
12 19 0.033021853 ubox
12 20 0.021593400 ubox
12 22 0.025500562 ubox
12 24 0.005261356 ubox
12 78 0.265141524 ubox
12 80 0.007701471 ubox
12 84 0.025726348 ubox
12 85 0.006191464 ubox
12 86 0.007264912 ubox
12 87 0.073056061 ubox
12 89 0.912862463 ubox
12 92 0.019191518 ubox
12 95 0.009972519 ubox
13 17 0.016064493 ubox
13 23 0.240518905 ubox
13 77 0.030672804 ubox
13 79 0.004733034 ubox
13 82 0.004901300 ubox
13 83 0.013023865 ubox
13 88 0.924587494 ubox
13 94 0.004362230 ubox
14 18 0.019624713 ubox
14 19 0.014614341 ubox
14 20 0.102478368 ubox
14 22 0.239881357 ubox
14 25 0.003668309 ubox
14 78 0.004107675 ubox
14 80 0.006015127 ubox
14 84 0.022855700 ubox
14 85 0.085282416 ubox
14 86 0.035023159 ubox
14 87 0.924367316 ubox
15 19 0.102654669 ubox
15 20 0.189742447 ubox
15 22 0.020996953 ubox
15 24 0.005403532 ubox
15 80 0.003715548 ubox
15 84 0.096261285 ubox
15 85 0.042745302 ubox
15 86 0.923486078 ubox
16 83 0.071258006 ubox
17 21 0.005415068 ubox
17 22 0.004532954 ubox
17 24 0.005998076 ubox
17 84 0.534586304 ubox
17 85 0.110718871 ubox
18 23 0.035316752 ubox
18 82 0.044292335 ubox
18 83 0.935125873 ubox
19 23 0.007476270 ubox
19 82 0.948822661 ubox
19 83 0.119036394 ubox
20 82 0.120462766 ubox
21 79 0.006761173 ubox
22 79 0.961800754 ubox
23 78 0.963988508 ubox
24 77 0.999418417 ubox
25 76 0.999982178 ubox
26 75 0.999993175 ubox
27 74 0.999987125 ubox
28 73 0.999347235 ubox
29 72 0.999926564 ubox
30 71 0.999699309 ubox
31 70 0.999743935 ubox
32 68 0.003780706 ubox
32 69 0.999975234 ubox
33 67 0.005242692 ubox
33 68 0.999964475 ubox
33 69 0.003861176 ubox
34 65 0.013068735 ubox
34 67 0.999599317 ubox
34 68 0.005437935 ubox
35 40 0.005655624 ubox
35 42 0.003839337 ubox
35 63 0.009091361 ubox
35 64 0.027835236 ubox
38 61 0.101782849 ubox
38 63 0.528078909 ubox
38 64 0.775628118 ubox
39 60 0.101782634 ubox
39 62 0.111214944 ubox
39 66 0.080144276 ubox
40 59 0.101529276 ubox
40 62 0.982908610 ubox
40 65 0.080576830 ubox
41 57 0.101181839 ubox
41 61 0.991235111 ubox
41 63 0.011338463 ubox
41 64 0.079895579 ubox
42 55 0.018179238 ubox
42 56 0.100394298 ubox
42 60 0.991192867 ubox
42 62 0.010922118 ubox
43 54 0.023658824 ubox
43 55 0.099221620 ubox
43 59 0.989241514 ubox
43 60 0.012833757 ubox
43 62 0.079731999 ubox
43 65 0.011999690 ubox
44 50 0.006472271 ubox
44 51 0.005940520 ubox
44 53 0.028153243 ubox
44 57 0.026004509 ubox
44 61 0.080132042 ubox
44 63 0.003911834 ubox
44 64 0.012473020 ubox
45 49 0.006381529 ubox
45 50 0.006114433 ubox
45 51 0.004826154 ubox
45 53 0.095970748 ubox
45 57 0.072204225 ubox
45 63 0.012411314 ubox
45 64 0.015944259 ubox
46 50 0.005544852 ubox
46 51 0.004755778 ubox
46 53 0.009068433 ubox
46 57 0.064849516 ubox
46 61 0.005334649 ubox
46 63 0.016121247 ubox
47 51 0.005677181 ubox
48 53 0.015256745 ubox
48 57 0.979514642 ubox
48 61 0.020030923 ubox
49 54 0.016642955 ubox
49 55 0.058915455 ubox
49 56 0.992054728 ubox
49 60 0.020069941 ubox
50 54 0.058777176 ubox
50 55 0.991913885 ubox
50 56 0.003537443 ubox
50 59 0.020069185 ubox
51 55 0.003485505 ubox
51 58 0.019243782 ubox
79 95 0.008876605 ubox
80 94 0.026077871 ubox
81 93 0.026104848 ubox
82 92 0.026110454 ubox
83 91 0.025932178 ubox
83 97 0.004131240 ubox
84 96 0.004418813 ubox
86 94 0.005375873 ubox
87 93 0.005445774 ubox
87 96 0.026247056 ubox
88 92 0.005439254 ubox
88 95 0.027606065 ubox
89 94 0.029778842 ubox
90 96 0.011288129 ubox
91 96 0.021647264 ubox
92 96 0.006959453 ubox
92 99 0.052666170 ubox
93 97 0.006178765 ubox
93 98 0.049311810 ubox
95 99 0.009447237 ubox
7 95 0.9500000 lbox
8 94 0.9500000 lbox
10 92 0.9500000 lbox
12 89 0.9500000 lbox
13 88 0.9500000 lbox
14 87 0.9500000 lbox
15 86 0.9500000 lbox
18 83 0.9500000 lbox
19 82 0.9500000 lbox
22 79 0.9500000 lbox
23 78 0.9500000 lbox
24 77 0.9500000 lbox
25 76 0.9500000 lbox
26 75 0.9500000 lbox
27 74 0.9500000 lbox
28 73 0.9500000 lbox
29 72 0.9500000 lbox
30 71 0.9500000 lbox
31 70 0.9500000 lbox
32 69 0.9500000 lbox
33 68 0.9500000 lbox
34 67 0.9500000 lbox
38 64 0.9500000 lbox
40 62 0.9500000 lbox
41 61 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
48 57 0.9500000 lbox
49 56 0.9500000 lbox
50 55 0.9500000 lbox
showpage
end
%%EOF
