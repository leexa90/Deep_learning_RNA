%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4cxg_a)
} def

/sequence { (\
ACAUCCAAGGAAGGCAGCAGGCGCGCAAAUUACCCACUCCCGACCCGG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.023026737 ubox
2 10 0.008267528 ubox
2 13 0.082482033 ubox
2 14 0.011204544 ubox
2 17 0.015101576 ubox
2 42 0.006248439 ubox
2 47 0.026747792 ubox
2 48 0.021757542 ubox
3 38 0.003189819 ubox
4 8 0.007199960 ubox
4 10 0.005466841 ubox
4 11 0.117892260 ubox
4 12 0.005167871 ubox
4 16 0.011176401 ubox
4 36 0.004107941 ubox
4 43 0.043791849 ubox
4 47 0.008452709 ubox
4 48 0.115778133 ubox
5 9 0.008309815 ubox
5 10 0.123020756 ubox
5 13 0.007647841 ubox
5 14 0.044233050 ubox
5 21 0.005578191 ubox
5 42 0.047533655 ubox
5 47 0.178060683 ubox
5 48 0.642452703 ubox
6 10 0.006140446 ubox
6 13 0.047485937 ubox
6 20 0.005632687 ubox
6 42 0.019161095 ubox
6 47 0.656021964 ubox
6 48 0.280677106 ubox
7 31 0.015158517 ubox
7 38 0.006587427 ubox
8 30 0.016269912 ubox
8 31 0.024549401 ubox
8 38 0.016595633 ubox
9 15 0.008746336 ubox
9 18 0.006344346 ubox
9 26 0.015462834 ubox
9 30 0.026641591 ubox
9 31 0.019280226 ubox
9 33 0.022463437 ubox
9 34 0.133973155 ubox
9 35 0.084425293 ubox
9 37 0.016971336 ubox
9 38 0.012832524 ubox
9 39 0.006695547 ubox
9 40 0.097250352 ubox
9 41 0.048305810 ubox
9 44 0.068949877 ubox
9 45 0.923807285 ubox
9 46 0.240857348 ubox
10 15 0.004750098 ubox
10 24 0.005263592 ubox
10 26 0.016602786 ubox
10 30 0.019438240 ubox
10 31 0.020372471 ubox
10 33 0.134448750 ubox
10 34 0.083838314 ubox
10 35 0.006645166 ubox
10 37 0.013829642 ubox
10 38 0.005558588 ubox
10 39 0.098056730 ubox
10 40 0.047800051 ubox
10 41 0.006020530 ubox
10 44 0.926023749 ubox
10 45 0.237222744 ubox
10 46 0.010586797 ubox
11 30 0.023425385 ubox
11 31 0.092283829 ubox
11 38 0.092611925 ubox
12 30 0.089269487 ubox
12 31 0.065235287 ubox
12 38 0.051888918 ubox
13 18 0.006576525 ubox
13 22 0.016552590 ubox
13 24 0.017501944 ubox
13 26 0.018514578 ubox
13 30 0.066372277 ubox
13 31 0.025505083 ubox
13 33 0.009924238 ubox
13 34 0.061932446 ubox
13 35 0.044417418 ubox
13 37 0.059577119 ubox
13 38 0.003974449 ubox
13 39 0.004001997 ubox
13 40 0.106505202 ubox
13 41 0.956031433 ubox
13 44 0.003591579 ubox
13 45 0.021539266 ubox
13 46 0.016958204 ubox
14 22 0.042709610 ubox
14 24 0.035050843 ubox
14 26 0.220914630 ubox
14 30 0.015594013 ubox
14 33 0.060987190 ubox
14 34 0.043099011 ubox
14 35 0.018151853 ubox
14 37 0.004574381 ubox
14 39 0.112861810 ubox
14 40 0.954437072 ubox
14 41 0.008236359 ubox
14 44 0.021721007 ubox
14 45 0.016835744 ubox
15 20 0.016515920 ubox
15 21 0.042761170 ubox
15 23 0.035168081 ubox
15 25 0.221483320 ubox
15 42 0.011551900 ubox
16 30 0.012268581 ubox
16 31 0.027450549 ubox
16 38 0.926264062 ubox
17 22 0.017219227 ubox
17 24 0.242424365 ubox
17 26 0.102225633 ubox
17 30 0.013111278 ubox
17 31 0.004802859 ubox
17 33 0.006708289 ubox
17 34 0.004094563 ubox
17 35 0.009246638 ubox
17 37 0.945513586 ubox
17 38 0.014557462 ubox
17 39 0.034951624 ubox
17 40 0.009466378 ubox
17 41 0.016951073 ubox
17 44 0.010990424 ubox
18 23 0.242264205 ubox
18 25 0.102627657 ubox
18 42 0.013022224 ubox
18 47 0.016155838 ubox
18 48 0.006278501 ubox
19 30 0.003837857 ubox
19 31 0.007461685 ubox
19 38 0.041051151 ubox
20 24 0.010637783 ubox
20 26 0.016804890 ubox
20 30 0.007717863 ubox
20 31 0.006762790 ubox
20 33 0.048925355 ubox
20 34 0.894278012 ubox
20 35 0.329939187 ubox
20 37 0.041765526 ubox
20 38 0.020778295 ubox
20 39 0.007379007 ubox
20 40 0.019518054 ubox
20 41 0.014277460 ubox
20 45 0.022362778 ubox
20 46 0.022916555 ubox
21 26 0.019183207 ubox
21 30 0.007833484 ubox
21 31 0.005777131 ubox
21 33 0.892073975 ubox
21 34 0.329264524 ubox
21 35 0.033009723 ubox
21 37 0.022076944 ubox
21 38 0.005230909 ubox
21 39 0.019776253 ubox
21 40 0.014216628 ubox
21 44 0.022425302 ubox
21 45 0.022903949 ubox
22 42 0.022228081 ubox
23 30 0.093769255 ubox
23 31 0.252784791 ubox
23 33 0.252183070 ubox
23 34 0.025801350 ubox
23 35 0.024987673 ubox
23 37 0.019493224 ubox
23 39 0.010983228 ubox
23 41 0.021946678 ubox
23 44 0.013535740 ubox
24 42 0.023047239 ubox
25 30 0.073470757 ubox
25 31 0.109003911 ubox
25 33 0.047534493 ubox
25 34 0.019709637 ubox
25 35 0.016256844 ubox
25 37 0.011902944 ubox
25 39 0.011113409 ubox
25 40 0.012247892 ubox
25 41 0.022563222 ubox
27 31 0.019280670 ubox
27 38 0.007182091 ubox
28 38 0.009154626 ubox
29 38 0.006001782 ubox
30 36 0.005651946 ubox
31 36 0.005928894 ubox
33 42 0.007319622 ubox
33 47 0.003320702 ubox
33 48 0.020740535 ubox
34 42 0.006719352 ubox
34 47 0.020914876 ubox
34 48 0.025326190 ubox
35 42 0.018341051 ubox
35 47 0.025986476 ubox
37 42 0.011960790 ubox
37 47 0.007409193 ubox
37 48 0.012192304 ubox
38 43 0.003560898 ubox
38 47 0.011960178 ubox
38 48 0.005306661 ubox
39 47 0.009231200 ubox
39 48 0.056349130 ubox
40 47 0.056990106 ubox
40 48 0.199798591 ubox
41 47 0.204973212 ubox
41 48 0.015969044 ubox
42 46 0.192026205 ubox
5 48 0.9500000 lbox
6 47 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
20 34 0.9500000 lbox
21 33 0.9500000 lbox
showpage
end
%%EOF
