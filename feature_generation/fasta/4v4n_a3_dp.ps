%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v4n_a3)
} def

/sequence { (\
GGCGGCCAUAGCGGGGGGGCCACACCCGGUCUCAUUUCGAACCCGGAAGUUAAGCCCCCCAGCGAUCCCGGUUGUACUGCCCUCCGAGAGGGGGCGGGAAGCCGGGGACGCCGCCGGCCACUAUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 112 0.003185328 ubox
1 115 0.468943127 ubox
1 118 0.023726641 ubox
1 119 0.115339760 ubox
1 121 0.093973053 ubox
1 122 0.773609566 ubox
1 124 0.008428995 ubox
1 125 0.012301367 ubox
2 111 0.003187524 ubox
2 114 0.469301741 ubox
2 118 0.115360369 ubox
2 121 0.819176278 ubox
2 122 0.012383404 ubox
2 124 0.008058945 ubox
3 110 0.003187419 ubox
3 113 0.469301868 ubox
3 116 0.083782488 ubox
3 117 0.082976857 ubox
4 112 0.469292057 ubox
4 115 0.115920919 ubox
4 119 0.874798377 ubox
5 12 0.029650754 ubox
5 111 0.468273986 ubox
5 114 0.116099561 ubox
5 115 0.019101611 ubox
5 118 0.875106328 ubox
6 11 0.029606062 ubox
6 110 0.466303449 ubox
6 113 0.115615070 ubox
6 117 0.875100505 ubox
7 11 0.005647891 ubox
7 13 0.026719386 ubox
7 64 0.030693888 ubox
7 107 0.040535356 ubox
7 110 0.029965289 ubox
7 113 0.008249439 ubox
7 116 0.874563926 ubox
7 117 0.003667242 ubox
8 66 0.106987800 ubox
9 64 0.015035759 ubox
9 65 0.105962881 ubox
9 107 0.018158649 ubox
9 108 0.022379133 ubox
9 113 0.004796331 ubox
9 116 0.010355184 ubox
10 66 0.006988494 ubox
11 63 0.465928583 ubox
11 111 0.023609298 ubox
11 112 0.012972139 ubox
11 114 0.872796247 ubox
11 115 0.019529776 ubox
12 62 0.464820573 ubox
12 64 0.025011303 ubox
12 107 0.003792555 ubox
12 110 0.023819345 ubox
12 113 0.873384381 ubox
13 60 0.045707570 ubox
13 63 0.024935171 ubox
13 109 0.023567279 ubox
13 112 0.864393493 ubox
14 59 0.044226299 ubox
14 60 0.996187363 ubox
14 111 0.042722988 ubox
15 58 0.042050068 ubox
15 59 0.998960730 ubox
15 60 0.009290711 ubox
16 57 0.039749252 ubox
16 58 0.999072897 ubox
16 59 0.008413288 ubox
17 56 0.037305747 ubox
17 57 0.999175149 ubox
17 58 0.007415689 ubox
18 55 0.034680290 ubox
18 56 0.999277271 ubox
18 57 0.006257544 ubox
19 55 0.999378369 ubox
19 56 0.004822780 ubox
20 54 0.998561271 ubox
21 49 0.017337236 ubox
21 54 0.026506723 ubox
22 50 0.931393893 ubox
22 51 0.052744255 ubox
23 49 0.940971274 ubox
24 50 0.279974642 ubox
24 51 0.010960367 ubox
25 46 0.074747573 ubox
25 49 0.284613917 ubox
26 45 0.073626290 ubox
26 46 0.996254313 ubox
27 45 0.997217988 ubox
28 43 0.135294223 ubox
28 44 0.990753399 ubox
29 42 0.177061189 ubox
29 43 0.983501319 ubox
30 39 0.010054885 ubox
30 40 0.193638283 ubox
30 41 0.198617317 ubox
31 39 0.211858338 ubox
32 39 0.028128389 ubox
32 40 0.958076311 ubox
32 41 0.024413406 ubox
33 39 0.963540189 ubox
35 39 0.004871429 ubox
35 40 0.005467356 ubox
35 41 0.005383133 ubox
35 48 0.003557982 ubox
36 40 0.004941707 ubox
36 47 0.003715161 ubox
37 46 0.003735627 ubox
38 45 0.003757017 ubox
39 44 0.003719070 ubox
62 109 0.009431440 ubox
62 111 0.879044992 ubox
62 112 0.011069226 ubox
62 114 0.007162293 ubox
63 110 0.882125858 ubox
63 113 0.007194174 ubox
64 109 0.912341364 ubox
64 111 0.006080988 ubox
64 112 0.007436699 ubox
66 106 0.004680399 ubox
66 107 0.829555033 ubox
66 108 0.201477485 ubox
67 105 0.004130266 ubox
67 106 0.983842373 ubox
67 107 0.176820712 ubox
68 105 0.989484635 ubox
68 106 0.144521275 ubox
69 104 0.994707137 ubox
69 105 0.102446133 ubox
70 103 0.999920663 ubox
71 102 0.999972164 ubox
71 103 0.005597723 ubox
72 100 0.010453063 ubox
72 101 0.998206617 ubox
73 98 0.003658983 ubox
73 99 0.013252005 ubox
73 100 0.979254225 ubox
73 101 0.035450730 ubox
75 97 0.003891046 ubox
75 98 0.077348221 ubox
75 99 0.083379988 ubox
75 100 0.013755271 ubox
77 96 0.024304703 ubox
77 97 0.998838256 ubox
77 98 0.014710933 ubox
78 96 0.998763512 ubox
78 97 0.010842793 ubox
79 95 0.999946503 ubox
80 92 0.005064440 ubox
80 93 0.005639550 ubox
80 94 0.997222470 ubox
81 91 0.006815806 ubox
81 92 0.007674746 ubox
81 93 0.994459420 ubox
81 94 0.074016647 ubox
82 90 0.008303276 ubox
82 91 0.009064499 ubox
82 92 0.991569627 ubox
82 93 0.104530399 ubox
83 89 0.011536309 ubox
83 90 0.009472944 ubox
83 91 0.525342804 ubox
83 92 0.127807442 ubox
84 88 0.013186119 ubox
84 90 0.516666228 ubox
84 91 0.850187854 ubox
84 92 0.009919317 ubox
85 90 0.853145318 ubox
85 91 0.013382021 ubox
107 112 0.006020305 ubox
116 121 0.113742187 ubox
116 122 0.040515930 ubox
116 124 0.008502395 ubox
116 125 0.034670930 ubox
117 121 0.041617414 ubox
117 122 0.009222018 ubox
117 124 0.027374739 ubox
117 125 0.005292133 ubox
120 124 0.004996873 ubox
1 122 0.9500000 lbox
2 121 0.9500000 lbox
4 119 0.9500000 lbox
5 118 0.9500000 lbox
6 117 0.9500000 lbox
7 116 0.9500000 lbox
11 114 0.9500000 lbox
12 113 0.9500000 lbox
13 112 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
20 54 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
32 40 0.9500000 lbox
33 39 0.9500000 lbox
62 111 0.9500000 lbox
63 110 0.9500000 lbox
64 109 0.9500000 lbox
66 107 0.9500000 lbox
67 106 0.9500000 lbox
68 105 0.9500000 lbox
69 104 0.9500000 lbox
70 103 0.9500000 lbox
71 102 0.9500000 lbox
72 101 0.9500000 lbox
73 100 0.9500000 lbox
77 97 0.9500000 lbox
78 96 0.9500000 lbox
79 95 0.9500000 lbox
80 94 0.9500000 lbox
81 93 0.9500000 lbox
82 92 0.9500000 lbox
84 91 0.9500000 lbox
85 90 0.9500000 lbox
showpage
end
%%EOF
