%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v5z_bz)
} def

/sequence { (\
GCCCGGAACUCAGUCGGUGAGCAGGGGAUUGAAAAUCCCCGUGUCCUUGGUUCGAUUCCGAGUCCGGGCACC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.999227762 ubox
1 71 0.003165532 ubox
2 68 0.999987453 ubox
3 67 0.999993563 ubox
4 66 0.999977171 ubox
5 65 0.999971896 ubox
6 64 0.999893123 ubox
7 63 0.711006455 ubox
8 14 0.003289174 ubox
8 18 0.021238086 ubox
8 51 0.003440138 ubox
8 63 0.699433320 ubox
9 13 0.003474170 ubox
9 16 0.004855917 ubox
9 17 0.021871407 ubox
9 19 0.003661848 ubox
9 21 0.114344792 ubox
9 50 0.003746869 ubox
9 60 0.013078237 ubox
9 62 0.990636981 ubox
10 16 0.019527188 ubox
10 17 0.005702795 ubox
10 20 0.120516976 ubox
10 50 0.004099336 ubox
10 60 0.006856794 ubox
10 61 0.990590169 ubox
11 16 0.010670957 ubox
11 19 0.121157745 ubox
11 49 0.006351522 ubox
11 60 0.987208391 ubox
11 62 0.003427828 ubox
12 18 0.118871283 ubox
12 48 0.006852034 ubox
12 51 0.007635771 ubox
12 52 0.020330753 ubox
12 56 0.012996061 ubox
12 57 0.770670208 ubox
12 63 0.005413171 ubox
13 22 0.005066681 ubox
13 47 0.005186242 ubox
13 51 0.019844192 ubox
13 53 0.003911337 ubox
13 56 0.976335911 ubox
13 57 0.028157344 ubox
13 58 0.116782215 ubox
13 59 0.041239369 ubox
14 20 0.004999611 ubox
14 21 0.004497444 ubox
14 49 0.006742059 ubox
14 50 0.033456853 ubox
14 55 0.987402876 ubox
14 61 0.013863815 ubox
15 19 0.005327635 ubox
15 49 0.036240000 ubox
15 50 0.010980629 ubox
15 54 0.988186255 ubox
15 60 0.016686593 ubox
16 45 0.003324985 ubox
16 46 0.056423940 ubox
16 47 0.062319373 ubox
16 48 0.037889709 ubox
16 51 0.048923235 ubox
16 52 0.016260490 ubox
16 53 0.982537750 ubox
16 56 0.010116020 ubox
16 57 0.008374637 ubox
16 58 0.003757322 ubox
16 59 0.021457398 ubox
17 22 0.004416640 ubox
17 44 0.003291863 ubox
17 45 0.059605256 ubox
17 46 0.124946572 ubox
17 47 0.071152278 ubox
17 48 0.084414390 ubox
17 51 0.066753468 ubox
17 52 0.895244963 ubox
17 53 0.014934809 ubox
17 56 0.010098712 ubox
17 57 0.003425576 ubox
17 58 0.021433103 ubox
18 43 0.005768155 ubox
18 49 0.487557157 ubox
18 50 0.102701630 ubox
18 54 0.054579029 ubox
18 55 0.010403338 ubox
19 44 0.014730536 ubox
19 45 0.233520468 ubox
19 46 0.298033999 ubox
19 47 0.045078060 ubox
19 48 0.757827090 ubox
19 51 0.024174332 ubox
19 52 0.071130478 ubox
19 53 0.061616685 ubox
20 42 0.007252051 ubox
20 44 0.220844148 ubox
20 47 0.765215901 ubox
20 48 0.158901041 ubox
20 51 0.094547924 ubox
20 52 0.063352232 ubox
21 42 0.135152186 ubox
21 44 0.631460913 ubox
21 45 0.222648194 ubox
21 46 0.658941155 ubox
21 47 0.052904658 ubox
21 48 0.045112488 ubox
21 51 0.061158890 ubox
22 41 0.152222799 ubox
22 43 0.887492443 ubox
22 49 0.103050121 ubox
22 50 0.059075170 ubox
23 42 0.855435271 ubox
23 44 0.069079718 ubox
23 47 0.012151785 ubox
23 48 0.102312205 ubox
24 39 0.004070132 ubox
24 40 0.993288106 ubox
24 42 0.003374759 ubox
24 46 0.012234109 ubox
24 47 0.045868354 ubox
24 48 0.035540951 ubox
25 38 0.003865087 ubox
25 39 0.994693715 ubox
25 40 0.079329935 ubox
25 45 0.011177890 ubox
25 46 0.043733727 ubox
25 47 0.045743574 ubox
25 59 0.003297996 ubox
26 37 0.003632207 ubox
26 38 0.995281591 ubox
26 39 0.072049494 ubox
26 44 0.009890841 ubox
26 45 0.042279460 ubox
26 46 0.046982153 ubox
26 58 0.003303335 ubox
27 37 0.995847245 ubox
27 38 0.063881018 ubox
27 44 0.036467776 ubox
27 45 0.047930302 ubox
27 57 0.003303011 ubox
28 36 0.994678884 ubox
28 42 0.018559543 ubox
28 44 0.048785771 ubox
28 56 0.003308078 ubox
29 33 0.007642627 ubox
29 34 0.027218437 ubox
29 35 0.977822003 ubox
29 41 0.017073347 ubox
29 43 0.047024429 ubox
29 55 0.003311118 ubox
30 34 0.814386232 ubox
30 35 0.089010035 ubox
30 41 0.042123027 ubox
30 54 0.003309857 ubox
31 37 0.014115007 ubox
31 38 0.008712075 ubox
31 39 0.016102775 ubox
31 40 0.051751413 ubox
31 53 0.003312585 ubox
32 36 0.012356624 ubox
32 52 0.003298270 ubox
33 51 0.003227914 ubox
39 50 0.003219333 ubox
40 49 0.004019515 ubox
41 45 0.008303695 ubox
41 46 0.015132968 ubox
41 48 0.006703830 ubox
41 58 0.003305713 ubox
42 49 0.004663872 ubox
43 48 0.006267729 ubox
43 56 0.004568325 ubox
44 50 0.006500465 ubox
44 55 0.004858857 ubox
45 49 0.016590033 ubox
45 50 0.014431113 ubox
45 54 0.005048374 ubox
45 62 0.004411284 ubox
46 50 0.011980833 ubox
46 62 0.122791559 ubox
47 55 0.005386087 ubox
47 61 0.123905189 ubox
48 54 0.005916015 ubox
48 60 0.124014347 ubox
49 53 0.007590276 ubox
49 58 0.007442392 ubox
49 59 0.133817983 ubox
50 57 0.007242056 ubox
50 58 0.133708512 ubox
50 59 0.004606166 ubox
51 55 0.003670472 ubox
51 62 0.011010906 ubox
52 61 0.015156858 ubox
53 60 0.015852281 ubox
54 59 0.017600084 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
6 64 0.9500000 lbox
7 63 0.9500000 lbox
9 62 0.9500000 lbox
10 61 0.9500000 lbox
11 60 0.9500000 lbox
12 57 0.9500000 lbox
13 56 0.9500000 lbox
14 55 0.9500000 lbox
15 54 0.9500000 lbox
16 53 0.9500000 lbox
17 52 0.9500000 lbox
19 48 0.9500000 lbox
20 47 0.9500000 lbox
21 46 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
showpage
end
%%EOF
