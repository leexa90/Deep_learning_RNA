%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:43 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4yco_d)
} def

/sequence { (\
GCGCGGAUAGCUCAGUCGGUAGAGCAGGGGAUUGAAAAUCCCCGUGUCCUUGGUUCGAUUCCGAGUCCGCGCAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.999210105 ubox
2 71 0.999951510 ubox
3 70 0.999980986 ubox
4 69 0.999980271 ubox
5 49 0.017716917 ubox
5 68 0.999805432 ubox
6 48 0.018560905 ubox
6 67 0.999525434 ubox
7 45 0.003633579 ubox
7 47 0.019418765 ubox
7 66 0.857431851 ubox
8 21 0.018328591 ubox
8 26 0.051343123 ubox
8 44 0.003895661 ubox
8 46 0.019741476 ubox
8 63 0.003620384 ubox
8 64 0.017345053 ubox
8 65 0.545524920 ubox
9 20 0.019760482 ubox
9 45 0.018179394 ubox
9 55 0.008903979 ubox
9 60 0.004135659 ubox
9 66 0.023738612 ubox
10 16 0.007890852 ubox
10 17 0.004071903 ubox
10 20 0.038000877 ubox
10 25 0.633116590 ubox
10 54 0.014976377 ubox
10 59 0.003479296 ubox
10 61 0.036725609 ubox
10 62 0.157817382 ubox
10 66 0.458322966 ubox
10 67 0.003268041 ubox
11 15 0.008594602 ubox
11 18 0.020446105 ubox
11 19 0.038945906 ubox
11 22 0.008860677 ubox
11 24 0.634633846 ubox
11 53 0.015365487 ubox
11 63 0.277917256 ubox
11 65 0.626132797 ubox
12 18 0.034768288 ubox
12 19 0.008245524 ubox
12 21 0.008757845 ubox
12 23 0.634651949 ubox
12 52 0.006440524 ubox
12 53 0.008199293 ubox
12 58 0.013783097 ubox
12 63 0.021889478 ubox
12 64 0.646387906 ubox
13 18 0.017887227 ubox
13 19 0.007145844 ubox
13 22 0.634542972 ubox
13 52 0.017308654 ubox
13 57 0.013911809 ubox
13 63 0.644451437 ubox
13 65 0.004232098 ubox
14 20 0.096983130 ubox
14 50 0.004524652 ubox
14 51 0.017336070 ubox
14 55 0.008619771 ubox
14 59 0.012105918 ubox
14 60 0.629812547 ubox
14 66 0.007326211 ubox
15 20 0.031580350 ubox
15 25 0.005044685 ubox
15 49 0.004372349 ubox
15 50 0.013290777 ubox
15 54 0.008671447 ubox
15 55 0.003365836 ubox
15 56 0.007670243 ubox
15 59 0.759023544 ubox
15 60 0.018959719 ubox
15 61 0.069851427 ubox
15 62 0.023582229 ubox
16 21 0.011848119 ubox
16 23 0.023844221 ubox
16 53 0.010575838 ubox
16 58 0.766524157 ubox
16 64 0.061460578 ubox
17 22 0.026116317 ubox
17 52 0.012322471 ubox
17 53 0.013037064 ubox
17 57 0.767077683 ubox
17 63 0.061931438 ubox
18 49 0.026489442 ubox
18 50 0.004724583 ubox
18 51 0.011219278 ubox
18 54 0.025745675 ubox
18 55 0.016671045 ubox
18 56 0.765112258 ubox
18 60 0.003421011 ubox
18 62 0.062204439 ubox
19 25 0.003910182 ubox
19 48 0.026889185 ubox
19 49 0.008218354 ubox
19 50 0.008937939 ubox
19 51 0.039418650 ubox
19 54 0.075828586 ubox
19 55 0.673631678 ubox
19 56 0.011177189 ubox
19 59 0.004326111 ubox
19 61 0.062128934 ubox
20 24 0.003676038 ubox
20 52 0.251033687 ubox
20 53 0.052021489 ubox
20 58 0.007195122 ubox
21 47 0.006823763 ubox
21 50 0.484089921 ubox
21 51 0.226682804 ubox
21 54 0.048672349 ubox
21 55 0.005299540 ubox
21 59 0.007573137 ubox
21 60 0.005256947 ubox
22 47 0.005954568 ubox
22 48 0.138632352 ubox
22 49 0.535823406 ubox
22 50 0.154228986 ubox
22 51 0.448744183 ubox
22 54 0.005407857 ubox
22 55 0.015861786 ubox
22 56 0.058045543 ubox
23 45 0.004250074 ubox
23 47 0.134012273 ubox
23 50 0.448510798 ubox
23 51 0.099281670 ubox
23 54 0.020234619 ubox
23 55 0.058012148 ubox
24 45 0.065068987 ubox
24 47 0.614016487 ubox
24 48 0.176362539 ubox
24 49 0.386150096 ubox
24 50 0.032164764 ubox
24 51 0.008521287 ubox
24 54 0.053150145 ubox
25 44 0.076620131 ubox
25 46 0.727620247 ubox
25 52 0.023855456 ubox
25 53 0.051290224 ubox
26 45 0.702691750 ubox
26 47 0.041927022 ubox
26 50 0.006115767 ubox
26 51 0.025894734 ubox
27 42 0.005097199 ubox
27 43 0.994673700 ubox
27 49 0.005655769 ubox
27 50 0.011860182 ubox
27 51 0.030337830 ubox
28 41 0.004848513 ubox
28 42 0.996074661 ubox
28 43 0.065348326 ubox
28 48 0.005162787 ubox
28 49 0.011316675 ubox
28 50 0.038498980 ubox
28 62 0.042794216 ubox
29 40 0.004546865 ubox
29 41 0.996464978 ubox
29 42 0.059347428 ubox
29 47 0.004562318 ubox
29 48 0.010940522 ubox
29 49 0.038792127 ubox
29 61 0.042863398 ubox
30 39 0.003784259 ubox
30 40 0.996836486 ubox
30 41 0.052617152 ubox
30 47 0.009436730 ubox
30 48 0.038870282 ubox
30 60 0.042862858 ubox
31 39 0.995487702 ubox
31 45 0.006091631 ubox
31 47 0.038888994 ubox
31 59 0.042932419 ubox
32 36 0.007645154 ubox
32 37 0.027218128 ubox
32 38 0.978615183 ubox
32 44 0.005619772 ubox
32 46 0.037478413 ubox
32 58 0.042972753 ubox
33 37 0.815046574 ubox
33 38 0.086010555 ubox
33 44 0.025690997 ubox
33 57 0.042956304 ubox
34 40 0.009275154 ubox
34 41 0.003885655 ubox
34 42 0.007675196 ubox
34 43 0.031724657 ubox
34 56 0.042991673 ubox
35 39 0.008137122 ubox
35 55 0.042805887 ubox
36 54 0.041892778 ubox
37 54 0.003777053 ubox
38 54 0.003796681 ubox
39 53 0.003555830 ubox
40 52 0.003613699 ubox
40 53 0.010617744 ubox
41 52 0.010581356 ubox
41 53 0.008092064 ubox
42 52 0.007677035 ubox
42 53 0.040410196 ubox
43 52 0.040830996 ubox
43 63 0.006119392 ubox
44 48 0.039661083 ubox
44 49 0.050536923 ubox
44 50 0.006154692 ubox
44 51 0.039383173 ubox
44 56 0.004626609 ubox
44 61 0.042105916 ubox
44 62 0.018164200 ubox
44 66 0.003781151 ubox
45 52 0.009880663 ubox
45 53 0.006344852 ubox
45 57 0.004679547 ubox
45 63 0.004042110 ubox
46 50 0.003496423 ubox
46 51 0.013042375 ubox
46 54 0.006019706 ubox
46 56 0.006288671 ubox
46 59 0.053278443 ubox
46 61 0.003463501 ubox
46 62 0.004981321 ubox
46 66 0.006922211 ubox
46 67 0.003996581 ubox
47 52 0.004353197 ubox
47 53 0.015143856 ubox
47 58 0.055580388 ubox
47 64 0.015899397 ubox
48 52 0.020364849 ubox
48 53 0.013716215 ubox
48 57 0.055741653 ubox
48 63 0.016722642 ubox
48 65 0.019650698 ubox
49 53 0.009830379 ubox
49 57 0.004855158 ubox
49 63 0.007934716 ubox
49 65 0.540679359 ubox
50 58 0.008979431 ubox
50 63 0.005228673 ubox
50 64 0.603861491 ubox
50 65 0.003706366 ubox
51 57 0.009691614 ubox
51 58 0.003639041 ubox
51 63 0.610738696 ubox
51 64 0.010344761 ubox
52 56 0.009842156 ubox
52 60 0.003301601 ubox
52 61 0.014823650 ubox
52 62 0.615395419 ubox
52 67 0.003692232 ubox
52 68 0.017565390 ubox
53 59 0.004891034 ubox
53 60 0.015338901 ubox
53 61 0.614739040 ubox
53 62 0.008223506 ubox
53 66 0.007303330 ubox
53 67 0.017602176 ubox
54 58 0.013384228 ubox
54 64 0.005672038 ubox
54 65 0.043378845 ubox
55 64 0.142627068 ubox
56 63 0.149368853 ubox
57 62 0.147446145 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
27 43 0.9500000 lbox
28 42 0.9500000 lbox
29 41 0.9500000 lbox
30 40 0.9500000 lbox
31 39 0.9500000 lbox
32 38 0.9500000 lbox
33 37 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
showpage
end
%%EOF
