%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAAGCCCGGGGCGCCUGUGCGGGGCCCGAAGUCUCGGGCCCCCUCGAUGCUCGAGUGUCCGUAGCUCCCCCGGGCUCU\
) def
/coor [
[82.08158112 348.72888184]
[78.72269440 333.04141235]
[89.00446320 320.72616577]
[89.00446320 305.72616577]
[89.00446320 290.72616577]
[89.00446320 275.72616577]
[89.00446320 260.72616577]
[89.00446320 245.72618103]
[89.00446320 230.72618103]
[89.00446320 215.72618103]
[89.00446320 200.72618103]
[79.38166046 186.19139099]
[88.36229706 170.26170349]
[87.76595306 155.27355957]
[85.16870880 152.51605225]
[83.93057251 148.25746155]
[84.79238892 143.22940063]
[88.09973907 138.48841858]
[89.29149628 123.53584290]
[90.48324585 108.58325958]
[86.36142731 94.16068268]
[77.44841766 82.09593201]
[68.53540039 70.03118896]
[59.62238312 57.96643829]
[50.70936966 45.90169144]
[41.79635239 33.83694077]
[32.88333893 21.77219200]
[23.97032166 9.70744419]
[15.05730629 -2.35730433]
[-0.18459120 -8.40846825]
[-2.29704046 -24.67098999]
[10.89306545 -34.41537857]
[25.81687546 -27.61744690]
[27.12205505 -11.27031994]
[36.03506851 0.79442883]
[44.94808578 12.85917759]
[53.86110306 24.92392540]
[62.77411652 36.98867416]
[71.68713379 49.05342102]
[80.60015106 61.11817169]
[89.51316071 73.18292236]
[98.42617798 85.24766541]
[113.39949799 86.14189148]
[123.68508911 75.22370911]
[133.97067261 64.30553436]
[144.25625610 53.38734818]
[154.54185486 42.46916580]
[161.00183105 26.79418755]
[177.85252380 28.66244507]
[180.72201538 45.37179565]
[165.46003723 52.75475311]
[155.17443848 63.67293549]
[144.88885498 74.59111786]
[134.60327148 85.50930023]
[124.31768036 96.42748260]
[137.73503113 103.13378906]
[141.91191101 117.54051208]
[134.16244507 130.38362122]
[119.46978760 133.40455627]
[107.28185272 124.66075134]
[105.43582916 109.77500916]
[104.24407959 124.72759247]
[103.05232239 139.68017578]
[102.75408936 154.67721558]
[103.35044098 169.66534424]
[112.37493134 179.12681580]
[112.41500854 191.79743958]
[104.00446320 200.72618103]
[104.00446320 215.72618103]
[104.00446320 230.72618103]
[104.00446320 245.72618103]
[104.00446320 260.72616577]
[104.00446320 275.72616577]
[104.00446320 290.72616577]
[104.00446320 305.72616577]
[104.00446320 320.72616577]
[114.28623199 333.04141235]
[110.92735291 348.72888184]
] def
/pairs [
[3 76]
[4 75]
[5 74]
[6 73]
[7 72]
[8 71]
[9 70]
[10 69]
[11 68]
[13 65]
[14 64]
[18 63]
[19 62]
[20 61]
[21 42]
[22 41]
[23 40]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[29 34]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
