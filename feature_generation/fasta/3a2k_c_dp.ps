%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3a2k_c)
} def

/sequence { (\
GGACCUUUAGCUCAGUUGGUUAGAGCAGACGGCUCAUAACCGUCCGGCCGUAGGUUCGAGUCCUACAAGGUCCACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 45 0.012148222 ubox
1 57 0.025284237 ubox
1 73 0.998778998 ubox
1 75 0.003593826 ubox
1 76 0.009466317 ubox
2 44 0.012156420 ubox
2 56 0.025361983 ubox
2 72 0.999548661 ubox
2 75 0.007947745 ubox
3 43 0.012147144 ubox
3 55 0.025404619 ubox
3 71 0.999461595 ubox
4 42 0.011893836 ubox
4 54 0.025426762 ubox
4 70 0.999562973 ubox
5 25 0.006230353 ubox
5 53 0.025425980 ubox
5 69 0.999464160 ubox
5 70 0.005930925 ubox
6 24 0.050519864 ubox
6 52 0.025146350 ubox
6 67 0.019850702 ubox
6 68 0.983646456 ubox
6 69 0.008326203 ubox
7 19 0.007995239 ubox
7 23 0.073154254 ubox
7 24 0.004798119 ubox
7 65 0.004923403 ubox
7 67 0.871761186 ubox
7 68 0.051464973 ubox
8 14 0.005598518 ubox
8 15 0.004296447 ubox
8 18 0.017693784 ubox
8 22 0.119029259 ubox
8 23 0.004421616 ubox
8 27 0.015081540 ubox
8 50 0.016067070 ubox
8 65 0.098293505 ubox
8 67 0.066529020 ubox
8 68 0.007233637 ubox
9 16 0.006496060 ubox
9 17 0.036413299 ubox
9 20 0.006522416 ubox
9 21 0.122251296 ubox
9 64 0.098683835 ubox
10 16 0.043439192 ubox
10 20 0.123317765 ubox
10 26 0.133900290 ubox
10 43 0.005080761 ubox
10 45 0.006247858 ubox
10 48 0.951518033 ubox
10 49 0.102375454 ubox
10 61 0.063164210 ubox
10 62 0.025629834 ubox
10 63 0.085663589 ubox
10 64 0.006227032 ubox
10 66 0.006245444 ubox
11 15 0.043720622 ubox
11 18 0.011767449 ubox
11 19 0.123294313 ubox
11 25 0.134185871 ubox
11 42 0.005283351 ubox
11 46 0.017060007 ubox
11 47 0.954252046 ubox
11 60 0.096431626 ubox
12 18 0.108116001 ubox
12 19 0.005273969 ubox
12 24 0.134226786 ubox
12 46 0.820658729 ubox
12 47 0.115248671 ubox
12 59 0.096897362 ubox
12 67 0.003232009 ubox
13 18 0.048516764 ubox
13 23 0.134066656 ubox
13 42 0.011030985 ubox
13 46 0.458094314 ubox
13 47 0.026541404 ubox
13 58 0.096439154 ubox
13 60 0.032893487 ubox
14 20 0.011552683 ubox
14 21 0.044162021 ubox
14 43 0.033868370 ubox
14 56 0.007645760 ubox
14 61 0.013333988 ubox
14 64 0.004219189 ubox
15 20 0.031982922 ubox
15 21 0.025081167 ubox
15 26 0.007908134 ubox
15 43 0.045495195 ubox
15 44 0.515454177 ubox
15 45 0.178330762 ubox
15 48 0.033777309 ubox
15 55 0.004650807 ubox
15 56 0.010152306 ubox
15 57 0.027981343 ubox
15 62 0.003946956 ubox
15 63 0.004152618 ubox
15 66 0.081951077 ubox
16 22 0.009894533 ubox
16 25 0.007910255 ubox
16 42 0.047944948 ubox
16 46 0.004253069 ubox
16 47 0.033776545 ubox
16 59 0.015579750 ubox
16 65 0.077482091 ubox
17 22 0.005309450 ubox
17 24 0.007889072 ubox
17 42 0.905731250 ubox
17 46 0.021942810 ubox
17 54 0.003608120 ubox
17 58 0.015644338 ubox
17 65 0.004775614 ubox
18 41 0.976032846 ubox
18 45 0.012266559 ubox
18 49 0.008579118 ubox
18 55 0.034036756 ubox
18 57 0.014319151 ubox
18 61 0.004050531 ubox
18 62 0.016666821 ubox
18 63 0.084693378 ubox
18 64 0.004358345 ubox
19 40 0.976235297 ubox
19 44 0.010670723 ubox
19 48 0.008583641 ubox
19 56 0.012754519 ubox
19 61 0.015747543 ubox
19 62 0.085018103 ubox
19 63 0.004381261 ubox
20 38 0.007647018 ubox
20 39 0.975713132 ubox
20 47 0.008489005 ubox
20 52 0.004845459 ubox
20 53 0.041965215 ubox
20 59 0.008915764 ubox
20 60 0.046924776 ubox
21 36 0.007870969 ubox
21 38 0.974517145 ubox
21 46 0.005656837 ubox
21 52 0.042854867 ubox
21 58 0.008280435 ubox
21 59 0.039935462 ubox
21 60 0.010983719 ubox
22 37 0.968069976 ubox
22 51 0.042872465 ubox
23 35 0.973919856 ubox
23 45 0.004769522 ubox
23 48 0.003897433 ubox
23 49 0.068681923 ubox
23 57 0.105589092 ubox
24 34 0.976068204 ubox
24 56 0.105754672 ubox
25 33 0.976342169 ubox
25 45 0.003316033 ubox
25 48 0.128254551 ubox
25 49 0.006799947 ubox
25 55 0.105866684 ubox
26 31 0.052606461 ubox
26 32 0.974199870 ubox
26 46 0.024788112 ubox
26 47 0.128268507 ubox
26 54 0.105898986 ubox
28 33 0.003215575 ubox
28 44 0.185759573 ubox
28 45 0.012776052 ubox
28 48 0.003383289 ubox
29 43 0.186507829 ubox
29 51 0.106128475 ubox
30 42 0.186569218 ubox
30 46 0.009191101 ubox
30 50 0.106556537 ubox
31 41 0.186548811 ubox
31 45 0.009234899 ubox
31 49 0.108483359 ubox
31 62 0.004485269 ubox
32 40 0.186131740 ubox
32 44 0.009185772 ubox
32 48 0.108488964 ubox
32 61 0.004542128 ubox
33 42 0.008271132 ubox
33 47 0.108346643 ubox
33 60 0.005065338 ubox
34 38 0.030357998 ubox
34 39 0.032900791 ubox
34 46 0.098130799 ubox
34 47 0.003963395 ubox
34 59 0.005064290 ubox
35 42 0.034982757 ubox
35 46 0.035465595 ubox
35 58 0.005054062 ubox
36 43 0.037646265 ubox
37 42 0.037033018 ubox
38 43 0.010261462 ubox
38 56 0.004738686 ubox
39 43 0.003553463 ubox
39 55 0.005083865 ubox
40 47 0.010388129 ubox
40 54 0.005125095 ubox
41 46 0.010805859 ubox
41 53 0.005121578 ubox
42 48 0.025348228 ubox
42 49 0.014641800 ubox
42 55 0.003566073 ubox
42 57 0.010713382 ubox
42 62 0.008029994 ubox
42 66 0.013720406 ubox
43 47 0.023835975 ubox
43 59 0.016972787 ubox
43 65 0.013586678 ubox
44 54 0.025660480 ubox
44 58 0.017886054 ubox
44 60 0.009330303 ubox
45 53 0.025894395 ubox
45 54 0.004756997 ubox
45 58 0.031741100 ubox
46 56 0.050941490 ubox
46 57 0.039109684 ubox
46 62 0.034514858 ubox
46 63 0.011018533 ubox
46 72 0.011152682 ubox
46 73 0.006361034 ubox
47 55 0.067426301 ubox
47 56 0.028826070 ubox
47 61 0.034921043 ubox
47 62 0.011001714 ubox
47 71 0.011318197 ubox
47 72 0.006328340 ubox
48 54 0.072995610 ubox
48 60 0.036463762 ubox
48 70 0.012991641 ubox
49 53 0.072474204 ubox
49 54 0.012986294 ubox
49 58 0.038015562 ubox
49 69 0.012988632 ubox
50 57 0.037946372 ubox
50 66 0.987291617 ubox
51 65 0.988539440 ubox
52 64 0.988789153 ubox
53 62 0.006952889 ubox
53 63 0.989074660 ubox
54 61 0.007538656 ubox
54 62 0.988054664 ubox
54 63 0.004085744 ubox
55 59 0.019895929 ubox
55 60 0.150554438 ubox
56 60 0.085376698 ubox
58 63 0.004872768 ubox
58 72 0.005440455 ubox
58 73 0.014728560 ubox
58 75 0.003326544 ubox
58 76 0.004578168 ubox
59 71 0.005223645 ubox
60 66 0.009468434 ubox
60 72 0.020872711 ubox
60 73 0.004303006 ubox
60 75 0.003901556 ubox
61 65 0.008543028 ubox
61 74 0.003863953 ubox
62 70 0.023539574 ubox
63 69 0.023568402 ubox
64 68 0.021233967 ubox
69 76 0.007091247 ubox
70 75 0.007054976 ubox
1 73 0.9500000 lbox
2 72 0.9500000 lbox
3 71 0.9500000 lbox
4 70 0.9500000 lbox
5 69 0.9500000 lbox
6 68 0.9500000 lbox
7 67 0.9500000 lbox
10 48 0.9500000 lbox
11 47 0.9500000 lbox
12 46 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
19 40 0.9500000 lbox
20 39 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 35 0.9500000 lbox
24 34 0.9500000 lbox
25 33 0.9500000 lbox
26 32 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
showpage
end
%%EOF
