%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:07:13 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAAGAAAUUCACGGCGGGCUUGAUGUCCGCGUCUACCUGGUUCACUGCCGUAUAGGCAG\
) def
/coor [
[130.89706421 162.61384583]
[123.05039215 175.39781189]
[111.45007324 184.90742493]
[97.37529755 190.09400940]
[82.37813568 190.38563538]
[68.11236572 185.75015259]
[56.15111160 176.69871521]
[47.81338501 164.22946167]
[44.01860809 149.71740723]
[45.18524551 134.76284790]
[51.18464279 121.01485443]
[61.35522842 109.98946381]
[74.57546997 102.90248871]
[89.38605499 100.53540039]
[78.23887634 90.49844360]
[67.09170532 80.46148682]
[55.94453430 70.42453003]
[44.79736328 60.38756943]
[33.65018845 50.35060883]
[17.61834717 49.75095749]
[8.20779896 36.75783920]
[12.63751125 21.33846283]
[27.50938797 15.32125187]
[41.41500092 23.32209778]
[43.68714905 39.20343781]
[54.83432007 49.24039459]
[65.98149109 59.27735519]
[77.12866974 69.31431580]
[88.27584076 79.35127258]
[99.42301178 89.38822937]
[113.68885803 94.02348328]
[128.60668945 92.45555878]
[143.52452087 90.88763428]
[158.44233704 89.31970215]
[173.36016846 87.75177765]
[183.29351807 75.75318146]
[198.44465637 74.37558746]
[209.82226562 83.91945648]
[224.74009705 82.35153198]
[239.65792847 80.78360748]
[254.57575989 79.21567535]
[265.74877930 67.70294189]
[281.70144653 69.40363312]
[290.19619751 83.01313019]
[284.71664429 98.09138489]
[269.46618652 103.07165527]
[256.14367676 94.13350677]
[241.22584534 95.70143127]
[226.30802917 97.26935577]
[211.39019775 98.83728790]
[202.24548340 110.53813934]
[187.13902283 112.34075165]
[174.92810059 102.66960907]
[160.01026917 104.23753357]
[145.09243774 105.80545807]
[130.17462158 107.37339020]
[115.25678253 108.94131470]
[125.84831238 119.56296539]
[132.37765503 133.06732178]
] def
/pairs [
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[38 50]
[39 49]
[40 48]
[41 47]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
