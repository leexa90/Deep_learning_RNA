%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2zzn_c)
} def

/sequence { (\
GCCGGGGUAGUCUAGGGGCUAGGCAGCGGACUGCAGAUCCGCCUUACGUGGGUUCAAAUCCCACCCCCGGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.988129374 ubox
2 70 0.999887520 ubox
3 69 0.999975919 ubox
4 67 0.009847901 ubox
4 68 0.999924895 ubox
5 66 0.013918864 ubox
5 67 0.999887877 ubox
5 68 0.003186484 ubox
6 65 0.017030116 ubox
6 66 0.999807429 ubox
6 67 0.004484503 ubox
7 24 0.005003966 ubox
7 34 0.009851926 ubox
7 47 0.026467425 ubox
7 64 0.017065153 ubox
7 65 0.994076860 ubox
7 66 0.005447801 ubox
8 14 0.004745522 ubox
8 21 0.150049243 ubox
8 22 0.004801987 ubox
8 23 0.004731134 ubox
8 25 0.090560989 ubox
8 26 0.004442303 ubox
8 33 0.010799347 ubox
8 46 0.029264979 ubox
8 63 0.016304495 ubox
9 13 0.004743872 ubox
9 20 0.161901732 ubox
9 32 0.011904917 ubox
9 44 0.005490584 ubox
9 45 0.028707408 ubox
10 19 0.164293031 ubox
10 24 0.970931243 ubox
10 31 0.012020183 ubox
10 43 0.004748418 ubox
10 44 0.008064694 ubox
10 45 0.004100991 ubox
10 47 0.125397980 ubox
10 64 0.007595205 ubox
11 17 0.004293360 ubox
11 18 0.163752001 ubox
11 23 0.971462237 ubox
11 30 0.012019215 ubox
11 46 0.123669352 ubox
11 63 0.007474774 ubox
12 16 0.005871387 ubox
12 17 0.161126501 ubox
12 18 0.009776722 ubox
12 22 0.972515939 ubox
12 23 0.003431662 ubox
12 29 0.012016950 ubox
13 17 0.008894088 ubox
13 21 0.972238719 ubox
13 28 0.011522888 ubox
13 46 0.030070407 ubox
14 20 0.971074668 ubox
14 44 0.142446483 ubox
14 45 0.030109318 ubox
15 19 0.949842115 ubox
15 20 0.008041795 ubox
15 27 0.006079298 ubox
15 40 0.010250887 ubox
15 42 0.025756984 ubox
15 43 0.147260991 ubox
15 44 0.027391821 ubox
15 45 0.049890589 ubox
15 47 0.004855288 ubox
15 62 0.008137292 ubox
16 39 0.010249548 ubox
16 40 0.012141086 ubox
16 42 0.147137692 ubox
16 43 0.026781068 ubox
16 44 0.056138580 ubox
16 61 0.008146961 ubox
17 24 0.004054586 ubox
17 38 0.008146530 ubox
17 39 0.012456335 ubox
17 40 0.144725392 ubox
17 42 0.025559590 ubox
17 43 0.057223661 ubox
17 60 0.008137318 ubox
18 24 0.010278293 ubox
18 27 0.008914452 ubox
18 38 0.012180974 ubox
18 39 0.144716009 ubox
18 40 0.038267291 ubox
18 42 0.057524182 ubox
18 47 0.007008959 ubox
18 59 0.006195945 ubox
19 23 0.010223581 ubox
19 26 0.008952038 ubox
19 36 0.018714467 ubox
19 41 0.057749159 ubox
20 25 0.008398930 ubox
20 35 0.017526942 ubox
20 36 0.009389216 ubox
20 37 0.116282493 ubox
20 46 0.021815349 ubox
21 38 0.006455020 ubox
21 44 0.021733468 ubox
21 45 0.032683922 ubox
22 34 0.003931537 ubox
22 38 0.006888882 ubox
22 39 0.007239194 ubox
22 40 0.006911436 ubox
22 43 0.033309211 ubox
22 44 0.051483353 ubox
22 45 0.013409072 ubox
22 47 0.059565563 ubox
23 34 0.164772789 ubox
23 38 0.003843813 ubox
23 39 0.006266977 ubox
23 42 0.030685375 ubox
23 43 0.052929416 ubox
23 44 0.013285201 ubox
23 45 0.018034257 ubox
23 47 0.019175197 ubox
24 33 0.164894633 ubox
24 36 0.007284126 ubox
24 41 0.028194871 ubox
25 32 0.164668157 ubox
25 44 0.168979740 ubox
25 45 0.038780266 ubox
26 31 0.163301953 ubox
26 34 0.014568918 ubox
26 42 0.974819917 ubox
26 43 0.127627810 ubox
26 44 0.004607893 ubox
26 47 0.003407196 ubox
26 62 0.009103629 ubox
26 64 0.003317804 ubox
27 33 0.014585219 ubox
27 36 0.004253124 ubox
27 41 0.985469664 ubox
28 32 0.009000181 ubox
28 39 0.003821645 ubox
28 40 0.985941624 ubox
28 43 0.003334144 ubox
28 47 0.003504846 ubox
28 61 0.013591116 ubox
28 62 0.004666218 ubox
29 38 0.003667070 ubox
29 39 0.985863846 ubox
29 42 0.003311417 ubox
29 60 0.013632123 ubox
29 61 0.004588074 ubox
30 38 0.958209344 ubox
30 59 0.013417765 ubox
31 36 0.547839187 ubox
32 36 0.150204971 ubox
32 37 0.337710106 ubox
32 56 0.006327022 ubox
32 57 0.006472448 ubox
32 58 0.005442090 ubox
33 38 0.006850846 ubox
33 42 0.007659078 ubox
33 55 0.006602225 ubox
34 41 0.007728753 ubox
35 44 0.011011676 ubox
36 43 0.011747094 ubox
36 45 0.003201113 ubox
36 54 0.020102584 ubox
36 55 0.007310133 ubox
37 53 0.021852509 ubox
37 54 0.005339759 ubox
38 52 0.022492037 ubox
39 51 0.022633076 ubox
40 50 0.022636628 ubox
41 47 0.004907527 ubox
41 49 0.022624772 ubox
42 48 0.022577903 ubox
43 48 0.013163237 ubox
48 62 0.010322799 ubox
48 64 0.995743125 ubox
48 65 0.004902917 ubox
49 63 0.998404989 ubox
50 61 0.020963420 ubox
50 62 0.999494246 ubox
51 60 0.026306935 ubox
51 61 0.999369840 ubox
51 62 0.004253479 ubox
52 59 0.029579498 ubox
52 60 0.998180910 ubox
52 61 0.005118681 ubox
53 57 0.020035011 ubox
53 58 0.122069733 ubox
54 58 0.151964449 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
6 66 0.9500000 lbox
7 65 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
14 20 0.9500000 lbox
15 19 0.9500000 lbox
26 42 0.9500000 lbox
27 41 0.9500000 lbox
28 40 0.9500000 lbox
29 39 0.9500000 lbox
30 38 0.9500000 lbox
48 64 0.9500000 lbox
49 63 0.9500000 lbox
50 62 0.9500000 lbox
51 61 0.9500000 lbox
52 60 0.9500000 lbox
showpage
end
%%EOF
