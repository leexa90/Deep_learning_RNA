%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:07:13 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5uz9_m)
} def

/sequence { (\
UAAGAAAUUCACGGCGGGCUUGAUGUCCGCGUCUACCUGGUUCACUGCCGUAUAGGCAG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.009396244 ubox
1 6 0.017943147 ubox
1 7 0.014044869 ubox
1 11 0.010121407 ubox
1 13 0.014917766 ubox
1 35 0.012841617 ubox
1 39 0.019953514 ubox
1 40 0.018847071 ubox
1 44 0.013909624 ubox
1 58 0.005728372 ubox
1 59 0.003611663 ubox
2 8 0.010984962 ubox
2 9 0.054077252 ubox
2 34 0.010762325 ubox
2 38 0.018633989 ubox
2 41 0.021902535 ubox
2 42 0.057431159 ubox
3 8 0.059126585 ubox
3 9 0.020888713 ubox
3 34 0.092177576 ubox
3 38 0.115717650 ubox
3 41 0.064579688 ubox
3 42 0.030952407 ubox
3 46 0.007800178 ubox
4 8 0.016593874 ubox
4 9 0.016434260 ubox
4 10 0.198274732 ubox
4 12 0.046311845 ubox
4 33 0.095869023 ubox
4 34 0.003404949 ubox
4 36 0.021476234 ubox
4 37 0.119303522 ubox
4 38 0.009508538 ubox
4 41 0.034569549 ubox
4 42 0.035112211 ubox
4 43 0.374159945 ubox
4 45 0.009267457 ubox
5 9 0.172723103 ubox
5 32 0.078266855 ubox
5 34 0.007496697 ubox
5 38 0.033299457 ubox
5 41 0.038289451 ubox
5 42 0.370728242 ubox
6 32 0.005217300 ubox
6 34 0.010984008 ubox
6 38 0.034293725 ubox
6 41 0.351737286 ubox
6 42 0.066606465 ubox
7 32 0.014700834 ubox
7 34 0.044839771 ubox
7 38 0.035950602 ubox
7 41 0.083212390 ubox
7 42 0.029467554 ubox
8 13 0.010329690 ubox
8 31 0.016976272 ubox
8 35 0.102722540 ubox
8 39 0.078150808 ubox
8 40 0.084953116 ubox
8 44 0.003493171 ubox
8 58 0.004340750 ubox
8 59 0.005685159 ubox
9 13 0.010365590 ubox
9 31 0.010359743 ubox
9 35 0.051279172 ubox
9 39 0.065378276 ubox
9 40 0.167577365 ubox
9 58 0.006939152 ubox
10 31 0.032642149 ubox
10 39 0.197496836 ubox
10 40 0.027035739 ubox
10 59 0.011727177 ubox
11 32 0.419648370 ubox
11 34 0.034009169 ubox
11 38 0.183187888 ubox
11 41 0.016213384 ubox
11 51 0.003773159 ubox
12 31 0.450228477 ubox
12 39 0.030336644 ubox
12 40 0.017145039 ubox
12 50 0.003943673 ubox
12 59 0.015209357 ubox
13 30 0.320735373 ubox
13 32 0.051912450 ubox
13 33 0.066288240 ubox
13 34 0.031748537 ubox
13 36 0.105426418 ubox
13 37 0.078598338 ubox
13 38 0.028839667 ubox
13 41 0.015150040 ubox
13 42 0.008184060 ubox
13 43 0.011292212 ubox
13 49 0.003891330 ubox
14 30 0.943620602 ubox
14 32 0.027506203 ubox
14 33 0.015627992 ubox
14 36 0.058373704 ubox
14 37 0.013536436 ubox
14 38 0.003365147 ubox
14 41 0.010150002 ubox
14 42 0.004377815 ubox
14 48 0.003863692 ubox
15 29 0.998421227 ubox
15 31 0.026490930 ubox
15 39 0.021314163 ubox
15 40 0.010077671 ubox
15 47 0.003855423 ubox
16 28 0.998889068 ubox
16 30 0.022115733 ubox
16 34 0.032211779 ubox
16 38 0.021672231 ubox
16 46 0.003642608 ubox
17 27 0.998904492 ubox
17 28 0.020721560 ubox
17 33 0.032942805 ubox
17 37 0.021775685 ubox
17 38 0.009293168 ubox
17 45 0.003611021 ubox
18 26 0.998508474 ubox
18 27 0.020676534 ubox
18 28 0.003433162 ubox
18 32 0.032924544 ubox
18 36 0.021727164 ubox
18 37 0.009299558 ubox
19 25 0.998811671 ubox
19 31 0.032929137 ubox
20 25 0.004353072 ubox
20 29 0.003188965 ubox
20 35 0.012625190 ubox
21 29 0.030610555 ubox
22 27 0.004090841 ubox
22 28 0.030949029 ubox
22 33 0.023926663 ubox
23 32 0.023995661 ubox
24 31 0.023955789 ubox
25 30 0.023530497 ubox
30 39 0.003841234 ubox
30 59 0.003278922 ubox
31 36 0.031662579 ubox
31 37 0.033214203 ubox
31 38 0.009794149 ubox
31 41 0.033431230 ubox
31 42 0.012794036 ubox
31 43 0.048092319 ubox
31 45 0.026806817 ubox
31 57 0.677964735 ubox
32 39 0.007519526 ubox
32 40 0.097603097 ubox
32 44 0.027675311 ubox
32 56 0.678391899 ubox
33 39 0.145704412 ubox
33 40 0.090394772 ubox
33 55 0.679444105 ubox
33 56 0.003519334 ubox
33 59 0.015336654 ubox
34 39 0.085433438 ubox
34 40 0.014030474 ubox
34 44 0.005363002 ubox
34 52 0.016833124 ubox
34 54 0.678054316 ubox
34 55 0.003244862 ubox
34 58 0.015447524 ubox
35 41 0.051022377 ubox
35 42 0.008772747 ubox
35 51 0.027140703 ubox
35 53 0.661865550 ubox
36 40 0.053866415 ubox
36 50 0.030105618 ubox
36 56 0.022977688 ubox
37 50 0.057080982 ubox
37 55 0.023041608 ubox
37 59 0.003197125 ubox
38 44 0.046975284 ubox
38 50 0.637770761 ubox
38 52 0.006804533 ubox
38 54 0.020293840 ubox
39 43 0.052410238 ubox
39 45 0.022415910 ubox
39 46 0.008439221 ubox
39 48 0.005573475 ubox
39 49 0.679788516 ubox
39 53 0.007710078 ubox
40 45 0.010790205 ubox
40 48 0.679908738 ubox
40 49 0.003649721 ubox
41 47 0.674750893 ubox
42 47 0.016173954 ubox
43 47 0.005703783 ubox
43 50 0.005153610 ubox
43 59 0.005993896 ubox
45 50 0.003245749 ubox
45 59 0.718390084 ubox
46 58 0.730806120 ubox
47 57 0.733152224 ubox
48 56 0.733153362 ubox
49 55 0.733027216 ubox
49 56 0.003203412 ubox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
38 50 0.9500000 lbox
39 49 0.9500000 lbox
40 48 0.9500000 lbox
41 47 0.9500000 lbox
showpage
end
%%EOF
