%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4jf2_a)
} def

/sequence { (\
GAACCGCGAAAGCGGUUCCACGACGAUACUUAUUUCCUUUGAUCGUCGUUAUUACUGGCUUCGGCCACAAAGGAGA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.005875066 ubox
1 18 0.982331137 ubox
1 19 0.093891410 ubox
1 21 0.004170589 ubox
1 68 0.008046660 ubox
2 16 0.006491825 ubox
2 17 0.992131209 ubox
3 16 0.997773015 ubox
3 17 0.003519497 ubox
4 15 0.999969482 ubox
5 14 0.999974340 ubox
6 13 0.999964862 ubox
7 12 0.999586616 ubox
16 75 0.045061615 ubox
17 26 0.003203976 ubox
17 74 0.108468935 ubox
17 76 0.003437290 ubox
18 25 0.004153715 ubox
18 72 0.004251241 ubox
18 73 0.129004304 ubox
18 75 0.005703505 ubox
19 25 0.029333616 ubox
19 48 0.005051963 ubox
19 57 0.004997795 ubox
19 72 0.137811422 ubox
19 73 0.046013515 ubox
19 75 0.051397582 ubox
20 27 0.004695807 ubox
20 31 0.004405508 ubox
20 46 0.004325509 ubox
20 49 0.891929341 ubox
20 50 0.047665946 ubox
20 52 0.007989308 ubox
20 53 0.006030338 ubox
20 56 0.003596477 ubox
21 25 0.008130753 ubox
21 45 0.004725549 ubox
21 48 0.960239095 ubox
21 72 0.005872453 ubox
21 73 0.004360579 ubox
21 75 0.003527183 ubox
22 29 0.025512068 ubox
22 30 0.003316693 ubox
22 31 0.015712913 ubox
22 44 0.004740431 ubox
22 47 0.963199032 ubox
22 50 0.020562799 ubox
23 27 0.004233972 ubox
23 30 0.015314448 ubox
23 31 0.004413663 ubox
23 43 0.004719477 ubox
23 46 0.963113012 ubox
23 49 0.021616391 ubox
24 41 0.004633068 ubox
24 45 0.963198073 ubox
24 48 0.021760549 ubox
25 29 0.010949912 ubox
25 30 0.004604350 ubox
25 31 0.009633871 ubox
25 34 0.009590881 ubox
25 36 0.003562816 ubox
25 40 0.004653258 ubox
25 44 0.963169762 ubox
25 47 0.021766190 ubox
26 30 0.008637826 ubox
26 31 0.012349577 ubox
26 33 0.011747703 ubox
26 35 0.004292508 ubox
26 39 0.005015971 ubox
26 43 0.961020396 ubox
26 46 0.021737342 ubox
27 32 0.012206709 ubox
27 41 0.067556896 ubox
27 42 0.931253701 ubox
27 45 0.021369916 ubox
28 33 0.009763440 ubox
28 34 0.010432562 ubox
28 35 0.015538411 ubox
28 38 0.018396597 ubox
28 39 0.025435287 ubox
28 40 0.088807248 ubox
28 43 0.006605312 ubox
29 41 0.761017423 ubox
29 75 0.004409734 ubox
30 41 0.054237507 ubox
30 42 0.153052953 ubox
30 76 0.004341233 ubox
31 41 0.200750298 ubox
31 42 0.007129301 ubox
31 75 0.004621156 ubox
31 76 0.003882454 ubox
32 38 0.288805319 ubox
32 39 0.258861704 ubox
32 40 0.203413520 ubox
32 43 0.017305282 ubox
33 41 0.023207811 ubox
33 42 0.036746299 ubox
33 75 0.004959668 ubox
33 76 0.215703190 ubox
34 41 0.045305945 ubox
34 42 0.011039105 ubox
34 74 0.005169551 ubox
34 75 0.253017926 ubox
34 76 0.004895464 ubox
35 41 0.013522172 ubox
35 42 0.048153279 ubox
35 74 0.266173876 ubox
35 75 0.003256056 ubox
36 41 0.054236438 ubox
36 73 0.267707459 ubox
37 41 0.014440770 ubox
37 72 0.267715572 ubox
38 71 0.267545183 ubox
39 70 0.267186930 ubox
40 51 0.003628318 ubox
40 67 0.017522146 ubox
40 69 0.266722571 ubox
41 47 0.007994016 ubox
41 50 0.005099647 ubox
41 65 0.005737913 ubox
41 66 0.020305116 ubox
41 68 0.265972947 ubox
42 46 0.007610780 ubox
42 49 0.011866440 ubox
42 50 0.008267628 ubox
42 52 0.006497310 ubox
42 53 0.005785196 ubox
43 48 0.011467890 ubox
43 51 0.006568584 ubox
43 64 0.152123879 ubox
43 67 0.079550095 ubox
44 48 0.005965584 ubox
44 63 0.157108085 ubox
44 64 0.004946746 ubox
45 50 0.007872301 ubox
45 52 0.009446202 ubox
45 53 0.005295763 ubox
45 55 0.037824422 ubox
45 59 0.010032208 ubox
45 62 0.156866158 ubox
45 65 0.121642829 ubox
45 66 0.006112829 ubox
46 51 0.009194875 ubox
46 54 0.036466512 ubox
46 58 0.011277110 ubox
46 64 0.121923935 ubox
47 57 0.011392032 ubox
47 58 0.003236925 ubox
47 63 0.121935629 ubox
48 52 0.008289558 ubox
48 53 0.013342576 ubox
48 55 0.104099064 ubox
48 56 0.006643080 ubox
48 59 0.159674659 ubox
48 62 0.117225041 ubox
48 68 0.003876227 ubox
49 54 0.101921917 ubox
49 57 0.005076112 ubox
49 58 0.160689403 ubox
49 70 0.006432912 ubox
49 71 0.010402765 ubox
49 72 0.014158477 ubox
49 73 0.023542732 ubox
49 74 0.094683928 ubox
49 75 0.031764810 ubox
49 76 0.013933023 ubox
50 54 0.009757471 ubox
50 57 0.155441487 ubox
50 58 0.008170787 ubox
50 69 0.011124317 ubox
50 70 0.017675476 ubox
50 71 0.028111470 ubox
50 72 0.047441617 ubox
50 73 0.133806047 ubox
50 74 0.067104653 ubox
50 75 0.027759470 ubox
50 76 0.015583252 ubox
51 56 0.138320343 ubox
51 60 0.018345223 ubox
51 61 0.007350201 ubox
52 57 0.036572128 ubox
52 58 0.022188383 ubox
52 67 0.005472221 ubox
52 69 0.044591296 ubox
52 70 0.102001877 ubox
52 71 0.240181560 ubox
52 72 0.058478986 ubox
52 73 0.026598912 ubox
52 74 0.069154061 ubox
52 75 0.036078678 ubox
52 76 0.025870629 ubox
53 57 0.018414647 ubox
53 58 0.013492703 ubox
53 67 0.007526726 ubox
53 69 0.108598649 ubox
53 70 0.263500610 ubox
53 71 0.066062366 ubox
53 72 0.034052927 ubox
53 73 0.073098140 ubox
53 74 0.035799287 ubox
53 75 0.028910797 ubox
53 76 0.007242865 ubox
55 64 0.027717239 ubox
55 72 0.131767326 ubox
55 73 0.064118594 ubox
55 75 0.038653928 ubox
56 63 0.027847341 ubox
56 67 0.875569227 ubox
56 69 0.015935242 ubox
56 70 0.011144712 ubox
56 71 0.092967864 ubox
56 72 0.045409023 ubox
56 73 0.003693729 ubox
56 74 0.028776093 ubox
56 75 0.005214118 ubox
57 62 0.027711967 ubox
57 66 0.977023878 ubox
57 68 0.009541752 ubox
58 65 0.977267873 ubox
59 63 0.011455956 ubox
59 64 0.976466579 ubox
59 72 0.018355501 ubox
59 73 0.003971102 ubox
59 75 0.058553125 ubox
60 64 0.003638689 ubox
60 71 0.018380511 ubox
60 72 0.003913633 ubox
60 74 0.058768043 ubox
60 75 0.006575079 ubox
61 70 0.017793663 ubox
61 71 0.003602905 ubox
61 73 0.058664817 ubox
61 74 0.007955585 ubox
61 76 0.011703211 ubox
62 72 0.058650288 ubox
62 73 0.008252269 ubox
62 75 0.013742902 ubox
63 68 0.019934819 ubox
64 68 0.004201868 ubox
65 73 0.030041038 ubox
66 72 0.030192905 ubox
66 73 0.003938226 ubox
66 75 0.003843610 ubox
68 72 0.040245677 ubox
68 73 0.070525199 ubox
68 75 0.089180655 ubox
1 18 0.9500000 lbox
2 17 0.9500000 lbox
3 16 0.9500000 lbox
4 15 0.9500000 lbox
5 14 0.9500000 lbox
6 13 0.9500000 lbox
7 12 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
22 47 0.9500000 lbox
23 46 0.9500000 lbox
24 45 0.9500000 lbox
25 44 0.9500000 lbox
26 43 0.9500000 lbox
27 42 0.9500000 lbox
29 41 0.9500000 lbox
56 67 0.9500000 lbox
57 66 0.9500000 lbox
58 65 0.9500000 lbox
59 64 0.9500000 lbox
showpage
end
%%EOF
