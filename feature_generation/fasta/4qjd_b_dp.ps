%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4qjd_b)
} def

/sequence { (\
UAAAUGAUAUAGCCGGUCCCAAGCCCGGAAAAAGGAGGAGGGUAUA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.017154837 ubox
1 7 0.015750233 ubox
1 9 0.022975092 ubox
1 11 0.020665643 ubox
1 12 0.004010163 ubox
1 22 0.003624521 ubox
1 36 0.004163973 ubox
1 37 0.003899751 ubox
1 38 0.009649363 ubox
1 39 0.014584299 ubox
1 40 0.011673920 ubox
1 41 0.015058501 ubox
1 42 0.007567528 ubox
1 44 0.010788220 ubox
1 46 0.006552198 ubox
2 8 0.024657423 ubox
2 10 0.021184107 ubox
2 17 0.003408439 ubox
2 43 0.011265901 ubox
2 45 0.007182714 ubox
3 8 0.014160929 ubox
3 10 0.013280421 ubox
3 17 0.005715814 ubox
3 43 0.003866574 ubox
3 45 0.004305704 ubox
4 8 0.009348271 ubox
4 10 0.018828392 ubox
4 17 0.012746034 ubox
4 43 0.016092485 ubox
4 45 0.026925357 ubox
5 9 0.017500530 ubox
5 11 0.015709914 ubox
5 12 0.013118158 ubox
5 15 0.028895987 ubox
5 16 0.012693527 ubox
5 21 0.022255636 ubox
5 22 0.003736135 ubox
5 31 0.004413322 ubox
5 32 0.006984276 ubox
5 33 0.010365961 ubox
5 34 0.014527259 ubox
5 35 0.016217471 ubox
5 36 0.036658873 ubox
5 37 0.023560520 ubox
5 38 0.009098091 ubox
5 39 0.008571546 ubox
5 40 0.006657875 ubox
5 41 0.003656889 ubox
5 42 0.016206099 ubox
5 44 0.027698187 ubox
5 46 0.015301721 ubox
6 10 0.014308626 ubox
6 13 0.023057858 ubox
6 14 0.041035101 ubox
6 18 0.085635538 ubox
6 19 0.006092828 ubox
6 20 0.024391320 ubox
6 43 0.025221743 ubox
6 45 0.013170899 ubox
7 17 0.086394857 ubox
7 43 0.013518839 ubox
7 45 0.090292948 ubox
8 12 0.006798720 ubox
8 15 0.007588785 ubox
8 16 0.085246568 ubox
8 29 0.005314570 ubox
8 30 0.003978162 ubox
8 31 0.012304696 ubox
8 32 0.019549428 ubox
8 33 0.032422252 ubox
8 34 0.016950922 ubox
8 35 0.011906023 ubox
8 36 0.010121278 ubox
8 37 0.004527184 ubox
8 38 0.003483483 ubox
8 39 0.007902557 ubox
8 40 0.004823514 ubox
8 41 0.007218028 ubox
8 42 0.013323064 ubox
8 44 0.093165543 ubox
8 46 0.713753583 ubox
9 17 0.021776163 ubox
9 43 0.089379464 ubox
9 45 0.805024160 ubox
10 15 0.009086765 ubox
10 16 0.022074019 ubox
10 29 0.010230514 ubox
10 30 0.013096843 ubox
10 31 0.083911060 ubox
10 32 0.010295205 ubox
10 33 0.012619288 ubox
10 34 0.006638241 ubox
10 35 0.005316819 ubox
10 36 0.005156527 ubox
10 37 0.005506573 ubox
10 38 0.008268426 ubox
10 39 0.007793955 ubox
10 40 0.003341859 ubox
10 41 0.006032835 ubox
10 42 0.083800639 ubox
10 44 0.815004194 ubox
10 46 0.039880672 ubox
11 17 0.006138601 ubox
11 43 0.804095449 ubox
11 45 0.043905208 ubox
12 17 0.003441904 ubox
12 18 0.005404861 ubox
12 19 0.007956428 ubox
12 20 0.007228977 ubox
12 24 0.005473998 ubox
12 43 0.315540601 ubox
12 45 0.007862248 ubox
13 23 0.005560417 ubox
13 27 0.007274513 ubox
13 28 0.344202351 ubox
13 35 0.050408414 ubox
13 37 0.003485261 ubox
13 38 0.019149071 ubox
13 40 0.007314378 ubox
13 41 0.795928992 ubox
13 42 0.348093786 ubox
14 23 0.004747374 ubox
14 27 0.345250733 ubox
14 34 0.050526003 ubox
14 35 0.003755625 ubox
14 37 0.019180631 ubox
14 38 0.006403600 ubox
14 40 0.794873585 ubox
14 41 0.347800643 ubox
14 42 0.008126132 ubox
15 19 0.006402678 ubox
15 20 0.025076297 ubox
15 24 0.018606540 ubox
15 25 0.071924309 ubox
15 26 0.342487814 ubox
15 43 0.015974532 ubox
15 45 0.085208915 ubox
16 20 0.008749551 ubox
16 24 0.087669832 ubox
16 25 0.339030422 ubox
16 43 0.063184691 ubox
16 45 0.182011185 ubox
17 21 0.005117420 ubox
17 22 0.013991500 ubox
17 23 0.095039279 ubox
17 28 0.004742378 ubox
17 29 0.110665756 ubox
17 30 0.015199257 ubox
17 31 0.006314509 ubox
17 32 0.004446190 ubox
17 34 0.003404461 ubox
17 35 0.033641773 ubox
17 36 0.569962041 ubox
17 37 0.057821322 ubox
17 38 0.211682760 ubox
17 39 0.535901963 ubox
17 40 0.013261970 ubox
17 41 0.015186962 ubox
17 42 0.027473829 ubox
17 44 0.183715496 ubox
17 46 0.004551488 ubox
18 23 0.176610627 ubox
18 27 0.004933598 ubox
18 28 0.111067010 ubox
18 34 0.034669448 ubox
18 35 0.572759552 ubox
18 37 0.229218811 ubox
18 38 0.552281602 ubox
18 40 0.029881830 ubox
18 41 0.035652664 ubox
18 42 0.289787556 ubox
19 23 0.021679303 ubox
19 27 0.110392989 ubox
19 28 0.095588318 ubox
19 34 0.564985506 ubox
19 35 0.278800189 ubox
19 37 0.545878347 ubox
19 38 0.142129991 ubox
19 40 0.035890336 ubox
19 41 0.291282224 ubox
19 42 0.052969725 ubox
20 27 0.124322486 ubox
20 28 0.061242590 ubox
20 34 0.282872711 ubox
20 35 0.150405604 ubox
20 37 0.154314734 ubox
20 38 0.020530278 ubox
20 40 0.290699422 ubox
20 41 0.053165585 ubox
20 42 0.004036312 ubox
21 45 0.031399919 ubox
22 43 0.007790339 ubox
22 45 0.013756545 ubox
23 43 0.176083258 ubox
24 28 0.140773675 ubox
24 34 0.041984026 ubox
24 35 0.374662128 ubox
24 37 0.162146754 ubox
24 38 0.172628026 ubox
24 40 0.005590817 ubox
24 41 0.005644756 ubox
24 42 0.180239658 ubox
25 34 0.374109064 ubox
25 35 0.452131712 ubox
25 37 0.171923880 ubox
25 38 0.037936945 ubox
25 40 0.005607452 ubox
25 41 0.180282282 ubox
26 34 0.455163317 ubox
26 35 0.173833831 ubox
26 37 0.040086072 ubox
26 38 0.012977917 ubox
26 40 0.180239038 ubox
32 43 0.003298297 ubox
32 45 0.004183857 ubox
33 43 0.006869498 ubox
33 45 0.006605283 ubox
34 43 0.014317485 ubox
34 45 0.006722949 ubox
35 43 0.005421325 ubox
35 45 0.004413736 ubox
36 43 0.017125085 ubox
36 45 0.016641431 ubox
37 43 0.012490065 ubox
37 45 0.008749005 ubox
38 43 0.007658199 ubox
38 45 0.005836919 ubox
39 43 0.004732992 ubox
39 45 0.014202586 ubox
40 45 0.012096629 ubox
41 45 0.004574281 ubox
8 46 0.9500000 lbox
9 45 0.9500000 lbox
10 44 0.9500000 lbox
11 43 0.9500000 lbox
13 41 0.9500000 lbox
14 40 0.9500000 lbox
17 36 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
showpage
end
%%EOF
