%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCAGUAGGAACACUAUACUACUGGAUAAUCAAAGACAAAUCUGCCCGAAGGGCUUGAGAACAUACCCAUUGCACUCCGGGUAUGCAGAGGUGGCAGCCUCCGGUGGGUUAAAACCCAACGUUCUCAACAAUAGUG\
) def
/coor [
[2.43936324 205.54978943]
[-5.74958563 218.11724854]
[-13.93853474 230.68470764]
[-22.12748337 243.25218201]
[-30.31643295 255.81964111]
[-38.50538254 268.38711548]
[-46.69433212 280.95455933]
[-39.67116928 294.61364746]
[-40.43450546 309.95355225]
[-48.77901077 322.84793091]
[-62.46004868 329.82824707]
[-77.79749298 329.01684570]
[-90.66564178 320.63195801]
[-97.60304260 306.92910767]
[-96.74355316 291.59426880]
[-88.31837463 278.75247192]
[-74.59384918 271.85806274]
[-59.26179504 272.76562500]
[-51.07284546 260.19815063]
[-42.88389587 247.63069153]
[-34.69494629 235.06323242]
[-26.50599670 222.49575806]
[-18.31704903 209.92829895]
[-10.12809944 197.36083984]
[-23.33974075 204.46383667]
[-36.55138016 211.56683350]
[-49.76302338 218.66983032]
[-59.47254562 230.10333252]
[-72.71200562 237.15434265]
[-87.61805725 238.83049011]
[-102.09281921 234.89584351]
[-114.09908295 225.90420532]
[-121.94707489 213.12104797]
[-124.53225708 198.34550476]
[-121.49078369 183.65708923]
[-113.25072479 171.12307739]
[-100.97178650 162.50752258]
[-86.38213348 159.02299500]
[-71.53512573 161.15989685]
[-58.52274323 168.61543274]
[-43.68407822 170.80950928]
[-28.84540939 173.00358582]
[-14.00674343 175.19766235]
[-25.97700310 166.15814209]
[-37.94726181 157.11863708]
[-49.91751862 148.07911682]
[-66.20115662 143.35897827]
[-66.17324829 126.40505981]
[-49.87416458 121.73855591]
[-40.87799835 136.10885620]
[-28.90774155 145.14837646]
[-16.93748283 154.18789673]
[-4.96722412 163.22741699]
[10.00776958 164.09317017]
[22.94001579 156.49337769]
[35.87226486 148.89356995]
[48.80450821 141.29377747]
[61.73675537 133.69396973]
[74.66900635 126.09416199]
[87.60124969 118.49436188]
[72.40802765 65.41007996]
[75.50410461 50.73307800]
[78.60018158 36.05607986]
[81.69625854 21.37907982]
[84.79233551 6.70207977]
[87.88841248 -7.97491980]
[90.98448944 -22.65191841]
[79.50135040 -32.85158539]
[74.67173004 -47.43137360]
[77.79476166 -62.46940231]
[88.03037262 -73.92050934]
[102.62522888 -78.70440674]
[117.65338898 -75.53425598]
[129.07235718 -65.26280212]
[133.81048584 -50.65302277]
[130.59324646 -35.63486862]
[120.28604889 -24.24815369]
[105.66149139 -19.55584335]
[102.56541443 -4.87884331]
[99.46933746 9.79815578]
[96.37326050 24.47515488]
[93.27718353 39.15215302]
[90.18110657 53.82915497]
[87.08502960 68.50615692]
[92.85503387 73.29750824]
[104.39504242 82.88020325]
[110.16504669 87.67155457]
[124.02323914 81.93130493]
[137.88143921 76.19105530]
[151.73962402 70.45080566]
[165.59782410 64.71054840]
[175.14628601 51.37792587]
[191.43823242 53.24988937]
[197.71391296 68.40072632]
[187.51744080 81.24455261]
[171.33807373 78.56874847]
[157.47987366 84.30899811]
[143.62168884 90.04924774]
[129.76348877 95.78949738]
[115.90529633 101.52974701]
[115.90529633 116.52974701]
[129.76348877 122.27000427]
[145.47412109 120.40276337]
[154.27165222 132.42161560]
[168.12985229 138.16186523]
[181.98803711 143.90211487]
[195.84623718 149.64236450]
[209.70442200 155.38261414]
[225.88380432 152.70681763]
[236.08027649 165.55064392]
[229.80459595 180.70147705]
[213.51263428 182.57344055]
[203.96417236 169.24081421]
[190.10598755 163.50056458]
[176.24778748 157.76031494]
[162.38960266 152.02006531]
[148.53140259 146.27981567]
[133.81199646 148.55763245]
[124.02323914 136.12818909]
[110.16504669 130.38793945]
[95.20104980 131.42660522]
[82.26880646 139.02641296]
[69.33655548 146.62622070]
[56.40431213 154.22601318]
[43.47206497 161.82582092]
[30.53981972 169.42562866]
[17.60757256 177.02542114]
[32.14896011 173.34466553]
[46.62596130 177.27104187]
[57.31491852 187.79463196]
[61.46649551 202.20867920]
[58.01286316 216.80567932]
[47.84233475 227.83111572]
[33.57089615 232.44912720]
[18.86932755 229.47187805]
] def
/pairs [
[1 24]
[2 23]
[3 22]
[4 21]
[5 20]
[6 19]
[7 18]
[43 53]
[44 52]
[45 51]
[46 50]
[54 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[101 120]
[102 119]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
