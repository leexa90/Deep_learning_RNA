%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGAGCGUAGCUCAGCUGGUUAGAGCACCGGACUGUGGAUCCGGGGGUCGUGGGUUCAAGUCCCAUCGCUCACCCCA\
) def
/coor [
[112.24427795 222.09687805]
[109.83810425 207.29112244]
[107.43193817 192.48536682]
[105.02577209 177.67961121]
[102.61959839 162.87385559]
[100.21343231 148.06811523]
[97.80725861 133.26235962]
[85.45375061 129.99331665]
[75.23789978 122.31659698]
[68.66096497 111.36033630]
[53.77033234 113.16838074]
[38.87969971 114.97643280]
[23.98906517 116.78448486]
[17.36630440 130.71798706]
[4.24981642 138.83964539]
[-11.17497349 138.55786133]
[-23.98607063 129.96255493]
[-30.09550285 115.79645538]
[-27.55377007 100.57991028]
[-17.17193031 89.16847229]
[-2.26279259 85.20348358]
[12.41619301 89.95015717]
[22.18101501 101.89385223]
[37.07164764 100.08580017]
[51.96228027 98.27774811]
[66.85291290 96.46969604]
[71.87428284 82.10765076]
[82.75477600 71.47291565]
[97.22778320 66.78092194]
[112.27828979 69.00910187]
[120.79926300 56.66434479]
[129.32023621 44.31958389]
[137.84120178 31.97482681]
[146.36218262 19.63006973]
[148.76235962 10.52143192]
[155.48312378 6.96923876]
[164.49426270 -5.02240229]
[173.50538635 -17.01404381]
[182.51652527 -29.00568581]
[191.52766418 -40.99732590]
[200.53878784 -52.98896790]
[209.54992676 -64.98060608]
[218.56106567 -76.97225189]
[220.66587830 -92.65282440]
[234.49722290 -98.17942810]
[239.17875671 -114.47419739]
[256.13269043 -114.48645782]
[260.83779907 -98.19847870]
[246.48886108 -89.16828918]
[245.02857971 -74.34544373]
[230.55270386 -67.96112061]
[221.54156494 -55.96947479]
[212.53044128 -43.97783279]
[203.51930237 -31.98619270]
[194.50816345 -19.99455070]
[185.49703979 -8.00290966]
[176.48590088 3.98873138]
[167.47476196 15.98037338]
[158.70693970 28.15104103]
[150.18595886 40.49580002]
[141.66499329 52.84055710]
[133.14402771 65.18531799]
[124.62305450 77.53007507]
[132.22193909 91.45954895]
[132.51998901 107.32411194]
[125.44969177 121.52918243]
[112.61301422 130.85618591]
[115.01918793 145.66194153]
[117.42535400 160.46769714]
[119.83152008 175.27345276]
[122.23769379 190.07919312]
[124.64385986 204.88494873]
[127.05003357 219.69070435]
[139.17414856 230.19714355]
[138.37521362 246.22029114]
[125.26609802 255.46856689]
[109.90299225 250.84747314]
] def
/pairs [
[1 73]
[2 72]
[3 71]
[4 70]
[5 69]
[6 68]
[7 67]
[10 26]
[11 25]
[12 24]
[13 23]
[30 63]
[31 62]
[32 61]
[33 60]
[34 59]
[36 58]
[37 57]
[38 56]
[39 55]
[40 54]
[41 53]
[42 52]
[43 51]
[45 49]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
