%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:49 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGAAGAUAUAAUCCUAAUGAUAUGGUUUGGGAGUUUCUACCAAGAGCCUUAAACUCUUGAUUAU\
) def
/coor [
[79.11324310 122.58482361]
[73.75818634 116.05297089]
[70.38143158 108.31091309]
[69.23756409 99.94232178]
[70.41280365 91.57807922]
[57.42242432 84.07807922]
[44.43204498 76.57807922]
[33.41351318 83.29661560]
[20.64196587 84.53812408]
[8.67374706 80.11847687]
[-0.12358765 70.98025513]
[-4.03957796 58.99256516]
[-2.35318971 46.56895447]
[-14.57182884 37.86809921]
[-26.79046822 29.16724777]
[-39.00910568 20.46639442]
[-51.22774506 11.76554012]
[-63.44638443 3.06468630]
[-77.73011780 8.89379311]
[-92.89362335 6.05271721]
[-104.09827423 -4.55196476]
[-107.76871490 -19.53633690]
[-102.73371887 -34.11894226]
[-90.59992981 -43.64652252]
[-75.23920441 -45.07886124]
[-61.55308914 -37.95890427]
[-53.90877533 -24.55860710]
[-54.74553299 -9.15395260]
[-42.52689362 -0.45309922]
[-30.30825424 8.24775410]
[-18.08961487 16.94860840]
[-5.87097549 25.64946175]
[6.34766388 34.35031509]
[22.47643661 27.90839386]
[39.45896912 32.21573257]
[50.76302338 45.80060196]
[51.93204498 63.58769989]
[64.92242432 71.08769989]
[77.91280365 78.58769989]
[98.62113953 69.26842499]
[120.08085632 76.69570923]
[130.59791565 96.82218933]
[145.44523621 98.95691681]
[160.29255676 101.09163666]
[175.13987732 103.22635651]
[189.98719788 105.36108398]
[204.83451843 107.49580383]
[216.36723328 96.93500519]
[231.99230957 96.30970001]
[244.33206177 105.91513824]
[247.56004333 121.21593475]
[240.15208435 134.98750305]
[225.60601807 140.72734070]
[210.79003906 135.72528076]
[202.69979858 122.34312439]
[187.85247803 120.20840454]
[173.00515747 118.07367706]
[158.15783691 115.93895721]
[143.31051636 113.80423737]
[128.46319580 111.66950989]
[124.21656036 118.97074127]
[118.14429474 124.84180450]
[110.70417786 128.84010315]
[102.45709229 130.66419983]
[94.02477264 130.17660522]
] def
/pairs [
[5 39]
[6 38]
[7 37]
[13 33]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
