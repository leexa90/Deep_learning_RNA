%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3w3s_b)
} def

/sequence { (\
GGGAGAGGUUGGCCGGCUGGUGCCGCCCCGGGACUUCAAAUCCCGUGGGAGGUCCCGCAAGGGAGCUCCGGAGGGUUCGAUUCCCUCCCUCUCCCGCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 95 0.999215862 ubox
1 97 0.003782232 ubox
2 94 0.999975800 ubox
2 95 0.004655091 ubox
3 93 0.999983907 ubox
3 94 0.003502106 ubox
4 92 0.999845880 ubox
5 91 0.999977976 ubox
6 90 0.999486911 ubox
7 14 0.003805171 ubox
7 27 0.014744814 ubox
7 28 0.009906572 ubox
7 29 0.023767378 ubox
7 88 0.007075515 ubox
7 89 0.996573897 ubox
7 90 0.012352817 ubox
8 13 0.008980766 ubox
8 26 0.021107750 ubox
8 27 0.013662261 ubox
8 28 0.069499541 ubox
8 29 0.036654968 ubox
8 87 0.009289101 ubox
8 88 0.543598523 ubox
8 89 0.028298747 ubox
9 25 0.014919114 ubox
10 25 0.027139577 ubox
10 30 0.004085705 ubox
10 47 0.003303903 ubox
10 70 0.003851818 ubox
11 24 0.035913276 ubox
11 26 0.008433105 ubox
11 27 0.893937726 ubox
11 28 0.423668774 ubox
11 29 0.053472220 ubox
11 69 0.005299547 ubox
11 87 0.003270694 ubox
12 21 0.004935276 ubox
12 23 0.035919014 ubox
12 26 0.899021722 ubox
12 27 0.424868419 ubox
12 28 0.052942919 ubox
12 29 0.003915352 ubox
12 68 0.005046801 ubox
13 20 0.005627847 ubox
13 22 0.035741607 ubox
13 25 0.636117710 ubox
14 19 0.006197160 ubox
14 20 0.032047833 ubox
14 25 0.769661171 ubox
15 21 0.003582682 ubox
15 23 0.006138795 ubox
15 24 0.999061740 ubox
15 27 0.005911609 ubox
16 23 0.999289916 ubox
16 26 0.005939179 ubox
17 22 0.998750681 ubox
17 25 0.005914680 ubox
26 47 0.009213373 ubox
26 48 0.022201082 ubox
26 49 0.026122212 ubox
27 47 0.064624108 ubox
27 48 0.048289866 ubox
28 45 0.028750268 ubox
28 47 0.619466990 ubox
28 48 0.009737188 ubox
28 70 0.006293354 ubox
29 45 0.968988728 ubox
29 47 0.019070203 ubox
29 57 0.003987045 ubox
30 43 0.005925130 ubox
30 44 0.984357349 ubox
30 46 0.004384552 ubox
30 56 0.004226262 ubox
30 84 0.007630955 ubox
30 85 0.174942186 ubox
30 86 0.006797184 ubox
31 42 0.006194893 ubox
31 43 0.984410573 ubox
31 44 0.005853315 ubox
31 55 0.004226902 ubox
31 83 0.007651610 ubox
31 84 0.175191473 ubox
31 85 0.007460031 ubox
32 41 0.005704824 ubox
32 42 0.984259614 ubox
32 43 0.005838751 ubox
32 54 0.004226922 ubox
32 82 0.007578095 ubox
32 83 0.175187560 ubox
32 84 0.007363079 ubox
33 41 0.939516791 ubox
33 53 0.004226398 ubox
33 81 0.008373211 ubox
33 82 0.173170431 ubox
34 52 0.004225826 ubox
35 39 0.196604281 ubox
35 40 0.152960069 ubox
35 51 0.004220238 ubox
35 80 0.046847358 ubox
36 40 0.043033638 ubox
36 50 0.004193416 ubox
36 79 0.042078683 ubox
36 80 0.164271953 ubox
37 49 0.004180146 ubox
37 79 0.165929598 ubox
38 77 0.031525572 ubox
39 76 0.027489696 ubox
39 77 0.128078992 ubox
40 46 0.003497464 ubox
40 76 0.128045619 ubox
40 77 0.029399877 ubox
41 45 0.003244833 ubox
41 75 0.040520984 ubox
42 74 0.037758215 ubox
42 75 0.170696728 ubox
43 73 0.034692151 ubox
43 74 0.171428681 ubox
44 71 0.009657016 ubox
44 73 0.172049147 ubox
46 70 0.037239971 ubox
46 71 0.170994617 ubox
47 69 0.057156485 ubox
48 68 0.042595398 ubox
48 69 0.996013444 ubox
49 67 0.018482196 ubox
49 68 0.998708010 ubox
49 69 0.004727150 ubox
50 67 0.999608768 ubox
51 66 0.999564762 ubox
51 67 0.003584884 ubox
52 66 0.006082544 ubox
53 64 0.997624257 ubox
53 65 0.004070955 ubox
54 63 0.999974698 ubox
55 62 0.999970495 ubox
55 63 0.003301068 ubox
56 61 0.999579043 ubox
56 62 0.004560664 ubox
70 84 0.007444715 ubox
70 85 0.004698209 ubox
70 86 0.005972327 ubox
70 87 0.028843135 ubox
70 88 0.837331661 ubox
70 89 0.006373818 ubox
71 83 0.007479354 ubox
71 84 0.004657970 ubox
71 85 0.006570449 ubox
71 86 0.013259010 ubox
71 87 0.982521128 ubox
71 88 0.005146465 ubox
72 82 0.007450941 ubox
72 86 0.983991881 ubox
73 81 0.007105724 ubox
73 83 0.004588759 ubox
73 84 0.014690254 ubox
73 85 0.984293980 ubox
73 86 0.003506871 ubox
74 82 0.004569807 ubox
74 83 0.018557173 ubox
74 84 0.984228123 ubox
74 85 0.004730933 ubox
75 81 0.006468684 ubox
75 82 0.020105009 ubox
75 83 0.983132108 ubox
75 84 0.005519413 ubox
76 80 0.020984023 ubox
1 95 0.9500000 lbox
2 94 0.9500000 lbox
3 93 0.9500000 lbox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
6 90 0.9500000 lbox
7 89 0.9500000 lbox
11 27 0.9500000 lbox
12 26 0.9500000 lbox
13 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
29 45 0.9500000 lbox
30 44 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
48 69 0.9500000 lbox
49 68 0.9500000 lbox
50 67 0.9500000 lbox
51 66 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
70 88 0.9500000 lbox
71 87 0.9500000 lbox
72 86 0.9500000 lbox
73 85 0.9500000 lbox
74 84 0.9500000 lbox
75 83 0.9500000 lbox
showpage
end
%%EOF
