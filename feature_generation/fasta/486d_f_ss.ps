%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CGUCACACCAUGGAAGGGGGUUGCAAAGAAAGGGUGGCCCCCUUCGGGGCGCCUAACUUUGUGAUUCCUAACUGGGGUGAAGUCG\
) def
/coor [
[89.25666046 257.57833862]
[92.50769806 242.40565491]
[104.07859039 232.06669617]
[102.43801880 217.15667725]
[100.79745483 202.24667358]
[99.15688324 187.33665466]
[95.20240784 180.88127136]
[97.73893738 171.85351562]
[96.64401245 156.89353943]
[85.23848724 147.38304138]
[83.91496277 132.22708130]
[93.96778870 120.32840729]
[83.36055756 113.14384460]
[78.82730865 101.16132355]
[82.02281952 88.75488281]
[91.78063202 80.45329285]
[91.23280334 65.46330261]
[90.68496704 50.47331238]
[90.13713837 35.48331833]
[89.58930969 20.49332619]
[89.04148102 5.50333261]
[88.49365234 -9.48666000]
[87.94581604 -24.47665215]
[87.39798737 -39.46664429]
[86.85015869 -54.45663834]
[86.30233002 -69.44663239]
[85.75449371 -84.43662262]
[85.20666504 -99.42661285]
[74.25396729 -107.50568390]
[70.08827972 -120.25645447]
[74.04150391 -132.86938477]
[84.42723083 -140.72476196]
[84.42723083 -155.72476196]
[84.42723083 -170.72476196]
[84.42723083 -185.72476196]
[84.42723083 -200.72476196]
[81.23847961 -209.54325867]
[84.71119690 -216.27008057]
[85.25903320 -231.26007080]
[85.80686188 -246.25007629]
[86.35469055 -261.24005127]
[78.20529175 -275.47097778]
[86.68766785 -289.50598145]
[103.07587433 -288.90707397]
[110.51113129 -274.29034424]
[101.34468079 -260.69223022]
[100.79685211 -245.70223999]
[100.24902344 -230.71224976]
[99.70119476 -215.72225952]
[99.42723083 -200.72476196]
[99.42723083 -185.72476196]
[99.42723083 -170.72476196]
[99.42723083 -155.72476196]
[99.42723083 -140.72476196]
[111.78437042 -129.47621155]
[112.30706024 -112.43951416]
[100.19666290 -99.97444916]
[100.74449158 -84.98445129]
[101.29232025 -69.99446106]
[101.84014893 -55.00446701]
[102.38797760 -40.01447678]
[102.93581390 -25.02448273]
[103.48364258 -10.03449059]
[104.03147125 4.95550203]
[104.57929993 19.94549561]
[105.12713623 34.93548584]
[105.67496490 49.92547989]
[106.22279358 64.91547394]
[106.77062225 79.90546417]
[119.07692719 90.74244690]
[119.97499847 107.11555481]
[108.92777252 119.23347473]
[120.60592651 129.54164124]
[121.50322723 144.72879028]
[111.60399628 155.79861450]
[112.69892120 170.75859070]
[114.06690216 185.69609070]
[115.70746613 200.60609436]
[117.34803772 215.51611328]
[118.98860168 230.42613220]
[132.53067017 238.00187683]
[139.00292969 252.10469055]
[135.91667175 267.31176758]
[124.45862579 277.77563477]
[109.03464508 279.47274780]
] def
/pairs [
[3 80]
[4 79]
[5 78]
[6 77]
[8 76]
[9 75]
[12 72]
[16 69]
[17 68]
[18 67]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[24 61]
[25 60]
[26 59]
[27 58]
[28 57]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[38 49]
[39 48]
[40 47]
[41 46]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
