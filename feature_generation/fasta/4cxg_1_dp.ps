%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4cxg_1)
} def

/sequence { (\
CGCCCGUCGCUACUACCGAUUGGAUGGUUUAGUGAGGCCCUCGGAUCGGCCCCGCCGGGGUCGGCCCACGGCCCUGGCGGAGCGCUGAGAAGACGGUCGAACUUGACUAUCUAGAGGAAGUAAAAGUCGUAACAA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.019994865 ubox
1 9 0.041321801 ubox
1 126 0.008516581 ubox
1 129 0.061599429 ubox
2 7 0.004290703 ubox
2 8 0.042881908 ubox
2 10 0.328656969 ubox
2 127 0.018458637 ubox
2 128 0.063063986 ubox
2 130 0.101901095 ubox
2 133 0.154507608 ubox
3 9 0.328261790 ubox
3 126 0.026663177 ubox
3 129 0.098994489 ubox
4 9 0.020938171 ubox
4 126 0.033231234 ubox
4 129 0.050087807 ubox
5 9 0.006438269 ubox
5 126 0.045991423 ubox
5 129 0.832617074 ubox
6 10 0.011117792 ubox
6 20 0.003325519 ubox
6 127 0.023862447 ubox
6 128 0.852302265 ubox
6 130 0.037472220 ubox
6 133 0.164627470 ubox
7 19 0.003604313 ubox
7 122 0.005177993 ubox
7 123 0.022761369 ubox
7 124 0.026261772 ubox
7 125 0.024560623 ubox
7 126 0.066469051 ubox
7 129 0.027909692 ubox
7 131 0.039257685 ubox
7 132 0.157058318 ubox
7 134 0.004020926 ubox
8 18 0.003658211 ubox
8 126 0.810360145 ubox
8 129 0.182162458 ubox
9 17 0.003576583 ubox
9 121 0.014914233 ubox
9 127 0.180585958 ubox
9 128 0.182827477 ubox
9 130 0.114036080 ubox
9 133 0.004473414 ubox
10 120 0.015178428 ubox
10 126 0.257009455 ubox
10 129 0.116215293 ubox
11 119 0.014419751 ubox
11 122 0.931334887 ubox
11 123 0.106074457 ubox
11 124 0.023514565 ubox
11 125 0.201551376 ubox
11 126 0.010485526 ubox
11 131 0.003859740 ubox
12 121 0.996054794 ubox
12 127 0.019092852 ubox
12 130 0.003687728 ubox
13 120 0.999052821 ubox
13 126 0.019210094 ubox
13 129 0.003512395 ubox
14 118 0.039443958 ubox
14 119 0.984590416 ubox
14 122 0.016051388 ubox
14 125 0.017640278 ubox
15 121 0.017374139 ubox
16 116 0.009600920 ubox
16 117 0.998645789 ubox
16 120 0.014152823 ubox
17 116 0.999456795 ubox
17 117 0.020810060 ubox
18 128 0.003477012 ubox
19 127 0.003473508 ubox
20 113 0.087286611 ubox
20 114 0.955938907 ubox
20 115 0.013045979 ubox
20 126 0.003183506 ubox
21 113 0.989320864 ubox
21 114 0.008091105 ubox
22 111 0.005042628 ubox
22 112 0.998840942 ubox
23 111 0.999966055 ubox
24 110 0.999732548 ubox
25 109 0.999188302 ubox
26 108 0.999494484 ubox
27 107 0.999966591 ubox
28 105 0.007530149 ubox
28 106 0.998346332 ubox
29 105 0.901710817 ubox
29 106 0.028860186 ubox
30 105 0.040065783 ubox
31 103 0.985253381 ubox
31 104 0.035100587 ubox
32 102 0.999383915 ubox
32 103 0.007958778 ubox
33 100 0.010312996 ubox
33 101 0.996686363 ubox
36 98 0.999014995 ubox
37 97 0.999568429 ubox
37 98 0.009852667 ubox
38 96 0.999504175 ubox
39 95 0.997995633 ubox
39 96 0.031169551 ubox
40 89 0.017267659 ubox
40 92 0.022495185 ubox
40 95 0.043492070 ubox
41 88 0.017273411 ubox
41 90 0.008575062 ubox
41 91 0.021298996 ubox
41 92 0.004671080 ubox
41 93 0.986630505 ubox
42 87 0.017271377 ubox
42 89 0.010653815 ubox
42 92 0.994725203 ubox
43 86 0.017178435 ubox
43 94 0.006730679 ubox
44 85 0.016899076 ubox
46 84 0.005667109 ubox
46 88 0.995875286 ubox
46 89 0.006558928 ubox
46 90 0.004112595 ubox
47 84 0.011679534 ubox
47 87 0.999676026 ubox
47 89 0.003944750 ubox
48 83 0.008809832 ubox
48 85 0.021320453 ubox
48 86 0.998728391 ubox
49 83 0.036760390 ubox
49 85 0.999266713 ubox
50 82 0.039205828 ubox
50 84 0.999044021 ubox
51 80 0.010589008 ubox
51 82 0.943411184 ubox
51 84 0.007280507 ubox
52 79 0.007507742 ubox
52 80 0.999703691 ubox
52 82 0.010708362 ubox
53 79 0.999934880 ubox
53 80 0.004679172 ubox
54 78 0.999981642 ubox
55 77 0.999995679 ubox
56 76 0.999963819 ubox
57 75 0.999238499 ubox
58 74 0.999986887 ubox
59 73 0.999993801 ubox
60 72 0.999992192 ubox
61 71 0.999639476 ubox
62 70 0.999838130 ubox
62 71 0.006289542 ubox
63 69 0.998604814 ubox
64 69 0.016824318 ubox
120 133 0.003515991 ubox
121 132 0.003419024 ubox
123 127 0.004386984 ubox
123 130 0.010119781 ubox
124 130 0.007872963 ubox
125 130 0.016346852 ubox
126 130 0.005249283 ubox
126 133 0.113765991 ubox
127 131 0.005555769 ubox
127 132 0.105389941 ubox
127 134 0.007540614 ubox
127 135 0.003397608 ubox
129 133 0.020226716 ubox
130 134 0.010211955 ubox
130 135 0.012009924 ubox
5 129 0.9500000 lbox
6 128 0.9500000 lbox
8 126 0.9500000 lbox
11 122 0.9500000 lbox
12 121 0.9500000 lbox
13 120 0.9500000 lbox
14 119 0.9500000 lbox
16 117 0.9500000 lbox
17 116 0.9500000 lbox
20 114 0.9500000 lbox
21 113 0.9500000 lbox
22 112 0.9500000 lbox
23 111 0.9500000 lbox
24 110 0.9500000 lbox
25 109 0.9500000 lbox
26 108 0.9500000 lbox
27 107 0.9500000 lbox
28 106 0.9500000 lbox
29 105 0.9500000 lbox
31 103 0.9500000 lbox
32 102 0.9500000 lbox
33 101 0.9500000 lbox
36 98 0.9500000 lbox
37 97 0.9500000 lbox
38 96 0.9500000 lbox
39 95 0.9500000 lbox
41 93 0.9500000 lbox
42 92 0.9500000 lbox
46 88 0.9500000 lbox
47 87 0.9500000 lbox
48 86 0.9500000 lbox
49 85 0.9500000 lbox
50 84 0.9500000 lbox
51 82 0.9500000 lbox
52 80 0.9500000 lbox
53 79 0.9500000 lbox
54 78 0.9500000 lbox
55 77 0.9500000 lbox
56 76 0.9500000 lbox
57 75 0.9500000 lbox
58 74 0.9500000 lbox
59 73 0.9500000 lbox
60 72 0.9500000 lbox
61 71 0.9500000 lbox
62 70 0.9500000 lbox
63 69 0.9500000 lbox
showpage
end
%%EOF
