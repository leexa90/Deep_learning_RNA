%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:48 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCGGGCGCGGUGGCUCACGCCUGUAAUCCCAGCACUUUGGGAGGCCGAGGCGGGAGGAUCGCGAACACGCGAGACCCCGUCUCUA\
) def
/coor [
[140.27615356 112.42575836]
[125.39579010 110.53501129]
[110.51543427 108.64426422]
[91.10823059 128.46513367]
[78.69289398 136.88294983]
[66.27755737 145.30075073]
[53.86222076 153.71855164]
[41.44688797 162.13636780]
[34.36671066 176.28492737]
[19.49041367 177.02322388]
[7.07507896 185.44102478]
[0.41245794 200.42573547]
[-15.92218971 201.87878418]
[-25.12517929 188.30538940]
[-17.72926331 173.66870117]
[-1.34272730 173.02569580]
[11.07260799 164.60789490]
[17.26475716 151.06143188]
[33.02908325 149.72102356]
[45.44441605 141.30322266]
[57.85975266 132.88542175]
[70.27508545 124.46761322]
[82.69042206 116.04980469]
[67.83056641 118.09547424]
[57.55672073 107.16625214]
[60.51623154 92.46110535]
[74.21812439 86.35716248]
[87.12974548 93.99209595]
[78.93746185 81.42681122]
[70.74517822 68.86152649]
[62.55289078 56.29623795]
[54.36060333 43.73094940]
[46.16831970 31.16566086]
[31.30633926 24.23358917]
[30.14844513 7.87537146]
[43.88578033 -1.08106208]
[58.38655090 6.57790089]
[58.73360443 22.97337532]
[66.92588806 35.53866196]
[75.11817932 48.10395050]
[83.31046295 60.66923904]
[91.50274658 73.23452759]
[99.69503784 85.79981232]
[112.40618134 93.76390839]
[127.28653717 95.65465546]
[142.16690063 97.54540253]
[160.14318848 88.77544403]
[175.26414490 100.60174561]
[190.24214172 101.41382599]
[205.22013855 102.22591400]
[220.19815063 103.03799438]
[235.17614746 103.85007477]
[250.15414429 104.66216278]
[265.13214111 105.47424316]
[280.11013794 106.28633118]
[289.08367920 103.58057404]
[295.61126709 107.40777588]
[307.68124390 97.56127167]
[322.81216431 99.14550781]
[332.12490845 110.71305084]
[347.06381226 112.06535339]
[362.00274658 113.41764832]
[376.94165039 114.76994324]
[391.88058472 116.12223816]
[406.52874756 108.74909210]
[420.08782959 117.97317505]
[418.60937500 134.30554199]
[403.61431885 140.94485474]
[390.52828979 131.06115723]
[375.58935547 129.70886230]
[360.65045166 128.35656738]
[345.71151733 127.00427246]
[330.77261353 125.65196991]
[319.53402710 135.35917664]
[304.36459351 134.20057678]
[294.25897217 122.34669495]
[279.29806519 121.26432800]
[264.32006836 120.45224762]
[249.34207153 119.64015961]
[234.36405945 118.82807922]
[219.38606262 118.01599884]
[204.40806580 117.20391083]
[189.43005371 116.39183044]
[174.45205688 115.57974243]
[167.26846313 123.23912811]
[156.80929565 125.60520172]
] def
/pairs [
[1 46]
[2 45]
[3 44]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[48 84]
[49 83]
[50 82]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[57 76]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
