%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:25 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1emi_b)
} def

/sequence { (\
GCACGCAGGCGGUUUGUUAAGUCAGAUGUGAAAUCCCCGGGCUCAACCUGGGAACUGCAUCUGAUACUGGCAAGCUUGAGUCUCGUACGAAGACUGACGCUCAGGUGCGUCGACUUGGAGGUUGUGCUUCGUGGCUUCCGGAGCUAACGCGUUAAGUCGAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.011311286 ubox
1 88 0.012937974 ubox
1 108 0.998669395 ubox
2 9 0.011300976 ubox
2 107 0.999415316 ubox
2 109 0.003190232 ubox
3 86 0.017983282 ubox
3 106 0.999101116 ubox
3 110 0.011884475 ubox
4 11 0.004016303 ubox
4 85 0.018871153 ubox
4 104 0.031200753 ubox
4 105 0.998201272 ubox
4 107 0.011516372 ubox
4 109 0.016069418 ubox
5 10 0.011279269 ubox
5 13 0.003461993 ubox
5 17 0.009071917 ubox
5 75 0.005629690 ubox
5 84 0.022570518 ubox
5 86 0.027560389 ubox
5 100 0.014405747 ubox
5 102 0.030062103 ubox
5 106 0.013203241 ubox
5 108 0.021192750 ubox
6 11 0.007481748 ubox
6 12 0.003620369 ubox
6 16 0.009474407 ubox
6 74 0.005634039 ubox
6 78 0.025156451 ubox
6 85 0.028433419 ubox
6 99 0.014381901 ubox
6 104 0.266779006 ubox
6 105 0.014048300 ubox
6 107 0.021198942 ubox
7 15 0.009402001 ubox
7 77 0.025430485 ubox
7 83 0.038662733 ubox
7 101 0.034504267 ubox
7 106 0.020710555 ubox
8 14 0.008808181 ubox
8 18 0.004333383 ubox
8 71 0.010729455 ubox
8 76 0.025023352 ubox
8 82 0.039553179 ubox
8 98 0.005823991 ubox
8 100 0.027688569 ubox
8 101 0.950474321 ubox
8 102 0.173736184 ubox
9 13 0.005729923 ubox
9 17 0.004926793 ubox
9 71 0.004495211 ubox
9 75 0.025002464 ubox
9 81 0.039548830 ubox
9 98 0.007845383 ubox
9 100 0.995469859 ubox
9 101 0.020915688 ubox
9 102 0.004250193 ubox
10 16 0.004975952 ubox
10 69 0.011298590 ubox
10 70 0.003732530 ubox
10 74 0.024897556 ubox
10 78 0.012095161 ubox
10 80 0.039526367 ubox
10 96 0.005165231 ubox
10 99 0.995893840 ubox
11 68 0.011580156 ubox
11 75 0.009239648 ubox
11 76 0.331999418 ubox
11 77 0.014655612 ubox
11 98 0.933645399 ubox
12 67 0.011665105 ubox
12 71 0.013830631 ubox
12 75 0.995958805 ubox
12 98 0.005627069 ubox
13 66 0.011560525 ubox
13 70 0.013816263 ubox
13 73 0.004725496 ubox
13 74 0.997272109 ubox
13 96 0.003808539 ubox
13 97 0.007069682 ubox
14 69 0.011834240 ubox
14 72 0.003774451 ubox
14 73 0.997253640 ubox
14 96 0.005426316 ubox
15 72 0.999099117 ubox
16 67 0.013923920 ubox
16 71 0.999725304 ubox
17 66 0.013785293 ubox
17 69 0.025469710 ubox
17 70 0.997950719 ubox
18 66 0.011437723 ubox
18 69 0.972021424 ubox
18 70 0.014335356 ubox
19 65 0.008721315 ubox
19 68 0.910224028 ubox
20 65 0.033571040 ubox
20 68 0.176076979 ubox
21 65 0.943610401 ubox
21 67 0.215702292 ubox
21 68 0.004772282 ubox
22 64 0.987606557 ubox
22 66 0.136460592 ubox
23 63 0.999806475 ubox
24 62 0.999749838 ubox
25 61 0.999982297 ubox
26 60 0.999722681 ubox
27 59 0.999503847 ubox
28 58 0.999786026 ubox
28 60 0.006689093 ubox
29 54 0.003916693 ubox
29 57 0.986793333 ubox
29 59 0.012276556 ubox
30 35 0.018287772 ubox
30 55 0.224935552 ubox
30 56 0.626508085 ubox
30 58 0.014359245 ubox
31 56 0.226283255 ubox
32 56 0.091208607 ubox
33 56 0.042369084 ubox
34 52 0.010431970 ubox
34 53 0.812570202 ubox
34 54 0.232517023 ubox
35 51 0.010203965 ubox
35 52 0.802474859 ubox
36 50 0.009931634 ubox
36 51 0.774028283 ubox
36 52 0.595602734 ubox
37 50 0.743879818 ubox
37 51 0.633043789 ubox
38 50 0.667571413 ubox
39 47 0.007052732 ubox
39 48 0.713718550 ubox
39 49 0.698037562 ubox
40 47 0.713981692 ubox
40 48 0.699697427 ubox
40 49 0.006950708 ubox
41 47 0.697820704 ubox
41 48 0.007644286 ubox
67 74 0.003389577 ubox
67 104 0.010925969 ubox
68 73 0.003380272 ubox
68 103 0.010954626 ubox
69 102 0.010930135 ubox
70 101 0.005628469 ubox
73 101 0.014694165 ubox
74 100 0.016846087 ubox
74 106 0.005459462 ubox
75 96 0.004339711 ubox
75 99 0.016845058 ubox
75 105 0.006611477 ubox
76 90 0.003356375 ubox
76 96 0.024569703 ubox
76 97 0.134673875 ubox
76 104 0.028285463 ubox
77 85 0.003780735 ubox
77 89 0.003588973 ubox
77 96 0.138824003 ubox
77 97 0.742101484 ubox
77 103 0.060395037 ubox
78 84 0.006015525 ubox
78 88 0.003677052 ubox
78 95 0.049990217 ubox
78 98 0.031431883 ubox
78 102 0.064374504 ubox
79 83 0.005239181 ubox
79 95 0.982299281 ubox
79 101 0.064378406 ubox
80 88 0.004558838 ubox
80 94 0.996225565 ubox
80 98 0.034097807 ubox
80 100 0.064301482 ubox
81 87 0.004347910 ubox
81 90 0.006921424 ubox
81 92 0.004607176 ubox
81 93 0.996175217 ubox
81 97 0.034657512 ubox
81 99 0.062697052 ubox
82 89 0.007802250 ubox
82 92 0.996111223 ubox
82 96 0.034815548 ubox
82 99 0.007089584 ubox
83 89 0.007087433 ubox
83 90 0.611420573 ubox
83 91 0.775439475 ubox
83 93 0.019948928 ubox
83 97 0.062562732 ubox
84 89 0.864647143 ubox
84 92 0.021966347 ubox
84 96 0.063296451 ubox
84 99 0.007576016 ubox
85 94 0.056383449 ubox
85 95 0.032608578 ubox
85 98 0.009581068 ubox
86 90 0.021485189 ubox
86 91 0.008638572 ubox
86 92 0.005543573 ubox
86 93 0.055891976 ubox
86 97 0.009496335 ubox
88 92 0.014431265 ubox
88 96 0.008588325 ubox
89 94 0.006897713 ubox
89 95 0.007457501 ubox
89 108 0.004888607 ubox
93 106 0.003184393 ubox
94 104 0.037608843 ubox
95 103 0.038233190 ubox
96 102 0.039768923 ubox
96 108 0.004498668 ubox
96 111 0.014703443 ubox
97 101 0.034603058 ubox
97 110 0.015568650 ubox
98 104 0.012169687 ubox
98 107 0.006758627 ubox
98 109 0.016382165 ubox
99 106 0.006907056 ubox
99 108 0.017644636 ubox
100 105 0.006933070 ubox
100 107 0.017641334 ubox
109 161 0.987717932 ubox
110 160 0.997660105 ubox
111 159 0.999814821 ubox
112 158 0.999966114 ubox
113 157 0.999868563 ubox
114 156 0.999972313 ubox
115 155 0.999350456 ubox
116 154 0.997606333 ubox
116 155 0.003991639 ubox
117 139 0.003662651 ubox
117 150 0.004025800 ubox
117 152 0.023737117 ubox
117 153 0.991997137 ubox
118 130 0.004375499 ubox
118 138 0.003678537 ubox
118 150 0.034690250 ubox
118 152 0.967163140 ubox
118 153 0.067236981 ubox
119 129 0.004441767 ubox
119 137 0.003676615 ubox
119 152 0.088989420 ubox
120 128 0.004464595 ubox
120 136 0.003675077 ubox
120 148 0.008806805 ubox
120 150 0.975456771 ubox
120 152 0.003898081 ubox
121 127 0.004482952 ubox
121 135 0.003675131 ubox
121 148 0.978037917 ubox
121 150 0.095474057 ubox
122 126 0.004194494 ubox
122 134 0.003659344 ubox
122 146 0.003937843 ubox
122 147 0.978188892 ubox
122 149 0.086688698 ubox
123 133 0.003379265 ubox
123 146 0.975428449 ubox
123 147 0.152134281 ubox
123 149 0.043599003 ubox
123 151 0.003905856 ubox
124 144 0.003704613 ubox
124 145 0.936339455 ubox
124 148 0.059790982 ubox
124 150 0.004021995 ubox
125 146 0.025980121 ubox
125 147 0.055321535 ubox
125 149 0.004006127 ubox
126 144 0.999677040 ubox
126 145 0.005821131 ubox
127 143 0.999946980 ubox
128 142 0.999252547 ubox
128 143 0.004576799 ubox
129 141 0.998299225 ubox
129 142 0.027639432 ubox
130 140 0.997967622 ubox
130 141 0.038745697 ubox
131 135 0.003209231 ubox
131 136 0.003209848 ubox
131 137 0.007361634 ubox
131 138 0.069975779 ubox
131 139 0.987092370 ubox
131 148 0.004081517 ubox
132 140 0.051418356 ubox
132 146 0.004966598 ubox
133 137 0.104738098 ubox
133 138 0.795205480 ubox
133 139 0.107827241 ubox
133 145 0.006078238 ubox
134 138 0.114778636 ubox
134 139 0.006787369 ubox
134 144 0.006350821 ubox
135 143 0.006351543 ubox
136 142 0.006303290 ubox
137 141 0.005680261 ubox
143 150 0.003310735 ubox
144 149 0.003308312 ubox
1 108 0.9500000 lbox
2 107 0.9500000 lbox
3 106 0.9500000 lbox
4 105 0.9500000 lbox
8 101 0.9500000 lbox
9 100 0.9500000 lbox
10 99 0.9500000 lbox
11 98 0.9500000 lbox
12 75 0.9500000 lbox
13 74 0.9500000 lbox
14 73 0.9500000 lbox
15 72 0.9500000 lbox
16 71 0.9500000 lbox
17 70 0.9500000 lbox
18 69 0.9500000 lbox
19 68 0.9500000 lbox
21 65 0.9500000 lbox
22 64 0.9500000 lbox
23 63 0.9500000 lbox
24 62 0.9500000 lbox
25 61 0.9500000 lbox
26 60 0.9500000 lbox
27 59 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
34 53 0.9500000 lbox
35 52 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
39 48 0.9500000 lbox
40 47 0.9500000 lbox
77 97 0.9500000 lbox
79 95 0.9500000 lbox
80 94 0.9500000 lbox
81 93 0.9500000 lbox
82 92 0.9500000 lbox
83 91 0.9500000 lbox
84 89 0.9500000 lbox
109 161 0.9500000 lbox
110 160 0.9500000 lbox
111 159 0.9500000 lbox
112 158 0.9500000 lbox
113 157 0.9500000 lbox
114 156 0.9500000 lbox
115 155 0.9500000 lbox
116 154 0.9500000 lbox
117 153 0.9500000 lbox
118 152 0.9500000 lbox
120 150 0.9500000 lbox
121 148 0.9500000 lbox
122 147 0.9500000 lbox
123 146 0.9500000 lbox
124 145 0.9500000 lbox
126 144 0.9500000 lbox
127 143 0.9500000 lbox
128 142 0.9500000 lbox
129 141 0.9500000 lbox
130 140 0.9500000 lbox
131 139 0.9500000 lbox
133 138 0.9500000 lbox
showpage
end
%%EOF
