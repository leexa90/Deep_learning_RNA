%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4l81_a)
} def

/sequence { (\
GGAUCACGAGGGGGAGACCCCGGCAACCUGGGACGGACACCCAAGGUGCUCACACCGGAGACGGUGGAUCCGGCCCGAGAGGGCAACGAAGUCCGU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 71 0.942725022 ubox
1 94 0.330065428 ubox
2 70 0.943608095 ubox
2 93 0.330303149 ubox
3 69 0.943325066 ubox
3 92 0.329234065 ubox
4 67 0.004261731 ubox
4 68 0.942977196 ubox
4 89 0.033434869 ubox
4 90 0.008375377 ubox
4 91 0.316928550 ubox
5 10 0.008004668 ubox
5 22 0.004898510 ubox
5 66 0.005837100 ubox
5 67 0.941316972 ubox
5 72 0.003292113 ubox
5 88 0.040746904 ubox
5 91 0.042243674 ubox
6 65 0.005937684 ubox
6 92 0.005705422 ubox
6 96 0.015111419 ubox
7 11 0.003281966 ubox
7 22 0.120145046 ubox
7 23 0.015611848 ubox
7 64 0.005403170 ubox
7 66 0.047766257 ubox
7 67 0.012445782 ubox
7 72 0.024332502 ubox
7 88 0.283345548 ubox
7 91 0.008495675 ubox
7 95 0.016773127 ubox
8 21 0.121612798 ubox
8 24 0.020960869 ubox
8 51 0.035484172 ubox
8 65 0.016281527 ubox
8 70 0.009106730 ubox
8 71 0.024157686 ubox
8 87 0.278952259 ubox
8 94 0.016470705 ubox
9 50 0.026998658 ubox
9 69 0.009061205 ubox
9 92 0.003205334 ubox
10 19 0.013200703 ubox
10 20 0.127465206 ubox
10 21 0.973053816 ubox
10 49 0.008249916 ubox
10 51 0.004560755 ubox
10 70 0.003279672 ubox
10 71 0.004157312 ubox
10 87 0.005183183 ubox
11 18 0.013214176 ubox
11 19 0.127390300 ubox
11 20 0.974440382 ubox
11 21 0.180566277 ubox
11 70 0.003917899 ubox
12 18 0.127230371 ubox
12 19 0.974443777 ubox
12 20 0.180837249 ubox
12 21 0.035551718 ubox
13 18 0.973823184 ubox
13 19 0.180923739 ubox
13 20 0.035626699 ubox
14 18 0.178135043 ubox
14 19 0.035544019 ubox
22 28 0.005222911 ubox
22 49 0.023940866 ubox
22 50 0.864637768 ubox
22 51 0.326752403 ubox
22 53 0.003499075 ubox
22 70 0.003214493 ubox
22 71 0.006514565 ubox
23 27 0.005147112 ubox
23 49 0.995989297 ubox
23 50 0.050776071 ubox
23 51 0.014530331 ubox
23 70 0.004574644 ubox
24 48 0.996573329 ubox
25 47 0.705290195 ubox
26 47 0.703621964 ubox
27 45 0.082080038 ubox
27 46 0.994552317 ubox
28 45 0.994531940 ubox
28 46 0.003992235 ubox
29 43 0.696824819 ubox
29 44 0.709605468 ubox
30 41 0.067119131 ubox
30 42 0.983257719 ubox
30 76 0.004019377 ubox
31 40 0.068906147 ubox
31 41 0.983948025 ubox
31 42 0.162952991 ubox
31 75 0.004021992 ubox
32 38 0.015351194 ubox
32 40 0.981363170 ubox
32 41 0.163426027 ubox
32 42 0.004443805 ubox
32 74 0.003948819 ubox
34 72 0.005432751 ubox
35 40 0.040909381 ubox
35 41 0.008766842 ubox
35 42 0.006034532 ubox
35 71 0.005522823 ubox
36 40 0.009755573 ubox
36 41 0.006102371 ubox
36 51 0.003214978 ubox
36 70 0.005517115 ubox
37 50 0.003230297 ubox
37 69 0.005054691 ubox
38 48 0.008112778 ubox
39 47 0.008216791 ubox
40 46 0.008229359 ubox
41 45 0.008169670 ubox
45 71 0.003319761 ubox
46 70 0.003323841 ubox
48 70 0.010962838 ubox
48 71 0.005703194 ubox
50 67 0.003502642 ubox
50 68 0.143612137 ubox
51 66 0.016586916 ubox
51 67 0.208594065 ubox
51 72 0.005980323 ubox
51 88 0.003399548 ubox
52 65 0.012062137 ubox
52 69 0.005335640 ubox
53 64 0.006833687 ubox
53 66 0.996116877 ubox
53 67 0.008342473 ubox
54 65 0.998935311 ubox
55 64 0.999625255 ubox
55 73 0.011500461 ubox
56 63 0.999644037 ubox
56 72 0.024675162 ubox
57 62 0.996875770 ubox
57 71 0.024904132 ubox
58 62 0.007105134 ubox
58 70 0.024904549 ubox
59 69 0.024836316 ubox
62 66 0.020247719 ubox
62 67 0.010616683 ubox
62 72 0.004453777 ubox
63 71 0.004502287 ubox
64 70 0.004497654 ubox
66 71 0.004266789 ubox
66 94 0.005972987 ubox
67 71 0.022786156 ubox
67 87 0.010364466 ubox
67 93 0.011784426 ubox
68 92 0.011827867 ubox
69 85 0.006638052 ubox
69 86 0.009783780 ubox
69 88 0.006626233 ubox
69 89 0.061495964 ubox
69 90 0.013731355 ubox
69 91 0.010992952 ubox
70 88 0.064468386 ubox
71 88 0.095100407 ubox
71 95 0.003257841 ubox
72 84 0.050122349 ubox
72 87 0.114510261 ubox
72 93 0.010271702 ubox
72 94 0.017829361 ubox
73 84 0.996435428 ubox
73 87 0.003311569 ubox
73 93 0.011884388 ubox
74 82 0.009970534 ubox
74 83 0.999051300 ubox
75 81 0.009911639 ubox
75 82 0.999058877 ubox
75 83 0.004613203 ubox
76 81 0.998668947 ubox
76 82 0.005591781 ubox
79 96 0.012503378 ubox
81 94 0.041336893 ubox
82 93 0.041393394 ubox
83 92 0.041393149 ubox
84 91 0.041529405 ubox
85 92 0.010062116 ubox
85 96 0.031044944 ubox
86 92 0.050342593 ubox
86 96 0.670189251 ubox
87 91 0.052854368 ubox
87 95 0.744528402 ubox
88 92 0.005490159 ubox
88 93 0.062134128 ubox
88 94 0.741772947 ubox
88 96 0.004747475 ubox
89 96 0.008381407 ubox
90 96 0.011594558 ubox
91 96 0.005586746 ubox
1 71 0.9500000 lbox
2 70 0.9500000 lbox
3 69 0.9500000 lbox
4 68 0.9500000 lbox
5 67 0.9500000 lbox
10 21 0.9500000 lbox
11 20 0.9500000 lbox
12 19 0.9500000 lbox
13 18 0.9500000 lbox
22 50 0.9500000 lbox
23 49 0.9500000 lbox
24 48 0.9500000 lbox
25 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
29 44 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
32 40 0.9500000 lbox
53 66 0.9500000 lbox
54 65 0.9500000 lbox
55 64 0.9500000 lbox
56 63 0.9500000 lbox
57 62 0.9500000 lbox
73 84 0.9500000 lbox
74 83 0.9500000 lbox
75 82 0.9500000 lbox
76 81 0.9500000 lbox
86 96 0.9500000 lbox
87 95 0.9500000 lbox
88 94 0.9500000 lbox
showpage
end
%%EOF
