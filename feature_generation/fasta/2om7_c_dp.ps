%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2om7_c)
} def

/sequence { (\
GCCCGUCACGCCAUGGGAGCGGGCUCUACCCGAAGUCGCCGGGAGCCUACGGGCAGGCGCCGAGGGUAGGGCCCGUGACUGGGGCGAAGUCGUAAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.003837297 ubox
1 7 0.026755050 ubox
1 9 0.006704492 ubox
1 85 0.067168295 ubox
1 90 0.027834033 ubox
1 91 0.043007231 ubox
1 93 0.157372164 ubox
1 96 0.046380374 ubox
2 17 0.027917539 ubox
2 82 0.003844074 ubox
2 83 0.027873868 ubox
2 84 0.066822180 ubox
2 89 0.033516782 ubox
2 92 0.159196391 ubox
3 16 0.028018600 ubox
3 81 0.003857963 ubox
3 82 0.028927797 ubox
3 83 0.066393023 ubox
3 89 0.030141498 ubox
3 92 0.071483865 ubox
4 15 0.028022823 ubox
4 81 0.029852358 ubox
4 82 0.065268407 ubox
4 86 0.020135986 ubox
4 89 0.091938351 ubox
4 92 0.839798398 ubox
5 9 0.005762471 ubox
5 11 0.013424179 ubox
5 12 0.007553391 ubox
5 14 0.028013611 ubox
5 79 0.056580230 ubox
5 80 0.007894487 ubox
5 85 0.020016469 ubox
5 90 0.038389840 ubox
5 91 0.859704769 ubox
5 93 0.006810770 ubox
5 96 0.015360534 ubox
6 10 0.012605639 ubox
6 13 0.026905161 ubox
6 78 0.057403968 ubox
6 81 0.007097784 ubox
6 84 0.019202305 ubox
6 87 0.071185311 ubox
6 88 0.049323233 ubox
6 89 0.194226833 ubox
6 92 0.006681511 ubox
6 94 0.003708034 ubox
6 95 0.015101214 ubox
7 15 0.005148410 ubox
7 77 0.057439723 ubox
7 81 0.006996621 ubox
7 83 0.017741106 ubox
7 84 0.003334110 ubox
7 86 0.067265657 ubox
7 89 0.642111797 ubox
7 92 0.012464890 ubox
8 14 0.004800378 ubox
8 76 0.055049298 ubox
8 80 0.005129498 ubox
8 90 0.024782431 ubox
8 93 0.012780007 ubox
9 15 0.004788439 ubox
9 16 0.006658328 ubox
9 17 0.004369164 ubox
9 19 0.005171205 ubox
9 75 0.053825153 ubox
9 81 0.005505375 ubox
9 82 0.004551172 ubox
9 83 0.005582351 ubox
9 84 0.050071395 ubox
9 86 0.984233483 ubox
9 89 0.020675033 ubox
9 92 0.010929350 ubox
10 20 0.048826368 ubox
10 74 0.006226744 ubox
10 85 0.995363514 ubox
10 91 0.004780731 ubox
11 15 0.003952649 ubox
11 17 0.020783005 ubox
11 19 0.048696931 ubox
11 81 0.005446032 ubox
11 82 0.051916668 ubox
11 83 0.031675726 ubox
11 84 0.995111048 ubox
12 16 0.020818882 ubox
12 17 0.038517927 ubox
12 19 0.004262042 ubox
12 81 0.052494084 ubox
12 82 0.040391211 ubox
12 83 0.994161489 ubox
13 80 0.038869756 ubox
14 81 0.545889348 ubox
14 82 0.119131272 ubox
15 20 0.007168391 ubox
15 79 0.025498748 ubox
15 80 0.978811771 ubox
16 79 0.988828425 ubox
16 80 0.125821943 ubox
17 79 0.126556003 ubox
18 76 0.004298021 ubox
19 76 0.998128152 ubox
20 75 0.998510861 ubox
21 74 0.999955117 ubox
22 73 0.999994069 ubox
23 72 0.999995261 ubox
24 71 0.999987364 ubox
25 70 0.999347384 ubox
26 69 0.999926594 ubox
27 68 0.999699339 ubox
28 67 0.999743965 ubox
29 65 0.003780706 ubox
29 66 0.999975234 ubox
30 64 0.005242692 ubox
30 65 0.999964475 ubox
30 66 0.003861176 ubox
31 62 0.013068735 ubox
31 64 0.999599347 ubox
31 65 0.005437935 ubox
32 37 0.005655559 ubox
32 39 0.003839334 ubox
32 60 0.009091361 ubox
32 61 0.027835236 ubox
35 58 0.101782849 ubox
35 60 0.528078909 ubox
35 61 0.775628157 ubox
36 57 0.101782634 ubox
36 59 0.111214944 ubox
36 63 0.080144276 ubox
37 56 0.101529281 ubox
37 59 0.982908640 ubox
37 62 0.080576830 ubox
38 54 0.101181839 ubox
38 58 0.991235141 ubox
38 60 0.011338463 ubox
38 61 0.079895579 ubox
39 52 0.018179239 ubox
39 53 0.100394298 ubox
39 57 0.991192867 ubox
39 59 0.010922118 ubox
40 51 0.023658824 ubox
40 52 0.099221625 ubox
40 56 0.989241544 ubox
40 57 0.012833757 ubox
40 59 0.079731999 ubox
40 62 0.011999685 ubox
41 47 0.006472271 ubox
41 48 0.005940520 ubox
41 50 0.028153243 ubox
41 54 0.026004509 ubox
41 58 0.080132042 ubox
41 60 0.003911834 ubox
41 61 0.012473014 ubox
42 46 0.006381529 ubox
42 47 0.006114433 ubox
42 48 0.004826154 ubox
42 50 0.095970748 ubox
42 54 0.072204229 ubox
42 60 0.012411309 ubox
42 61 0.015944257 ubox
43 47 0.005544852 ubox
43 48 0.004755778 ubox
43 50 0.009068433 ubox
43 54 0.064849516 ubox
43 58 0.005334648 ubox
43 60 0.016121246 ubox
44 48 0.005677181 ubox
45 50 0.015256746 ubox
45 54 0.979514642 ubox
45 58 0.020030917 ubox
46 51 0.016642955 ubox
46 52 0.058915455 ubox
46 53 0.992054728 ubox
46 57 0.020069934 ubox
47 51 0.058777176 ubox
47 52 0.991913915 ubox
47 53 0.003537443 ubox
47 56 0.020069179 ubox
48 52 0.003485505 ubox
48 55 0.019243776 ubox
76 92 0.008085933 ubox
77 91 0.027133107 ubox
78 90 0.027160441 ubox
79 89 0.027166185 ubox
80 88 0.026980699 ubox
80 94 0.004433122 ubox
81 93 0.004739351 ubox
83 91 0.005418878 ubox
84 90 0.005497061 ubox
84 93 0.027813726 ubox
85 89 0.005485736 ubox
85 92 0.028694340 ubox
86 91 0.031457871 ubox
87 93 0.009392670 ubox
88 93 0.018040235 ubox
89 93 0.005804397 ubox
89 96 0.043886592 ubox
90 94 0.005187686 ubox
90 95 0.041098961 ubox
92 96 0.008141846 ubox
4 92 0.9500000 lbox
5 91 0.9500000 lbox
7 89 0.9500000 lbox
9 86 0.9500000 lbox
10 85 0.9500000 lbox
11 84 0.9500000 lbox
12 83 0.9500000 lbox
15 80 0.9500000 lbox
16 79 0.9500000 lbox
19 76 0.9500000 lbox
20 75 0.9500000 lbox
21 74 0.9500000 lbox
22 73 0.9500000 lbox
23 72 0.9500000 lbox
24 71 0.9500000 lbox
25 70 0.9500000 lbox
26 69 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
30 65 0.9500000 lbox
31 64 0.9500000 lbox
35 61 0.9500000 lbox
37 59 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
47 52 0.9500000 lbox
showpage
end
%%EOF
