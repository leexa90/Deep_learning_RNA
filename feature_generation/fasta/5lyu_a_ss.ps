%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGGAUCUGUCACCCCAUUGAUCGCCUUCGGGCUGAUCUGGCUGGCUAGGCGGGUCC\
) def
/coor [
[82.46071625 303.81369019]
[70.09603119 292.21408081]
[77.81944275 277.12152100]
[79.44123077 262.20944214]
[81.06301117 247.29737854]
[82.68479919 232.38531494]
[84.30657959 217.47325134]
[85.92836761 202.56117249]
[87.55015564 187.64910889]
[89.17193604 172.73704529]
[90.79372406 157.82496643]
[81.45109558 141.20256042]
[92.50000000 124.70157623]
[92.50000000 109.70157623]
[91.68791962 94.72357178]
[90.06613159 79.81150055]
[88.44434357 64.89942932]
[84.46379852 58.75264359]
[84.53702545 52.51457596]
[87.54433441 48.29964447]
[87.54433441 33.29964447]
[87.54433441 18.29964638]
[87.54433441 3.29964614]
[87.13813782 -11.69485283]
[86.32605743 -26.67285347]
[85.51397705 -41.65085602]
[76.10915375 -55.08519363]
[83.28549957 -69.83077240]
[99.66059875 -70.71860504]
[108.38915253 -56.83536530]
[100.49197388 -42.46294022]
[101.30406189 -27.48493767]
[102.11614227 -12.50693703]
[105.78114319 -5.71335936]
[102.54433441 3.29964614]
[102.54433441 18.29964638]
[102.54433441 33.29964447]
[102.54433441 48.29964447]
[103.35641479 63.27764893]
[104.97820282 78.18972015]
[106.59998322 93.10178375]
[110.16709900 97.57548523]
[110.70986938 103.78002930]
[107.50000000 109.70157623]
[107.50000000 124.70157623]
[115.99253845 132.32983398]
[118.58506012 143.21589661]
[114.60549164 153.43383789]
[105.70579529 159.44674683]
[104.08400726 174.35882568]
[102.46222687 189.27088928]
[100.84043884 204.18296814]
[99.21865082 219.09503174]
[97.59687042 234.00709534]
[95.97508240 248.91917419]
[94.35329437 263.83123779]
[92.73151398 278.74331665]
] def
/pairs [
[3 57]
[4 56]
[5 55]
[6 54]
[7 53]
[8 52]
[9 51]
[10 50]
[11 49]
[13 45]
[14 44]
[15 41]
[16 40]
[17 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 33]
[25 32]
[26 31]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
