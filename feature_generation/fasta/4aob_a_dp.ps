%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4aob_a)
} def

/sequence { (\
GGCUUAUCAAGAGAGGGCAAGAGACUGGCUUGAUGACCCCCGGCAACCAAAAAUGGUGCCAAUUCCUGCAGAGGAAACGUUGAAAGAUGAGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.005847236 ubox
1 39 0.008135534 ubox
1 41 0.003923997 ubox
1 93 0.999172763 ubox
2 37 0.005872928 ubox
2 38 0.008159171 ubox
2 40 0.003918305 ubox
2 92 0.999926713 ubox
3 91 0.999926862 ubox
4 36 0.028314511 ubox
4 90 0.999200829 ubox
5 35 0.045179816 ubox
5 89 0.998153382 ubox
6 34 0.049364340 ubox
6 88 0.997711215 ubox
7 14 0.009883020 ubox
7 33 0.050592894 ubox
7 83 0.053521762 ubox
7 84 0.003576172 ubox
7 86 0.003890708 ubox
7 87 0.996596056 ubox
8 13 0.012984669 ubox
8 32 0.051796579 ubox
8 35 0.003621858 ubox
8 82 0.060576935 ubox
8 86 0.995031860 ubox
9 31 0.053687223 ubox
9 34 0.004631596 ubox
9 80 0.011449290 ubox
9 81 0.068697631 ubox
10 30 0.054016212 ubox
10 34 0.012305092 ubox
10 67 0.004506938 ubox
10 80 0.060799809 ubox
10 81 0.028523052 ubox
11 29 0.054016523 ubox
11 31 0.012579592 ubox
11 34 0.007388440 ubox
11 37 0.009263549 ubox
11 38 0.005731608 ubox
11 39 0.007511459 ubox
11 40 0.044453540 ubox
11 41 0.351406328 ubox
11 44 0.003967938 ubox
11 66 0.004633069 ubox
11 78 0.032677013 ubox
11 80 0.029454677 ubox
11 81 0.104163330 ubox
12 30 0.013606342 ubox
12 34 0.033423271 ubox
12 80 0.097354107 ubox
12 81 0.077626225 ubox
13 29 0.013734941 ubox
13 31 0.009483476 ubox
13 34 0.010852355 ubox
13 37 0.007860743 ubox
13 38 0.006884339 ubox
13 39 0.043441586 ubox
13 40 0.489917349 ubox
13 41 0.602995713 ubox
13 65 0.004001954 ubox
13 78 0.049249519 ubox
13 80 0.053719219 ubox
13 81 0.139416295 ubox
14 26 0.047461332 ubox
14 30 0.009381082 ubox
14 31 0.062573732 ubox
14 34 0.003455476 ubox
14 64 0.003837606 ubox
14 80 0.131061583 ubox
14 81 0.030017198 ubox
15 25 0.047519159 ubox
15 26 0.027330255 ubox
15 29 0.008067206 ubox
15 30 0.067891718 ubox
15 31 0.042285455 ubox
15 37 0.010306144 ubox
15 38 0.073268428 ubox
15 39 0.953334066 ubox
15 40 0.211173429 ubox
15 41 0.158915277 ubox
15 78 0.019420555 ubox
15 80 0.009648173 ubox
16 25 0.028498106 ubox
16 26 0.013712454 ubox
16 29 0.068908793 ubox
16 30 0.047206901 ubox
16 34 0.004703406 ubox
16 37 0.072947660 ubox
16 38 0.955177661 ubox
16 39 0.208906641 ubox
16 40 0.158739165 ubox
16 41 0.011075490 ubox
16 60 0.003338666 ubox
16 78 0.043582843 ubox
16 81 0.003684341 ubox
17 25 0.014066509 ubox
17 29 0.049768634 ubox
17 34 0.014302660 ubox
17 37 0.955629155 ubox
17 38 0.205848156 ubox
17 39 0.158184986 ubox
17 40 0.011084648 ubox
17 59 0.003366188 ubox
17 78 0.009439994 ubox
17 80 0.003841607 ubox
18 23 0.021956313 ubox
18 27 0.070896285 ubox
18 28 0.049322572 ubox
18 32 0.359121171 ubox
18 35 0.907472838 ubox
18 58 0.003367226 ubox
18 79 0.003855068 ubox
19 26 0.066003479 ubox
19 31 0.361045851 ubox
19 34 0.880091296 ubox
20 26 0.042851630 ubox
20 30 0.366310127 ubox
20 31 0.027959583 ubox
20 34 0.086879477 ubox
21 25 0.046070684 ubox
21 26 0.005633353 ubox
21 29 0.365747204 ubox
21 30 0.028388696 ubox
21 31 0.880677841 ubox
21 34 0.018318415 ubox
21 37 0.010531141 ubox
21 38 0.004749522 ubox
22 26 0.009805022 ubox
22 30 0.886256766 ubox
22 31 0.212976622 ubox
22 34 0.016752596 ubox
23 29 0.885651202 ubox
23 30 0.182639646 ubox
23 31 0.090481794 ubox
23 34 0.008102357 ubox
23 37 0.004549215 ubox
23 40 0.003698498 ubox
23 41 0.003232262 ubox
24 30 0.086101492 ubox
24 31 0.017086915 ubox
24 34 0.008827912 ubox
25 32 0.031663647 ubox
25 35 0.005672364 ubox
26 33 0.009588093 ubox
27 37 0.004416017 ubox
27 38 0.050223483 ubox
27 39 0.006358713 ubox
27 40 0.005540098 ubox
27 41 0.008095915 ubox
28 37 0.050377247 ubox
28 38 0.006379859 ubox
28 39 0.005559473 ubox
28 40 0.008061027 ubox
29 35 0.040473680 ubox
30 35 0.008740125 ubox
30 36 0.008848799 ubox
30 83 0.005528665 ubox
31 35 0.008094304 ubox
31 36 0.005999895 ubox
31 82 0.007741162 ubox
32 37 0.007953377 ubox
32 38 0.010069684 ubox
32 39 0.011917743 ubox
32 40 0.007227325 ubox
32 41 0.019151865 ubox
32 81 0.015212290 ubox
33 80 0.015858583 ubox
34 79 0.015895405 ubox
34 82 0.004459072 ubox
35 39 0.004711390 ubox
35 40 0.013255325 ubox
35 41 0.021513044 ubox
35 78 0.015744667 ubox
35 81 0.010585234 ubox
36 80 0.011043334 ubox
37 79 0.011064077 ubox
40 79 0.007011223 ubox
40 82 0.008109570 ubox
41 79 0.012638193 ubox
41 82 0.017722866 ubox
42 59 0.004431868 ubox
42 60 0.996323563 ubox
42 78 0.004409647 ubox
42 81 0.003936919 ubox
43 59 0.999863347 ubox
43 60 0.004657772 ubox
43 80 0.003795878 ubox
44 58 0.999164978 ubox
44 79 0.003795253 ubox
45 57 0.704811130 ubox
46 57 0.705571158 ubox
47 55 0.013874532 ubox
47 56 0.999664966 ubox
48 55 0.999572215 ubox
48 56 0.003803460 ubox
49 54 0.869384594 ubox
50 54 0.024606399 ubox
60 79 0.010571499 ubox
60 82 0.070698915 ubox
61 80 0.038552248 ubox
61 81 0.126143567 ubox
62 80 0.133336206 ubox
62 81 0.025870487 ubox
63 73 0.004393524 ubox
63 75 0.019526455 ubox
63 76 0.852184698 ubox
63 77 0.047598317 ubox
63 79 0.110951321 ubox
63 82 0.003333297 ubox
63 83 0.005046842 ubox
63 84 0.009991445 ubox
63 85 0.004487031 ubox
64 72 0.006141078 ubox
64 74 0.005745267 ubox
64 75 0.985385679 ubox
64 76 0.040811486 ubox
64 77 0.004507184 ubox
64 83 0.010557485 ubox
65 71 0.006285850 ubox
65 73 0.005580783 ubox
65 74 0.998883488 ubox
65 82 0.010326470 ubox
66 71 0.003942204 ubox
66 73 0.998900286 ubox
66 74 0.006766663 ubox
66 82 0.004356979 ubox
66 86 0.003449501 ubox
67 71 0.010550164 ubox
67 72 0.988842017 ubox
67 73 0.006914616 ubox
67 83 0.006685585 ubox
67 84 0.007931018 ubox
67 85 0.005706290 ubox
68 80 0.010507749 ubox
69 79 0.010616477 ubox
69 82 0.041485138 ubox
70 81 0.041585881 ubox
71 78 0.005262544 ubox
71 80 0.040368480 ubox
72 80 0.003377985 ubox
73 78 0.041571170 ubox
74 78 0.003334463 ubox
75 80 0.005235481 ubox
75 81 0.012545857 ubox
76 80 0.013867564 ubox
76 81 0.026458343 ubox
77 81 0.027018613 ubox
78 82 0.060865464 ubox
78 86 0.014660355 ubox
78 89 0.045345915 ubox
79 88 0.046758278 ubox
79 92 0.006456152 ubox
80 84 0.021229909 ubox
80 85 0.031837031 ubox
80 87 0.046890954 ubox
80 91 0.006475432 ubox
81 85 0.025091265 ubox
81 86 0.045859503 ubox
81 90 0.006563449 ubox
83 88 0.003636123 ubox
1 93 0.9500000 lbox
2 92 0.9500000 lbox
3 91 0.9500000 lbox
4 90 0.9500000 lbox
5 89 0.9500000 lbox
6 88 0.9500000 lbox
7 87 0.9500000 lbox
8 86 0.9500000 lbox
13 41 0.9500000 lbox
15 39 0.9500000 lbox
16 38 0.9500000 lbox
17 37 0.9500000 lbox
18 35 0.9500000 lbox
19 34 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
42 60 0.9500000 lbox
43 59 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
47 56 0.9500000 lbox
48 55 0.9500000 lbox
49 54 0.9500000 lbox
63 76 0.9500000 lbox
64 75 0.9500000 lbox
65 74 0.9500000 lbox
66 73 0.9500000 lbox
67 72 0.9500000 lbox
showpage
end
%%EOF
