%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUUCAUAUAAUCCUAAUGAUAUGGUUUGGGAGUUUCUACCAAGAGCCUUAAACUCUUGAUUAUGAAGUG\
) def
/coor [
[98.95635986 245.98446655]
[98.29286194 230.99914551]
[97.62935638 216.01383972]
[96.96585846 201.02851868]
[96.30236053 186.04319763]
[95.63886261 171.05787659]
[94.97535706 156.07255554]
[94.31185913 141.08723450]
[78.51610565 135.48181152]
[66.22825623 124.08288574]
[59.45466995 108.75170898]
[59.30134201 91.99153900]
[45.34981155 86.48201752]
[31.39828300 80.97249603]
[17.44675446 75.46296692]
[3.49522662 69.95344543]
[-10.45630169 64.44392395]
[-22.92061043 73.53482819]
[-38.32249832 74.42105865]
[-51.74727631 66.81981659]
[-58.91115189 53.15664291]
[-57.52815628 37.79139328]
[-48.03959656 25.62706947]
[-33.47323990 20.54526138]
[-18.47715378 24.16755676]
[-7.83654070 35.33809280]
[-4.94677782 50.49239349]
[9.00475025 56.00191879]
[22.95627975 61.51144028]
[36.90780640 67.02096558]
[50.85933685 72.53048706]
[64.81086731 78.04001617]
[70.88882446 70.45248413]
[78.56592560 64.48807526]
[87.42045593 60.47442245]
[96.96601105 58.63200378]
[106.67823029 59.06202698]
[116.02359772 61.74087524]
[124.48874664 66.52138519]
[131.60867310 73.14096069]
[136.99226379 81.23596191]
[151.37612915 76.98104095]
[165.75999451 72.72611237]
[180.14385986 68.47118378]
[194.52772522 64.21625519]
[208.91159058 59.96133041]
[214.98603821 45.55178070]
[228.92510986 38.46404266]
[244.14723206 42.04473114]
[253.46495056 54.60315704]
[252.47874451 70.20960999]
[241.65426636 81.49520874]
[226.10250854 83.13122559]
[213.16651917 74.34519958]
[198.78265381 78.60012817]
[184.39878845 82.85504913]
[170.01492310 87.10997772]
[155.63105774 91.36490631]
[141.24719238 95.61983490]
[138.55525208 115.29734039]
[127.02402496 131.46774292]
[109.29718018 140.42373657]
[109.96067810 155.40905762]
[110.62417603 170.39437866]
[111.28767395 185.37969971]
[111.95117950 200.36502075]
[112.61467743 215.35032654]
[113.27817535 230.33564758]
[113.94168091 245.32096863]
[116.98220062 264.46267700]
] def
/pairs [
[1 69]
[2 68]
[3 67]
[4 66]
[5 65]
[6 64]
[7 63]
[8 62]
[12 32]
[13 31]
[14 30]
[15 29]
[16 28]
[17 27]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
