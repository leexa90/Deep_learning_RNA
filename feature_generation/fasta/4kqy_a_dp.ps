%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4kqy_a)
} def

/sequence { (\
UUCUUAUCAAGAGAAGCAGAGGGACUGGCCCGACGAAGCUUCAGCAACCGGUGUAAUGGCGAAAGCCAUGACCAAGGUGCUAAAUCCAGCAAGCUCGAACAGCUUGGAAGAUAAGAAC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 116 0.022614636 ubox
1 117 0.795970441 ubox
2 12 0.010433484 ubox
2 111 0.004372834 ubox
2 116 0.981831337 ubox
2 117 0.020677141 ubox
3 11 0.010974476 ubox
3 110 0.004676799 ubox
3 115 0.999721131 ubox
4 10 0.010842962 ubox
4 109 0.004608643 ubox
4 114 0.999276645 ubox
5 9 0.009032263 ubox
5 108 0.004083332 ubox
5 113 0.999081697 ubox
6 112 0.999025108 ubox
7 108 0.009079440 ubox
7 111 0.998978272 ubox
8 107 0.010266008 ubox
8 110 0.997813278 ubox
9 41 0.007488843 ubox
10 40 0.008500183 ubox
11 17 0.003164902 ubox
11 39 0.008642593 ubox
11 41 0.024837198 ubox
11 42 0.032449104 ubox
11 45 0.009405895 ubox
11 86 0.034733212 ubox
11 87 0.018463398 ubox
12 40 0.027593275 ubox
12 41 0.029203835 ubox
12 85 0.032670224 ubox
13 39 0.028931519 ubox
13 40 0.014549986 ubox
13 41 0.004926074 ubox
13 42 0.997224353 ubox
14 40 0.004391375 ubox
14 41 0.998152516 ubox
14 105 0.012811067 ubox
15 40 0.998515637 ubox
15 104 0.013099117 ubox
16 34 0.007731821 ubox
16 39 0.999191882 ubox
16 103 0.013204944 ubox
17 27 0.003411995 ubox
17 35 0.029529097 ubox
17 38 0.997142614 ubox
17 102 0.013190125 ubox
18 26 0.004714697 ubox
19 25 0.004801495 ubox
19 31 0.020964346 ubox
19 34 0.627385190 ubox
19 42 0.008261413 ubox
19 100 0.004240239 ubox
20 41 0.008264708 ubox
21 30 0.060624619 ubox
21 31 0.972451706 ubox
21 34 0.060473063 ubox
21 40 0.008197290 ubox
22 29 0.061246957 ubox
22 30 0.972972681 ubox
22 31 0.218964472 ubox
22 34 0.017230032 ubox
22 39 0.008182755 ubox
23 29 0.971053246 ubox
23 30 0.218566434 ubox
23 31 0.011197033 ubox
23 34 0.005531668 ubox
25 32 0.009953301 ubox
26 35 0.007846128 ubox
27 34 0.008884962 ubox
32 42 0.004248077 ubox
33 41 0.004094388 ubox
34 97 0.012590710 ubox
34 107 0.003548078 ubox
35 42 0.007457412 ubox
35 96 0.012852869 ubox
36 41 0.006982687 ubox
36 95 0.009085281 ubox
36 105 0.003655517 ubox
37 95 0.009294020 ubox
37 104 0.003724366 ubox
38 94 0.013025743 ubox
38 103 0.003745039 ubox
39 93 0.013027088 ubox
39 102 0.003742455 ubox
40 83 0.004483941 ubox
40 84 0.006913242 ubox
40 92 0.012906519 ubox
40 101 0.003165992 ubox
41 82 0.006286180 ubox
41 83 0.009980076 ubox
41 91 0.012209447 ubox
41 98 0.003608428 ubox
42 89 0.009704233 ubox
42 97 0.003710966 ubox
43 81 0.950381191 ubox
43 85 0.004125735 ubox
43 95 0.003889855 ubox
44 54 0.003612661 ubox
44 80 0.998296270 ubox
44 81 0.006273539 ubox
44 94 0.003988209 ubox
45 53 0.003698456 ubox
45 79 0.997844817 ubox
45 93 0.003984506 ubox
46 52 0.003459439 ubox
46 78 0.710358940 ubox
47 78 0.697986198 ubox
48 76 0.089745873 ubox
48 77 0.987895996 ubox
49 76 0.986394989 ubox
49 77 0.009205400 ubox
50 72 0.009093705 ubox
50 73 0.525890977 ubox
51 72 0.528239838 ubox
51 73 0.406329752 ubox
52 70 0.019018442 ubox
52 71 0.507982636 ubox
52 74 0.216955316 ubox
52 75 0.009879768 ubox
53 69 0.017885683 ubox
53 72 0.760039802 ubox
53 73 0.208152103 ubox
54 68 0.012184458 ubox
54 70 0.175777255 ubox
54 71 0.719692856 ubox
55 69 0.134435443 ubox
56 69 0.908066803 ubox
57 68 0.996929701 ubox
58 67 0.999979257 ubox
59 66 0.999992341 ubox
60 65 0.999600211 ubox
76 86 0.005902700 ubox
76 87 0.015753349 ubox
77 85 0.005989242 ubox
77 86 0.015760199 ubox
78 84 0.006866247 ubox
78 91 0.006526897 ubox
79 87 0.003217332 ubox
79 90 0.025506646 ubox
80 89 0.029630099 ubox
81 88 0.030400727 ubox
81 89 0.006131077 ubox
81 109 0.008117894 ubox
84 112 0.025330973 ubox
85 89 0.013228851 ubox
85 107 0.010135372 ubox
85 108 0.655109300 ubox
85 109 0.042172381 ubox
85 111 0.030061239 ubox
86 106 0.011451870 ubox
86 107 0.700806844 ubox
86 110 0.035115700 ubox
87 106 0.682234170 ubox
87 107 0.081099073 ubox
87 110 0.008959911 ubox
88 95 0.003262231 ubox
88 104 0.189504056 ubox
88 105 0.585444510 ubox
89 94 0.003479115 ubox
89 103 0.268510628 ubox
89 104 0.225547820 ubox
89 105 0.019336982 ubox
90 97 0.004267249 ubox
90 102 0.269653030 ubox
90 106 0.727155259 ubox
90 107 0.032201978 ubox
91 104 0.033691417 ubox
91 105 0.782872918 ubox
92 104 0.932141535 ubox
92 105 0.005030331 ubox
93 100 0.078859069 ubox
93 103 0.962180814 ubox
94 102 0.962095292 ubox
95 99 0.012288877 ubox
95 101 0.922481693 ubox
95 102 0.005199483 ubox
95 108 0.004844659 ubox
96 102 0.007528894 ubox
96 106 0.003889896 ubox
96 107 0.005129654 ubox
97 105 0.003878596 ubox
98 104 0.003766877 ubox
98 105 0.004799468 ubox
99 104 0.003951510 ubox
1 117 0.9500000 lbox
2 116 0.9500000 lbox
3 115 0.9500000 lbox
4 114 0.9500000 lbox
5 113 0.9500000 lbox
6 112 0.9500000 lbox
7 111 0.9500000 lbox
8 110 0.9500000 lbox
13 42 0.9500000 lbox
14 41 0.9500000 lbox
15 40 0.9500000 lbox
16 39 0.9500000 lbox
17 38 0.9500000 lbox
21 31 0.9500000 lbox
22 30 0.9500000 lbox
23 29 0.9500000 lbox
43 81 0.9500000 lbox
44 80 0.9500000 lbox
45 79 0.9500000 lbox
46 78 0.9500000 lbox
48 77 0.9500000 lbox
49 76 0.9500000 lbox
53 72 0.9500000 lbox
54 71 0.9500000 lbox
56 69 0.9500000 lbox
57 68 0.9500000 lbox
58 67 0.9500000 lbox
59 66 0.9500000 lbox
60 65 0.9500000 lbox
90 106 0.9500000 lbox
91 105 0.9500000 lbox
92 104 0.9500000 lbox
93 103 0.9500000 lbox
94 102 0.9500000 lbox
95 101 0.9500000 lbox
showpage
end
%%EOF
