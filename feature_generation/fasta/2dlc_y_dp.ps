%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:27 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (2dlc_y)
} def

/sequence { (\
CUCUCGGUAGCCAAGUUGGGAAGGCGCAAGACUGUAAAUCUUGAGGUCGGGCGUUCGACUCGCCCCCGGGAGACCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 72 0.993060741 ubox
2 71 0.999105053 ubox
2 73 0.003875724 ubox
3 70 0.999873004 ubox
3 72 0.004083291 ubox
4 69 0.999244912 ubox
4 71 0.003820485 ubox
5 68 0.999773328 ubox
5 70 0.003258142 ubox
6 65 0.003624037 ubox
6 66 0.013903124 ubox
6 67 0.999771539 ubox
6 75 0.013119457 ubox
7 27 0.005578574 ubox
7 64 0.004017870 ubox
7 65 0.019522623 ubox
7 66 0.999024631 ubox
7 74 0.013133131 ubox
8 18 0.024545008 ubox
8 20 0.004026733 ubox
8 21 0.012523508 ubox
8 22 0.038062793 ubox
8 23 0.005114321 ubox
8 26 0.006136117 ubox
8 28 0.004051258 ubox
8 73 0.013109619 ubox
9 17 0.027005645 ubox
9 47 0.003315732 ubox
10 16 0.027786685 ubox
10 25 0.065410042 ubox
10 27 0.004868792 ubox
10 47 0.007436970 ubox
10 61 0.012735794 ubox
10 63 0.975625222 ubox
10 64 0.056239036 ubox
10 65 0.014034490 ubox
11 15 0.027698209 ubox
11 18 0.004202526 ubox
11 19 0.145263550 ubox
11 20 0.088858730 ubox
11 24 0.065547407 ubox
11 26 0.004844113 ubox
11 45 0.004683373 ubox
11 46 0.007920893 ubox
11 62 0.957835362 ubox
11 70 0.013072125 ubox
12 18 0.145759416 ubox
12 19 0.088881015 ubox
12 20 0.004483105 ubox
12 23 0.065492568 ubox
12 43 0.008140441 ubox
12 45 0.007758546 ubox
12 62 0.198857391 ubox
12 69 0.013005359 ubox
13 17 0.118232817 ubox
13 42 0.008608061 ubox
13 60 0.180202203 ubox
14 41 0.008765787 ubox
14 60 0.935104074 ubox
15 25 0.006471745 ubox
15 40 0.008742527 ubox
15 59 0.980123543 ubox
15 60 0.005866434 ubox
15 61 0.010576460 ubox
15 63 0.006963841 ubox
15 64 0.004828001 ubox
16 21 0.004249754 ubox
16 22 0.004208238 ubox
16 24 0.006437017 ubox
16 29 0.010874784 ubox
16 44 0.005508110 ubox
16 58 0.979672873 ubox
16 62 0.005449664 ubox
17 21 0.003672762 ubox
17 22 0.006059566 ubox
17 23 0.006172179 ubox
17 28 0.012573223 ubox
17 37 0.003220943 ubox
17 38 0.003873754 ubox
17 43 0.005586188 ubox
17 57 0.977081405 ubox
17 58 0.025347817 ubox
17 62 0.010821630 ubox
17 68 0.012064833 ubox
18 27 0.012905345 ubox
18 42 0.005675619 ubox
18 56 0.967689888 ubox
18 59 0.005381502 ubox
18 60 0.009701414 ubox
18 61 0.052706855 ubox
18 65 0.008636312 ubox
18 67 0.012583729 ubox
19 25 0.003862754 ubox
19 41 0.005859527 ubox
19 52 0.006959492 ubox
19 54 0.005728414 ubox
19 55 0.803576174 ubox
19 56 0.079913826 ubox
19 59 0.010722610 ubox
19 60 0.052796753 ubox
19 64 0.008647987 ubox
19 66 0.012597310 ubox
20 25 0.012448975 ubox
20 27 0.003171484 ubox
20 40 0.005898854 ubox
20 48 0.014356289 ubox
20 52 0.007963843 ubox
20 54 0.234612646 ubox
20 55 0.088309239 ubox
20 56 0.124588584 ubox
20 59 0.052810105 ubox
20 61 0.003254022 ubox
20 63 0.008628499 ubox
20 65 0.012445289 ubox
21 39 0.005684005 ubox
21 47 0.013554301 ubox
21 54 0.053047090 ubox
21 55 0.130606107 ubox
22 33 0.008264299 ubox
22 54 0.110246414 ubox
22 55 0.050855424 ubox
22 60 0.004349273 ubox
23 32 0.008333971 ubox
23 47 0.016692363 ubox
23 48 0.177968594 ubox
23 52 0.007146081 ubox
23 54 0.061942642 ubox
23 55 0.512458500 ubox
23 56 0.051311210 ubox
23 59 0.004454115 ubox
23 60 0.003888760 ubox
23 64 0.017945950 ubox
24 35 0.004565741 ubox
24 47 0.178886400 ubox
24 48 0.006742427 ubox
24 52 0.114244208 ubox
24 54 0.939075005 ubox
24 55 0.037873350 ubox
24 59 0.003351438 ubox
24 63 0.018034511 ubox
25 30 0.004788645 ubox
25 34 0.004613211 ubox
25 45 0.029631173 ubox
25 46 0.178314656 ubox
25 49 0.005585096 ubox
25 50 0.004820515 ubox
25 51 0.114334248 ubox
25 53 0.973815901 ubox
25 62 0.018042035 ubox
26 33 0.003487664 ubox
26 35 0.006752763 ubox
26 48 0.006445553 ubox
26 52 0.974012203 ubox
26 61 0.017076197 ubox
27 34 0.006909842 ubox
27 43 0.188007512 ubox
27 45 0.003599293 ubox
27 49 0.091489694 ubox
27 50 0.041618416 ubox
27 51 0.973853451 ubox
28 33 0.006225610 ubox
28 42 0.188182899 ubox
29 41 0.188248185 ubox
30 40 0.188321885 ubox
30 48 0.981737448 ubox
31 39 0.180873605 ubox
31 47 0.981759183 ubox
32 45 0.052038730 ubox
32 46 0.980457169 ubox
33 37 0.034755092 ubox
33 38 0.077800949 ubox
33 43 0.011246525 ubox
33 44 0.071799200 ubox
33 45 0.965156227 ubox
33 46 0.008462253 ubox
34 39 0.011369770 ubox
34 40 0.073183558 ubox
34 41 0.029983260 ubox
34 42 0.048748223 ubox
35 43 0.636328103 ubox
35 44 0.084838697 ubox
35 45 0.006398702 ubox
36 41 0.112496465 ubox
36 42 0.745932277 ubox
37 41 0.572655555 ubox
37 42 0.209912956 ubox
38 42 0.057305294 ubox
38 47 0.003568503 ubox
39 43 0.004583555 ubox
39 44 0.012171035 ubox
39 46 0.003978501 ubox
40 45 0.007094013 ubox
45 60 0.017871394 ubox
46 59 0.019173040 ubox
47 58 0.019252246 ubox
48 57 0.019259274 ubox
48 62 0.004025326 ubox
49 56 0.019187272 ubox
49 61 0.004104355 ubox
49 65 0.186844504 ubox
50 55 0.015096896 ubox
50 60 0.004080126 ubox
50 64 0.187233935 ubox
51 59 0.004076745 ubox
51 63 0.187240122 ubox
52 57 0.003315268 ubox
52 62 0.187239406 ubox
53 59 0.005407347 ubox
53 61 0.186310572 ubox
54 58 0.006214955 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 67 0.9500000 lbox
7 66 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
14 60 0.9500000 lbox
15 59 0.9500000 lbox
16 58 0.9500000 lbox
17 57 0.9500000 lbox
18 56 0.9500000 lbox
19 55 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
33 45 0.9500000 lbox
showpage
end
%%EOF
