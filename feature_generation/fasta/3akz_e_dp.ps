%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3akz_e)
} def

/sequence { (\
UGGGAGGUCGUCUAACGGUAGGACGGCGGACUCUGGAUCCGCUGGUGGAGGUUCGAGUCCUCCCCUCCCAGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.005525583 ubox
1 70 0.900316678 ubox
1 71 0.018432365 ubox
1 74 0.005890590 ubox
2 64 0.017636675 ubox
2 65 0.007790763 ubox
2 69 0.999542072 ubox
2 73 0.006828183 ubox
3 34 0.006401795 ubox
3 63 0.017730831 ubox
3 64 0.007724661 ubox
3 68 0.999749182 ubox
3 72 0.006383419 ubox
4 33 0.006559582 ubox
4 62 0.017764751 ubox
4 63 0.007631798 ubox
4 67 0.999750643 ubox
5 32 0.006561809 ubox
5 61 0.017207053 ubox
5 66 0.999357404 ubox
6 31 0.006548816 ubox
6 60 0.009771068 ubox
6 62 0.007686315 ubox
6 63 0.009995024 ubox
6 64 0.037523256 ubox
6 65 0.996418380 ubox
6 69 0.005788982 ubox
7 16 0.006218974 ubox
7 19 0.011502604 ubox
7 24 0.058282896 ubox
7 27 0.704839375 ubox
7 59 0.004374869 ubox
7 62 0.004321965 ubox
7 63 0.026416295 ubox
7 64 0.701004200 ubox
7 68 0.005644912 ubox
8 15 0.006435096 ubox
8 18 0.165031314 ubox
8 20 0.005825024 ubox
8 21 0.003749586 ubox
8 22 0.023930719 ubox
8 23 0.088240470 ubox
8 26 0.753646964 ubox
8 45 0.003505611 ubox
9 17 0.225822341 ubox
9 18 0.017476525 ubox
9 21 0.030306710 ubox
9 22 0.092820482 ubox
9 25 0.853474352 ubox
9 26 0.005157343 ubox
9 28 0.004823858 ubox
9 44 0.004571603 ubox
9 57 0.004021182 ubox
10 16 0.226829840 ubox
10 19 0.009105733 ubox
10 24 0.951128761 ubox
10 27 0.012543103 ubox
10 31 0.009048309 ubox
11 15 0.204359002 ubox
11 18 0.025259666 ubox
11 20 0.076845952 ubox
11 22 0.147054941 ubox
11 23 0.948300832 ubox
11 26 0.012478118 ubox
11 30 0.009068318 ubox
11 56 0.004182629 ubox
12 17 0.031097244 ubox
12 18 0.066431893 ubox
12 21 0.230554201 ubox
12 22 0.936799678 ubox
12 25 0.012130117 ubox
12 29 0.009075595 ubox
12 55 0.004272275 ubox
13 17 0.060065812 ubox
13 18 0.019434520 ubox
13 20 0.273170709 ubox
13 21 0.904784893 ubox
13 22 0.006134170 ubox
13 28 0.009042148 ubox
14 19 0.275268663 ubox
14 53 0.004233128 ubox
15 19 0.139846475 ubox
15 46 0.003265588 ubox
15 52 0.004480860 ubox
16 21 0.078375088 ubox
16 22 0.020105319 ubox
16 25 0.017508441 ubox
16 45 0.003354779 ubox
16 51 0.004482686 ubox
17 24 0.023183351 ubox
17 63 0.051498072 ubox
17 64 0.004906851 ubox
18 24 0.025952602 ubox
18 27 0.006189702 ubox
18 62 0.051804993 ubox
18 63 0.008892750 ubox
19 23 0.023770676 ubox
19 26 0.006097598 ubox
20 46 0.006624138 ubox
20 61 0.053030891 ubox
21 46 0.012312173 ubox
21 60 0.053943128 ubox
21 63 0.020166040 ubox
22 46 0.029919892 ubox
22 59 0.053945189 ubox
22 62 0.020211391 ubox
23 46 0.050211236 ubox
23 58 0.053928556 ubox
23 61 0.020034561 ubox
24 44 0.270356794 ubox
24 45 0.038714520 ubox
24 57 0.053862261 ubox
25 43 0.298014587 ubox
25 62 0.024826863 ubox
25 63 0.417004284 ubox
25 64 0.014642724 ubox
26 42 0.395935750 ubox
26 43 0.004427810 ubox
26 61 0.034022773 ubox
26 62 0.453912610 ubox
26 63 0.041017324 ubox
26 64 0.003216445 ubox
27 41 0.396830009 ubox
27 55 0.053376226 ubox
28 40 0.397220773 ubox
28 54 0.053654745 ubox
28 60 0.914953303 ubox
28 61 0.007209687 ubox
28 62 0.004845764 ubox
28 63 0.009134882 ubox
28 64 0.003615339 ubox
29 39 0.397186147 ubox
29 53 0.053593268 ubox
29 59 0.915969880 ubox
29 60 0.005601633 ubox
29 62 0.008582260 ubox
30 38 0.384997361 ubox
30 46 0.003235520 ubox
30 52 0.053467119 ubox
30 58 0.915898037 ubox
30 61 0.007189821 ubox
31 35 0.032009139 ubox
31 36 0.232301088 ubox
31 45 0.003310958 ubox
31 50 0.015505741 ubox
31 51 0.051305583 ubox
31 57 0.915992135 ubox
32 36 0.063692021 ubox
32 37 0.049879198 ubox
32 49 0.021433431 ubox
32 50 0.044035863 ubox
32 56 0.915600485 ubox
33 45 0.012935843 ubox
33 48 0.022593783 ubox
33 50 0.021311007 ubox
33 55 0.901213528 ubox
33 57 0.007826200 ubox
34 44 0.013023247 ubox
34 47 0.021869139 ubox
34 48 0.004538151 ubox
34 49 0.018394372 ubox
34 51 0.003780111 ubox
34 55 0.158852774 ubox
34 56 0.009830451 ubox
35 42 0.004917846 ubox
35 43 0.014429575 ubox
35 46 0.014504837 ubox
35 52 0.057375587 ubox
35 53 0.115041045 ubox
35 54 0.881202546 ubox
36 42 0.014536287 ubox
36 52 0.106477160 ubox
36 53 0.881868110 ubox
36 54 0.110013952 ubox
37 46 0.018307676 ubox
37 52 0.877577765 ubox
37 53 0.108915342 ubox
38 45 0.018736758 ubox
38 48 0.005585521 ubox
38 49 0.316131437 ubox
38 50 0.017608243 ubox
38 51 0.818385813 ubox
39 44 0.018498787 ubox
39 45 0.021201409 ubox
39 47 0.008816535 ubox
39 48 0.352313680 ubox
39 50 0.804472959 ubox
39 51 0.256069417 ubox
40 44 0.021486608 ubox
40 45 0.036064268 ubox
40 47 0.355746716 ubox
40 48 0.381536400 ubox
40 50 0.257242468 ubox
40 51 0.009263831 ubox
41 46 0.230811002 ubox
41 52 0.010802873 ubox
41 72 0.007326542 ubox
42 47 0.735681508 ubox
42 48 0.215116934 ubox
42 50 0.026267272 ubox
42 51 0.011678353 ubox
42 71 0.007368267 ubox
43 47 0.194182417 ubox
43 48 0.028433582 ubox
43 49 0.030931880 ubox
43 50 0.011586596 ubox
43 70 0.007367658 ubox
44 63 0.054471939 ubox
44 64 0.005397498 ubox
44 65 0.038709327 ubox
44 69 0.007254517 ubox
45 62 0.054714584 ubox
45 63 0.005580895 ubox
45 64 0.051982052 ubox
45 65 0.003319411 ubox
45 68 0.007088983 ubox
47 60 0.055290432 ubox
47 63 0.392169531 ubox
47 64 0.003299307 ubox
48 59 0.055357715 ubox
48 62 0.393476360 ubox
49 58 0.055135197 ubox
49 61 0.393446384 ubox
50 60 0.393490599 ubox
51 59 0.393084678 ubox
52 56 0.008189281 ubox
52 57 0.059907603 ubox
53 57 0.033970285 ubox
1 70 0.9500000 lbox
2 69 0.9500000 lbox
3 68 0.9500000 lbox
4 67 0.9500000 lbox
5 66 0.9500000 lbox
6 65 0.9500000 lbox
7 27 0.9500000 lbox
8 26 0.9500000 lbox
9 25 0.9500000 lbox
10 24 0.9500000 lbox
11 23 0.9500000 lbox
12 22 0.9500000 lbox
13 21 0.9500000 lbox
28 60 0.9500000 lbox
29 59 0.9500000 lbox
30 58 0.9500000 lbox
31 57 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
35 54 0.9500000 lbox
36 53 0.9500000 lbox
37 52 0.9500000 lbox
38 51 0.9500000 lbox
39 50 0.9500000 lbox
42 47 0.9500000 lbox
showpage
end
%%EOF
