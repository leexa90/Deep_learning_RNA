%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:34 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUAUCGUGAGGGAAGUAUGGGGUAGUACGAGAGGAACUCCCAUGCCGUGCCUCUAGUUUCUGGGGUUUGUCGAACGGCAAGUGCCCCGAAGCCAUCGCACGGUGGUUCUCGGCUGAACGCCUCUAAGCCAGAAGCCAAUCCCAAGACCAGAUGCCCAC\
) def
/coor [
[111.97406769 313.35494995]
[111.09101105 298.38098145]
[110.20794678 283.40698242]
[109.32488251 268.43301392]
[108.44182587 253.45901489]
[107.55876160 238.48503113]
[106.38187408 223.53128052]
[104.91162109 208.60350037]
[91.47669983 198.52604675]
[89.42174530 181.51823425]
[100.49709320 168.00939941]
[98.73403168 153.11337280]
[96.97097015 138.21734619]
[95.20790863 123.32132721]
[80.48676300 118.12898254]
[70.78379822 103.79425812]
[56.71092987 108.98600769]
[42.63805771 114.17776489]
[28.56518936 119.36952209]
[14.49231815 124.56127930]
[0.41944847 129.75303650]
[-13.65342140 134.94479370]
[-18.22467041 139.83686829]
[-23.75381851 141.40954590]
[-28.38201332 140.05221558]
[-42.64786148 144.68746948]
[-56.91370773 149.32272339]
[-67.64749146 160.94583130]
[-82.14280701 157.52015686]
[-90.67803955 171.10432434]
[-106.63568878 172.75753784]
[-117.77440643 161.21160889]
[-115.54952240 145.32357788]
[-101.66777802 137.28138733]
[-86.77806091 143.25431824]
[-77.06466675 131.96275330]
[-61.54896545 135.05688477]
[-47.28311539 130.42163086]
[-33.01726913 125.78636932]
[-18.84517670 120.87191772]
[-4.77230740 115.68016052]
[9.30056286 110.48841095]
[23.37343216 105.29665375]
[37.44630432 100.10489655]
[51.51917267 94.91313934]
[65.59204102 89.72138214]
[72.79252625 76.56262207]
[69.57788849 61.91113281]
[66.36325073 47.25964355]
[63.14861298 32.60815811]
[59.93397522 17.95666885]
[46.37471771 14.40729332]
[35.72567749 5.39640284]
[30.03552055 -7.26755667]
[30.36650085 -21.08090210]
[36.59661865 -33.33964539]
[47.45470428 -41.66881180]
[44.52835083 -56.38058853]
[41.60199356 -71.09236908]
[38.67564011 -85.80414581]
[35.74928665 -100.51593018]
[30.98291588 -108.37038422]
[32.91288376 -115.54513550]
[30.27593803 -130.31153870]
[27.63899422 -145.07794189]
[25.00204849 -159.84432983]
[22.36510468 -174.61073303]
[19.43875122 -189.32250977]
[16.22411346 -203.97399902]
[13.00947571 -218.62548828]
[9.79483795 -233.27697754]
[6.58020115 -247.92846680]
[-4.86620665 -259.67205811]
[-0.15933196 -275.38119507]
[15.85879612 -278.89569092]
[26.71010017 -266.60009766]
[21.23168945 -251.14309692]
[24.44632721 -236.49160767]
[27.66096306 -221.84011841]
[30.87560081 -207.18862915]
[34.09023666 -192.53715515]
[37.60152817 -189.23059082]
[39.04057693 -183.66516113]
[37.13150406 -177.24768066]
[39.76844788 -162.48127747]
[42.40539169 -147.71487427]
[45.04233551 -132.94848633]
[47.67927933 -118.18208313]
[50.46106339 -103.44228363]
[53.38742065 -88.73049927]
[56.31377411 -74.01872253]
[59.24012756 -59.30694580]
[62.16648483 -44.59516525]
[77.57011414 -39.79202271]
[88.52370453 -27.81731224]
[91.97821045 -11.86451054]
[86.90177917 3.74713349]
[74.58546448 14.74203110]
[77.80010223 29.39351845]
[81.01473999 44.04500580]
[84.22937775 58.69649506]
[87.44401550 73.34798431]
[110.97403717 75.73073578]
[122.87345123 93.39291382]
[137.86187744 93.98181152]
[152.85032654 94.57070923]
[167.83876038 95.15960693]
[182.82719421 95.74850464]
[197.82067871 96.19022369]
[212.81779480 96.48473358]
[221.51124573 93.51239014]
[228.10568237 96.93512726]
[243.09411621 97.52402496]
[258.08255005 98.11292267]
[273.07098389 98.70182037]
[280.65505981 85.40744019]
[293.55487061 77.17012024]
[308.80612183 75.88272858]
[322.90423584 81.84109497]
[332.60952759 93.67604828]
[335.69180298 108.66798401]
[331.44277954 123.37187195]
[320.83883667 134.40887451]
[306.31671143 139.24275208]
[291.21347046 136.76272583]
[278.99972534 127.53868866]
[272.48208618 113.69025421]
[257.49365234 113.10135651]
[242.50521851 112.51245880]
[227.51678467 111.92356110]
[212.52328491 111.48184204]
[197.52618408 111.18733215]
[190.74166870 114.21591949]
[182.23829651 110.73693848]
[167.24986267 110.14804077]
[152.26142883 109.55914307]
[137.27297974 108.97024536]
[122.28455353 108.38134766]
[117.48316956 116.16127777]
[110.10393524 121.55826569]
[111.86699677 136.45428467]
[113.63005829 151.35031128]
[115.39311981 166.24633789]
[126.88340759 173.33328247]
[132.10244751 185.57208252]
[129.34417725 198.38887024]
[119.83938599 207.13325500]
[121.30964661 222.06101990]
[124.88900757 227.71936035]
[125.01467133 233.46644592]
[122.53274536 237.60197449]
[123.41580963 252.57595825]
[124.29886627 267.54995728]
[125.18193054 282.52392578]
[126.06499481 297.49792480]
[126.94805908 312.47189331]
[136.41644287 325.86151123]
[129.31005859 340.64093018]
[112.93935394 341.60635376]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 151]
[7 148]
[8 147]
[11 143]
[12 142]
[13 141]
[14 140]
[16 46]
[17 45]
[18 44]
[19 43]
[20 42]
[21 41]
[22 40]
[25 39]
[26 38]
[27 37]
[29 35]
[47 102]
[48 101]
[49 100]
[50 99]
[51 98]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[63 88]
[64 87]
[65 86]
[66 85]
[67 84]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[104 138]
[105 137]
[106 136]
[107 135]
[108 134]
[109 132]
[110 131]
[112 130]
[113 129]
[114 128]
[115 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
