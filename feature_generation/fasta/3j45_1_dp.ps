%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:31 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3j45_1)
} def

/sequence { (\
AAGGACGUGCUAAUCUGCGAUAAGCGUCGGUAAGGUGAUAUGAACCGUUAUAACCGGCGAUUU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.011996709 ubox
1 11 0.004464046 ubox
1 21 0.008457699 ubox
1 31 0.003282822 ubox
1 61 0.003856878 ubox
1 62 0.009167466 ubox
1 63 0.014414354 ubox
2 8 0.024902186 ubox
2 11 0.110695514 ubox
2 14 0.003334604 ubox
2 16 0.035593503 ubox
2 21 0.021967338 ubox
2 61 0.010057041 ubox
2 62 0.017896365 ubox
2 63 0.013119190 ubox
3 8 0.016624761 ubox
3 10 0.114733707 ubox
3 11 0.041926871 ubox
3 15 0.036141783 ubox
3 16 0.080489258 ubox
3 18 0.041321212 ubox
3 21 0.049580389 ubox
3 25 0.050393037 ubox
3 28 0.003308300 ubox
3 55 0.005780652 ubox
3 61 0.014796920 ubox
3 62 0.015383282 ubox
3 63 0.020024643 ubox
4 8 0.007129919 ubox
4 10 0.043459928 ubox
4 11 0.005699481 ubox
4 14 0.024920312 ubox
4 15 0.087311935 ubox
4 18 0.025309658 ubox
4 21 0.064597106 ubox
4 25 0.033555598 ubox
4 28 0.067737475 ubox
4 54 0.005623356 ubox
4 61 0.011155811 ubox
4 62 0.026087492 ubox
4 63 0.014586452 ubox
5 11 0.004818447 ubox
5 14 0.085572511 ubox
5 16 0.038431578 ubox
5 21 0.077179411 ubox
5 27 0.068792595 ubox
5 61 0.024445310 ubox
5 62 0.014455544 ubox
5 63 0.005688181 ubox
6 17 0.028411528 ubox
6 19 0.367107484 ubox
6 24 0.047583082 ubox
6 26 0.068986151 ubox
6 29 0.024571076 ubox
6 42 0.004446159 ubox
6 59 0.021245233 ubox
7 11 0.004585962 ubox
7 14 0.044377344 ubox
7 15 0.022365256 ubox
7 16 0.026061501 ubox
7 18 0.371587365 ubox
7 21 0.158161882 ubox
7 25 0.069629033 ubox
7 27 0.004718526 ubox
7 28 0.024885073 ubox
7 41 0.004477601 ubox
7 58 0.014486551 ubox
7 61 0.017041954 ubox
7 62 0.004530671 ubox
7 63 0.003793724 ubox
8 12 0.004390554 ubox
8 13 0.048080120 ubox
8 17 0.369264612 ubox
8 19 0.622262706 ubox
8 20 0.162792805 ubox
8 22 0.012970359 ubox
8 23 0.007954701 ubox
8 24 0.065098168 ubox
8 26 0.031960014 ubox
8 40 0.004460823 ubox
8 57 0.012962534 ubox
8 59 0.005573733 ubox
8 60 0.017299806 ubox
9 14 0.011831881 ubox
9 15 0.043766520 ubox
9 16 0.226767406 ubox
9 18 0.838071541 ubox
9 21 0.007625363 ubox
9 25 0.299943612 ubox
9 39 0.004147724 ubox
9 58 0.006518974 ubox
10 17 0.838402367 ubox
10 19 0.018754230 ubox
10 24 0.310972174 ubox
10 57 0.006508999 ubox
10 59 0.003308888 ubox
11 17 0.009307459 ubox
11 20 0.004974947 ubox
11 22 0.025335191 ubox
11 23 0.305661588 ubox
11 56 0.004827449 ubox
12 16 0.027403343 ubox
12 21 0.027143780 ubox
12 62 0.044741262 ubox
13 21 0.303864076 ubox
13 31 0.003451083 ubox
13 36 0.004195674 ubox
13 61 0.051399099 ubox
14 19 0.005772937 ubox
14 20 0.313459022 ubox
14 30 0.003525809 ubox
14 35 0.004331120 ubox
14 60 0.052333963 ubox
15 19 0.311081971 ubox
15 24 0.052998093 ubox
15 29 0.003635649 ubox
15 34 0.004346768 ubox
15 59 0.052266899 ubox
16 22 0.006668398 ubox
16 23 0.053602315 ubox
16 26 0.009315657 ubox
16 33 0.003739722 ubox
17 21 0.006048382 ubox
17 25 0.108313931 ubox
17 27 0.004319806 ubox
17 58 0.003214797 ubox
18 24 0.111477530 ubox
18 26 0.004958850 ubox
18 29 0.005269594 ubox
18 57 0.003182445 ubox
19 25 0.009401273 ubox
19 28 0.006039695 ubox
19 61 0.003223992 ubox
19 62 0.065901860 ubox
19 63 0.056313334 ubox
20 27 0.006017128 ubox
20 61 0.076375612 ubox
20 62 0.069506901 ubox
20 63 0.056232756 ubox
21 26 0.005732683 ubox
21 60 0.076176182 ubox
22 61 0.025717175 ubox
22 62 0.279154214 ubox
22 63 0.259653239 ubox
23 61 0.253776547 ubox
23 62 0.319185472 ubox
23 63 0.034417130 ubox
24 58 0.009973472 ubox
24 61 0.335838481 ubox
24 62 0.035205127 ubox
24 63 0.011917167 ubox
25 57 0.009798681 ubox
25 59 0.932299655 ubox
26 58 0.996059881 ubox
26 61 0.031173190 ubox
27 57 0.995966645 ubox
27 60 0.034110490 ubox
28 47 0.003926825 ubox
28 56 0.996558287 ubox
28 59 0.034865426 ubox
29 46 0.006539326 ubox
29 54 0.005806778 ubox
29 55 0.997207826 ubox
29 58 0.036030849 ubox
29 62 0.006954861 ubox
30 45 0.006626239 ubox
30 51 0.072998678 ubox
30 54 0.994760466 ubox
30 58 0.048508806 ubox
30 61 0.008762837 ubox
31 44 0.006512901 ubox
31 47 0.005053000 ubox
31 50 0.325683502 ubox
31 52 0.115362666 ubox
31 53 0.913616137 ubox
31 56 0.017624547 ubox
31 57 0.048140162 ubox
31 60 0.008842000 ubox
32 48 0.211819245 ubox
32 49 0.546712797 ubox
32 51 0.132518253 ubox
33 48 0.516973841 ubox
33 49 0.087134978 ubox
33 51 0.186624679 ubox
34 41 0.005498888 ubox
34 45 0.005512690 ubox
34 46 0.927368638 ubox
34 48 0.018135961 ubox
34 49 0.045091170 ubox
34 51 0.017780307 ubox
34 55 0.066162915 ubox
35 45 0.928224390 ubox
35 46 0.054859457 ubox
35 48 0.047627039 ubox
35 49 0.016685664 ubox
35 51 0.334654053 ubox
35 54 0.066241259 ubox
36 42 0.006295611 ubox
36 43 0.069532545 ubox
36 44 0.922323926 ubox
36 47 0.067514102 ubox
36 50 0.339588036 ubox
36 52 0.013027327 ubox
36 53 0.063328666 ubox
37 41 0.014640904 ubox
37 45 0.038920332 ubox
37 46 0.073977684 ubox
37 48 0.004043620 ubox
37 49 0.339916441 ubox
37 51 0.010072567 ubox
38 48 0.338230888 ubox
38 49 0.006169732 ubox
38 51 0.049721522 ubox
39 43 0.015958542 ubox
39 44 0.017232714 ubox
39 47 0.331125584 ubox
39 50 0.056461946 ubox
39 52 0.081868117 ubox
40 48 0.035150849 ubox
40 49 0.055537557 ubox
40 51 0.083272428 ubox
41 47 0.042743423 ubox
41 50 0.083527648 ubox
42 46 0.051552159 ubox
42 49 0.082620624 ubox
42 63 0.003861626 ubox
43 48 0.074470892 ubox
43 49 0.003310023 ubox
43 62 0.004392239 ubox
44 48 0.003380352 ubox
44 61 0.004298960 ubox
45 57 0.007194364 ubox
46 56 0.007238064 ubox
46 59 0.009394942 ubox
47 51 0.005661148 ubox
47 54 0.003794213 ubox
47 55 0.007048522 ubox
47 58 0.011913752 ubox
48 52 0.005680241 ubox
48 53 0.004220738 ubox
48 57 0.011887986 ubox
49 56 0.010348607 ubox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
showpage
end
%%EOF
