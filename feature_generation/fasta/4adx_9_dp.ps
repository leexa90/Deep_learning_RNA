%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4adx_9)
} def

/sequence { (\
UAGGCGGCCACAGCGGUGGGGUUGCCUCCCGUACCCAUCCCGAACACGGAAGAUAAGCCCACCAGCGUUCCAGGGAGUACUGGAGUGCGCGAGCCUCUGGGAAAUCCGGUUCGCCGCCACC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 119 0.073413734 ubox
3 115 0.003589004 ubox
3 118 0.986957493 ubox
3 120 0.007692535 ubox
3 121 0.151247106 ubox
4 14 0.004415721 ubox
4 114 0.003484687 ubox
4 117 0.987997052 ubox
4 118 0.003204300 ubox
4 120 0.152520414 ubox
5 13 0.004440585 ubox
5 113 0.003474970 ubox
5 116 0.987987912 ubox
6 11 0.016980358 ubox
6 14 0.010052617 ubox
6 115 0.983729681 ubox
6 118 0.154115969 ubox
7 11 0.016855246 ubox
7 14 0.594382526 ubox
7 17 0.004587965 ubox
7 88 0.017726674 ubox
7 114 0.759962944 ubox
7 115 0.005012705 ubox
7 117 0.154120187 ubox
8 13 0.593076625 ubox
8 16 0.005333692 ubox
8 19 0.003903228 ubox
8 87 0.014125036 ubox
8 89 0.005341301 ubox
8 113 0.744108985 ubox
8 116 0.153491981 ubox
9 13 0.038356608 ubox
9 15 0.009925805 ubox
9 18 0.007269421 ubox
9 67 0.004155132 ubox
9 85 0.005868140 ubox
9 87 0.021375800 ubox
9 89 0.006553267 ubox
9 108 0.003241994 ubox
9 113 0.047098370 ubox
9 116 0.009729863 ubox
10 17 0.007342331 ubox
10 68 0.032013807 ubox
10 86 0.024012968 ubox
10 110 0.013630268 ubox
10 111 0.013745730 ubox
11 15 0.003442386 ubox
11 16 0.007350130 ubox
11 65 0.005307512 ubox
11 67 0.036076457 ubox
11 85 0.023973390 ubox
11 87 0.003481022 ubox
11 89 0.008711834 ubox
11 91 0.004509711 ubox
11 93 0.004298960 ubox
11 108 0.004121909 ubox
11 109 0.013968806 ubox
11 113 0.005119996 ubox
12 68 0.004742917 ubox
12 110 0.004671113 ubox
12 111 0.024318993 ubox
13 32 0.012322635 ubox
13 36 0.004211701 ubox
13 40 0.003745543 ubox
13 41 0.005696375 ubox
13 63 0.005832747 ubox
13 66 0.095960631 ubox
13 68 0.003178685 ubox
13 88 0.005258123 ubox
13 90 0.161548702 ubox
13 94 0.014845308 ubox
13 110 0.025212329 ubox
13 114 0.003818672 ubox
13 115 0.005880228 ubox
14 31 0.012614382 ubox
14 65 0.096475631 ubox
14 67 0.003312572 ubox
14 87 0.005237887 ubox
14 89 0.161598711 ubox
14 93 0.015008429 ubox
14 108 0.005078285 ubox
14 109 0.024962491 ubox
14 113 0.004187372 ubox
15 30 0.012627049 ubox
15 35 0.006417182 ubox
15 39 0.009020055 ubox
15 40 0.004134193 ubox
15 63 0.998635464 ubox
16 29 0.012618010 ubox
16 34 0.006432717 ubox
16 38 0.009088168 ubox
16 39 0.004126957 ubox
16 62 0.999771867 ubox
17 33 0.006408035 ubox
17 37 0.009612780 ubox
17 61 0.999579490 ubox
18 27 0.007929215 ubox
18 28 0.009614591 ubox
18 32 0.005975556 ubox
18 36 0.009558941 ubox
18 60 0.999607009 ubox
19 26 0.008284757 ubox
19 27 0.009465101 ubox
19 30 0.006221855 ubox
19 35 0.009469998 ubox
19 36 0.005110673 ubox
19 59 0.999429838 ubox
19 60 0.020458395 ubox
20 25 0.008278539 ubox
20 26 0.009472863 ubox
20 29 0.006255007 ubox
20 34 0.009369151 ubox
20 35 0.005506394 ubox
20 58 0.999045035 ubox
20 59 0.027983312 ubox
21 25 0.009324771 ubox
21 28 0.006278964 ubox
21 34 0.005819878 ubox
21 58 0.033851681 ubox
22 33 0.004621982 ubox
22 55 0.006652966 ubox
22 56 0.990225135 ubox
22 57 0.037912538 ubox
23 31 0.006260572 ubox
23 33 0.006626303 ubox
23 53 0.003338690 ubox
23 55 0.994570596 ubox
23 56 0.036654254 ubox
24 30 0.006323183 ubox
24 32 0.008390392 ubox
24 54 0.960510469 ubox
24 88 0.004236419 ubox
25 31 0.008496417 ubox
25 52 0.120515686 ubox
25 87 0.004240636 ubox
26 52 0.983420803 ubox
26 85 0.004466464 ubox
27 50 0.130254500 ubox
27 51 0.960789739 ubox
27 52 0.005658310 ubox
27 53 0.044632647 ubox
27 84 0.004694620 ubox
28 49 0.131897848 ubox
28 52 0.045675232 ubox
28 83 0.004847537 ubox
29 48 0.108343016 ubox
29 49 0.989263175 ubox
29 82 0.004843646 ubox
30 42 0.019349040 ubox
30 48 0.993714547 ubox
31 36 0.003874384 ubox
31 38 0.003222366 ubox
31 39 0.004025708 ubox
31 40 0.003474742 ubox
31 41 0.019009127 ubox
31 45 0.060426194 ubox
31 47 0.995471685 ubox
31 80 0.004883186 ubox
32 37 0.005487337 ubox
32 42 0.006281795 ubox
32 43 0.012943559 ubox
32 44 0.061910558 ubox
32 46 0.960938213 ubox
32 79 0.004892328 ubox
33 38 0.017421172 ubox
33 78 0.004888085 ubox
34 42 0.236545266 ubox
34 77 0.004864161 ubox
35 42 0.305814249 ubox
36 42 0.532682675 ubox
37 54 0.005572882 ubox
38 42 0.022608294 ubox
38 43 0.024433100 ubox
38 44 0.014999486 ubox
38 46 0.003709340 ubox
38 50 0.012729256 ubox
38 53 0.006782327 ubox
38 76 0.004805128 ubox
39 49 0.011986374 ubox
39 52 0.006774068 ubox
39 75 0.004848631 ubox
40 48 0.011056415 ubox
40 49 0.015267079 ubox
40 74 0.004849169 ubox
41 48 0.016049009 ubox
41 73 0.004825137 ubox
41 113 0.003672912 ubox
42 47 0.016529935 ubox
42 70 0.004781177 ubox
42 112 0.016738223 ubox
43 69 0.004860130 ubox
43 111 0.016760393 ubox
44 68 0.004867493 ubox
44 110 0.016760992 ubox
45 67 0.004866309 ubox
45 109 0.016745801 ubox
47 65 0.004682070 ubox
47 108 0.016717995 ubox
48 63 0.004504217 ubox
48 107 0.016781502 ubox
49 62 0.004513339 ubox
49 106 0.016760840 ubox
50 105 0.016114963 ubox
52 59 0.003686119 ubox
54 103 0.003341673 ubox
58 101 0.016562203 ubox
59 100 0.016571013 ubox
60 99 0.016569801 ubox
61 98 0.016180206 ubox
62 93 0.012164726 ubox
63 89 0.004237494 ubox
63 91 0.004492255 ubox
63 93 0.004154411 ubox
65 86 0.004964213 ubox
65 88 0.803659987 ubox
65 90 0.584219487 ubox
65 114 0.009810846 ubox
66 85 0.005164320 ubox
66 87 0.804631685 ubox
66 89 0.585055641 ubox
66 113 0.010107181 ubox
67 86 0.762692851 ubox
67 88 0.585107546 ubox
67 90 0.013757284 ubox
67 112 0.034998705 ubox
68 84 0.010080445 ubox
68 85 0.775744033 ubox
68 87 0.544225569 ubox
68 89 0.013068180 ubox
69 84 0.987161296 ubox
69 85 0.018365566 ubox
69 87 0.003746388 ubox
69 101 0.003309402 ubox
70 83 0.999006553 ubox
70 85 0.007742531 ubox
70 100 0.003741206 ubox
70 109 0.037863447 ubox
71 82 0.999058847 ubox
71 83 0.003403578 ubox
71 99 0.003759871 ubox
71 108 0.037766289 ubox
71 109 0.004051735 ubox
72 81 0.998590639 ubox
72 98 0.003761314 ubox
73 80 0.997633996 ubox
73 81 0.020698286 ubox
73 97 0.003755872 ubox
73 106 0.004487231 ubox
73 107 0.027372444 ubox
74 78 0.013679602 ubox
74 80 0.041582958 ubox
74 81 0.003689325 ubox
74 96 0.003565965 ubox
74 105 0.004403035 ubox
74 106 0.027112998 ubox
74 107 0.031737612 ubox
75 80 0.005204239 ubox
75 95 0.003546656 ubox
75 105 0.024438892 ubox
75 106 0.032087467 ubox
76 105 0.032169534 ubox
78 102 0.007001867 ubox
78 103 0.004869297 ubox
80 100 0.042145745 ubox
81 99 0.042033544 ubox
82 98 0.042105642 ubox
83 97 0.042370891 ubox
84 96 0.043448155 ubox
85 90 0.006796826 ubox
85 95 0.044787369 ubox
85 96 0.003231025 ubox
86 116 0.003369179 ubox
87 94 0.049205282 ubox
87 115 0.019662342 ubox
88 93 0.049241280 ubox
88 116 0.003350396 ubox
89 94 0.004909749 ubox
89 95 0.004146313 ubox
89 112 0.005740893 ubox
89 114 0.648289882 ubox
89 115 0.011500697 ubox
90 99 0.003905963 ubox
90 100 0.003664387 ubox
90 108 0.003272822 ubox
90 113 0.664397660 ubox
91 95 0.005315692 ubox
91 97 0.011788604 ubox
91 98 0.003181827 ubox
91 106 0.004818444 ubox
91 107 0.003230406 ubox
91 111 0.004811310 ubox
91 112 0.995120302 ubox
92 96 0.010340078 ubox
92 98 0.006097199 ubox
92 105 0.004803930 ubox
92 110 0.005247413 ubox
92 111 0.995213947 ubox
93 97 0.006199427 ubox
93 110 0.995208347 ubox
93 111 0.004078134 ubox
93 112 0.015534432 ubox
93 114 0.003820548 ubox
94 100 0.005294275 ubox
94 101 0.008349184 ubox
94 109 0.992087982 ubox
94 113 0.003893051 ubox
95 99 0.005490383 ubox
95 100 0.008384819 ubox
95 108 0.984338427 ubox
95 109 0.019620812 ubox
96 101 0.003956884 ubox
96 102 0.038623364 ubox
96 103 0.009226573 ubox
96 104 0.008244906 ubox
96 108 0.021579056 ubox
96 109 0.007232934 ubox
97 101 0.038525978 ubox
97 108 0.028830034 ubox
97 109 0.109449502 ubox
98 102 0.003708466 ubox
98 103 0.025695249 ubox
98 104 0.038332848 ubox
98 108 0.159034903 ubox
98 109 0.009825271 ubox
99 105 0.025564842 ubox
99 106 0.237406069 ubox
99 107 0.810387249 ubox
100 105 0.211130240 ubox
100 106 0.809799990 ubox
100 107 0.475368191 ubox
101 105 0.524584922 ubox
101 106 0.475116302 ubox
101 107 0.021749064 ubox
101 112 0.006145754 ubox
102 111 0.006130609 ubox
103 110 0.005429365 ubox
3 118 0.9500000 lbox
4 117 0.9500000 lbox
5 116 0.9500000 lbox
6 115 0.9500000 lbox
7 114 0.9500000 lbox
8 113 0.9500000 lbox
15 63 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
18 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
65 90 0.9500000 lbox
66 89 0.9500000 lbox
67 88 0.9500000 lbox
68 87 0.9500000 lbox
69 84 0.9500000 lbox
70 83 0.9500000 lbox
71 82 0.9500000 lbox
72 81 0.9500000 lbox
73 80 0.9500000 lbox
91 112 0.9500000 lbox
92 111 0.9500000 lbox
93 110 0.9500000 lbox
94 109 0.9500000 lbox
95 108 0.9500000 lbox
99 107 0.9500000 lbox
100 106 0.9500000 lbox
showpage
end
%%EOF
