%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:38 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3q3z_a)
} def

/sequence { (\
CGCGGAAACAAUGAUGAAUGGGUUUAAAUUGGGCACUUGACUCAUUUUGAGUUAGUAGUGCAACCGACCGUGCU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.007755061 ubox
1 16 0.012133627 ubox
1 20 0.003367381 ubox
1 22 0.006596612 ubox
1 70 0.016301437 ubox
1 72 0.948983434 ubox
2 9 0.008904582 ubox
2 12 0.006716638 ubox
2 15 0.011985691 ubox
2 23 0.004563472 ubox
2 68 0.021999850 ubox
2 69 0.015940512 ubox
2 71 0.989328998 ubox
2 73 0.057282403 ubox
3 13 0.018234027 ubox
3 16 0.009363605 ubox
3 20 0.009639362 ubox
3 22 0.004759449 ubox
3 66 0.044050729 ubox
3 70 0.992231293 ubox
3 72 0.056518114 ubox
4 9 0.030149420 ubox
4 12 0.017281110 ubox
4 15 0.008900990 ubox
4 19 0.009223239 ubox
4 25 0.016401776 ubox
4 65 0.044736852 ubox
4 68 0.006338798 ubox
4 69 0.992323258 ubox
4 71 0.036403773 ubox
4 74 0.003403051 ubox
5 9 0.006957856 ubox
5 24 0.034141785 ubox
5 25 0.026574789 ubox
5 64 0.044557566 ubox
5 65 0.003198316 ubox
5 68 0.987801175 ubox
5 69 0.016422069 ubox
5 73 0.003757759 ubox
6 12 0.022828644 ubox
6 15 0.022965451 ubox
6 19 0.021843169 ubox
6 23 0.106191468 ubox
6 24 0.068630895 ubox
6 25 0.608857179 ubox
6 29 0.004952001 ubox
6 30 0.012693056 ubox
7 12 0.023111294 ubox
7 15 0.015685908 ubox
7 19 0.011855329 ubox
7 23 0.063635034 ubox
7 24 0.643748600 ubox
7 25 0.027684579 ubox
7 29 0.012883697 ubox
7 30 0.019000046 ubox
8 12 0.014183563 ubox
8 15 0.020291572 ubox
8 19 0.010253511 ubox
8 23 0.651520535 ubox
8 24 0.024234511 ubox
8 25 0.013356407 ubox
8 29 0.019915326 ubox
8 30 0.005764916 ubox
8 71 0.004563667 ubox
9 13 0.030613315 ubox
9 16 0.182315547 ubox
9 20 0.289423884 ubox
9 21 0.112440711 ubox
9 22 0.648860012 ubox
9 31 0.382266414 ubox
9 32 0.024832281 ubox
9 66 0.045329484 ubox
9 70 0.004889710 ubox
9 72 0.003681072 ubox
10 15 0.159486557 ubox
10 19 0.280434406 ubox
10 23 0.007979071 ubox
10 24 0.063022512 ubox
10 25 0.025881900 ubox
10 29 0.006044836 ubox
10 30 0.385276939 ubox
11 15 0.013942143 ubox
11 19 0.517208327 ubox
11 23 0.070940541 ubox
11 24 0.024740262 ubox
11 25 0.024304748 ubox
11 29 0.385396798 ubox
11 30 0.010343809 ubox
11 71 0.004530289 ubox
11 74 0.003952368 ubox
12 16 0.014661131 ubox
12 17 0.159165294 ubox
12 18 0.529790697 ubox
12 20 0.072757199 ubox
12 21 0.073608107 ubox
12 22 0.070705781 ubox
12 26 0.092429643 ubox
12 27 0.022518472 ubox
12 28 0.381612786 ubox
12 31 0.014245769 ubox
12 32 0.003547803 ubox
12 66 0.003632687 ubox
12 67 0.003678361 ubox
12 70 0.004957249 ubox
13 19 0.047777459 ubox
13 23 0.006848735 ubox
13 24 0.211051451 ubox
13 25 0.100662249 ubox
13 29 0.005322473 ubox
13 30 0.042567709 ubox
13 65 0.003932389 ubox
13 69 0.004821369 ubox
13 73 0.010433445 ubox
14 19 0.075813812 ubox
14 23 0.225600098 ubox
14 24 0.096664432 ubox
14 25 0.026756389 ubox
14 29 0.046818431 ubox
14 30 0.006251190 ubox
14 71 0.021583143 ubox
14 74 0.004508176 ubox
15 20 0.017411750 ubox
15 21 0.030546411 ubox
15 22 0.226579057 ubox
15 26 0.333910036 ubox
15 27 0.024774965 ubox
15 28 0.047320305 ubox
15 31 0.004208437 ubox
15 32 0.044398635 ubox
15 67 0.004078129 ubox
15 70 0.022261346 ubox
16 23 0.029623278 ubox
16 24 0.108015484 ubox
16 25 0.356164210 ubox
16 30 0.009550999 ubox
16 68 0.004162959 ubox
16 69 0.022259806 ubox
16 73 0.038047020 ubox
16 74 0.003610912 ubox
17 23 0.104925150 ubox
17 24 0.351262950 ubox
17 25 0.095248837 ubox
17 29 0.009491943 ubox
17 30 0.096372903 ubox
17 71 0.004187807 ubox
18 23 0.276990706 ubox
18 24 0.098053259 ubox
18 25 0.042404091 ubox
18 29 0.105282376 ubox
18 30 0.005457077 ubox
18 71 0.066381071 ubox
19 26 0.035577237 ubox
19 27 0.024484152 ubox
19 28 0.109285586 ubox
19 31 0.003236198 ubox
19 32 0.015855416 ubox
19 66 0.034862769 ubox
19 67 0.279940031 ubox
19 70 0.069054779 ubox
19 72 0.004160207 ubox
20 24 0.007301804 ubox
20 25 0.035883141 ubox
20 29 0.010193738 ubox
20 30 0.009513177 ubox
20 65 0.044337845 ubox
20 69 0.069401321 ubox
20 71 0.005346435 ubox
20 73 0.003212023 ubox
20 74 0.003873603 ubox
21 25 0.012366346 ubox
21 29 0.013136092 ubox
21 30 0.029355748 ubox
21 64 0.043499871 ubox
21 65 0.356084625 ubox
21 68 0.068241815 ubox
21 69 0.061571988 ubox
21 73 0.004247783 ubox
21 74 0.027705394 ubox
22 29 0.036690560 ubox
22 30 0.007129518 ubox
22 64 0.356331752 ubox
22 68 0.062875321 ubox
22 73 0.030415952 ubox
23 27 0.009760160 ubox
23 28 0.036744240 ubox
23 31 0.003748264 ubox
23 32 0.009633696 ubox
23 62 0.008549468 ubox
23 63 0.352071182 ubox
23 66 0.003551105 ubox
23 67 0.061063373 ubox
23 72 0.030133956 ubox
24 28 0.010559973 ubox
24 31 0.013961093 ubox
24 32 0.014468390 ubox
24 62 0.336977182 ubox
24 63 0.017997435 ubox
24 66 0.053906568 ubox
24 67 0.009441415 ubox
25 31 0.021100383 ubox
25 32 0.014252924 ubox
25 62 0.024144198 ubox
25 66 0.009852822 ubox
25 67 0.008131810 ubox
25 70 0.006959952 ubox
26 30 0.019243417 ubox
26 71 0.003223452 ubox
28 59 0.007021181 ubox
29 58 0.007075752 ubox
29 62 0.011268354 ubox
29 63 0.074642634 ubox
29 66 0.011880332 ubox
29 67 0.716517589 ubox
30 57 0.006953520 ubox
30 62 0.108244662 ubox
30 63 0.014472367 ubox
30 66 0.787617787 ubox
30 67 0.029046174 ubox
30 70 0.003543782 ubox
31 56 0.005494880 ubox
31 61 0.115412562 ubox
31 64 0.041627818 ubox
31 65 0.829391519 ubox
31 69 0.005197364 ubox
32 61 0.025964431 ubox
32 64 0.825638078 ubox
32 65 0.052075276 ubox
32 68 0.005268348 ubox
33 59 0.115470362 ubox
33 61 0.988810522 ubox
33 64 0.035414814 ubox
34 58 0.115620109 ubox
34 60 0.993169614 ubox
35 56 0.103543408 ubox
35 59 0.992935349 ubox
36 55 0.103956987 ubox
36 58 0.992070559 ubox
37 54 0.075003230 ubox
37 55 0.357060818 ubox
37 57 0.883904752 ubox
37 58 0.003478652 ubox
38 54 0.911307201 ubox
38 55 0.058272179 ubox
38 57 0.015142552 ubox
39 52 0.004208619 ubox
39 53 0.992269017 ubox
39 56 0.013194309 ubox
40 52 0.999304679 ubox
40 53 0.010218951 ubox
40 56 0.004851714 ubox
41 51 0.999954819 ubox
41 55 0.005075038 ubox
42 50 0.999812287 ubox
42 54 0.004887215 ubox
43 49 0.999692154 ubox
44 48 0.810188012 ubox
44 52 0.004271749 ubox
45 51 0.004271330 ubox
46 50 0.003265908 ubox
61 66 0.004680780 ubox
63 71 0.004910833 ubox
64 70 0.005198672 ubox
1 72 0.9500000 lbox
2 71 0.9500000 lbox
3 70 0.9500000 lbox
4 69 0.9500000 lbox
5 68 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
9 22 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
29 67 0.9500000 lbox
30 66 0.9500000 lbox
31 65 0.9500000 lbox
32 64 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
40 52 0.9500000 lbox
41 51 0.9500000 lbox
42 50 0.9500000 lbox
43 49 0.9500000 lbox
44 48 0.9500000 lbox
showpage
end
%%EOF
