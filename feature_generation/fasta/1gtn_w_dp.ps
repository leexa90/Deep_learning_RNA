%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1gtn_w)
} def

/sequence { (\
GAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGCCGAGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.008657295 ubox
1 10 0.010920905 ubox
1 15 0.009999545 ubox
1 20 0.010915731 ubox
1 25 0.009997504 ubox
1 30 0.010910091 ubox
1 35 0.010024839 ubox
1 40 0.013067394 ubox
1 45 0.038634889 ubox
1 49 0.005515033 ubox
1 50 0.358787741 ubox
1 54 0.015908132 ubox
3 9 0.023938939 ubox
3 14 0.017240317 ubox
3 19 0.024926746 ubox
3 24 0.017229967 ubox
3 29 0.024909492 ubox
3 34 0.017245534 ubox
3 39 0.026621834 ubox
3 44 0.051794756 ubox
3 49 0.470729859 ubox
3 50 0.020561048 ubox
3 54 0.822211112 ubox
4 8 0.023826258 ubox
4 13 0.017267926 ubox
4 18 0.024988093 ubox
4 23 0.017268028 ubox
4 28 0.024970935 ubox
4 33 0.017283613 ubox
4 38 0.026685291 ubox
4 43 0.051890258 ubox
4 46 0.004586430 ubox
4 48 0.471568345 ubox
4 51 0.015529519 ubox
4 53 0.829206265 ubox
5 11 0.017039375 ubox
5 16 0.027403983 ubox
5 21 0.018411913 ubox
5 26 0.027387080 ubox
5 31 0.018425746 ubox
5 36 0.028967614 ubox
5 41 0.052415833 ubox
5 46 0.472722608 ubox
5 48 0.003418267 ubox
5 51 0.856917283 ubox
5 53 0.008899320 ubox
6 10 0.015972483 ubox
6 15 0.027452277 ubox
6 20 0.018438797 ubox
6 25 0.027439195 ubox
6 30 0.018452943 ubox
6 35 0.029017280 ubox
6 40 0.052431260 ubox
6 45 0.472778100 ubox
6 50 0.857567534 ubox
6 54 0.003680610 ubox
8 14 0.026543315 ubox
8 19 0.018634030 ubox
8 24 0.027641046 ubox
8 29 0.018651252 ubox
8 34 0.029217376 ubox
8 39 0.052639636 ubox
8 44 0.473846152 ubox
8 49 0.859824843 ubox
8 50 0.005175561 ubox
8 54 0.159519371 ubox
9 13 0.026354327 ubox
9 18 0.018623719 ubox
9 23 0.027641884 ubox
9 28 0.018652239 ubox
9 33 0.029218345 ubox
9 38 0.052640589 ubox
9 43 0.473847519 ubox
9 48 0.859831013 ubox
9 51 0.003475413 ubox
9 53 0.160880006 ubox
10 16 0.017255441 ubox
10 21 0.027639987 ubox
10 26 0.018673015 ubox
10 31 0.029213789 ubox
10 36 0.052593084 ubox
10 41 0.472921092 ubox
10 46 0.858023917 ubox
10 48 0.004271847 ubox
10 51 0.167556267 ubox
11 15 0.016152762 ubox
11 20 0.027637867 ubox
11 25 0.018674530 ubox
11 30 0.029215494 ubox
11 35 0.052594569 ubox
11 40 0.472922085 ubox
11 45 0.858022944 ubox
11 50 0.167749695 ubox
13 19 0.026605597 ubox
13 24 0.018729067 ubox
13 29 0.029301820 ubox
13 34 0.052749232 ubox
13 39 0.473939604 ubox
13 44 0.859730976 ubox
13 45 0.004309406 ubox
13 49 0.168418675 ubox
13 54 0.021238856 ubox
14 18 0.026415388 ubox
14 23 0.018717835 ubox
14 28 0.029301866 ubox
14 33 0.052749786 ubox
14 38 0.473940217 ubox
14 43 0.859730491 ubox
14 48 0.168421274 ubox
14 53 0.021423839 ubox
15 21 0.017303759 ubox
15 26 0.029271858 ubox
15 31 0.052686400 ubox
15 36 0.473011215 ubox
15 41 0.857909010 ubox
15 43 0.004259975 ubox
15 46 0.168240449 ubox
15 51 0.024818267 ubox
16 20 0.016197056 ubox
16 25 0.029268836 ubox
16 30 0.052686480 ubox
16 35 0.473012081 ubox
16 40 0.857907412 ubox
16 45 0.168246494 ubox
16 50 0.024952768 ubox
18 24 0.028171702 ubox
18 29 0.052830815 ubox
18 34 0.474028809 ubox
18 39 0.859615431 ubox
18 40 0.004308207 ubox
18 44 0.168741991 ubox
18 49 0.025243332 ubox
18 54 0.016736129 ubox
19 23 0.027970293 ubox
19 28 0.052799331 ubox
19 33 0.474027002 ubox
19 38 0.859614564 ubox
19 43 0.168742637 ubox
19 48 0.025245620 ubox
19 53 0.016892237 ubox
20 26 0.048808022 ubox
20 31 0.473094989 ubox
20 36 0.857781372 ubox
20 38 0.004333693 ubox
20 41 0.168543923 ubox
20 46 0.025314240 ubox
20 51 0.026865557 ubox
21 25 0.045685452 ubox
21 29 0.004292101 ubox
21 30 0.473029895 ubox
21 34 0.006209904 ubox
21 35 0.857763131 ubox
21 40 0.168549178 ubox
21 45 0.025319738 ubox
21 50 0.027238733 ubox
23 29 0.454997715 ubox
23 30 0.005737136 ubox
23 34 0.859310564 ubox
23 35 0.005085094 ubox
23 39 0.169043782 ubox
23 44 0.025403054 ubox
23 49 0.027745565 ubox
23 54 0.013547851 ubox
24 28 0.451742711 ubox
24 31 0.008138692 ubox
24 33 0.858788724 ubox
24 38 0.169043545 ubox
24 43 0.025403232 ubox
24 48 0.027750082 ubox
24 53 0.013668237 ubox
25 31 0.793103775 ubox
25 33 0.030505489 ubox
25 36 0.168842428 ubox
25 41 0.025375038 ubox
25 46 0.027812362 ubox
25 51 0.018013248 ubox
26 30 0.742345572 ubox
26 35 0.168824108 ubox
26 40 0.025375580 ubox
26 45 0.027817556 ubox
26 50 0.018184564 ubox
28 34 0.162514926 ubox
28 39 0.025449549 ubox
28 44 0.027902019 ubox
28 49 0.018520836 ubox
28 54 0.016448259 ubox
29 33 0.161352695 ubox
29 38 0.025434246 ubox
29 43 0.027902087 ubox
29 48 0.018523761 ubox
29 53 0.016602081 ubox
30 36 0.023515841 ubox
30 41 0.027875412 ubox
30 46 0.018634827 ubox
30 51 0.026673751 ubox
31 35 0.022011904 ubox
31 40 0.027872744 ubox
31 45 0.018641381 ubox
31 50 0.027049334 ubox
33 39 0.026828562 ubox
33 44 0.018700673 ubox
33 49 0.027559297 ubox
33 54 0.013557863 ubox
34 38 0.026636738 ubox
34 43 0.018689517 ubox
34 48 0.027563707 ubox
34 53 0.013678326 ubox
35 41 0.017278520 ubox
35 46 0.027626919 ubox
35 51 0.018023479 ubox
36 40 0.016173481 ubox
36 45 0.027628288 ubox
36 50 0.018194426 ubox
38 44 0.026598686 ubox
38 49 0.018527944 ubox
38 54 0.016469519 ubox
39 43 0.026408568 ubox
39 48 0.018519638 ubox
39 53 0.016623425 ubox
40 46 0.017242512 ubox
40 51 0.026690871 ubox
41 45 0.016145018 ubox
41 50 0.027062558 ubox
43 49 0.026465454 ubox
43 54 0.013569368 ubox
44 48 0.026280433 ubox
44 53 0.013681626 ubox
45 51 0.016679884 ubox
46 50 0.015760643 ubox
48 54 0.015825914 ubox
49 53 0.015859562 ubox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
8 49 0.9500000 lbox
9 48 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
13 44 0.9500000 lbox
14 43 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
18 39 0.9500000 lbox
19 38 0.9500000 lbox
20 36 0.9500000 lbox
21 35 0.9500000 lbox
23 34 0.9500000 lbox
24 33 0.9500000 lbox
25 31 0.9500000 lbox
26 30 0.9500000 lbox
showpage
end
%%EOF
