%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3cul_c)
} def

/sequence { (\
GAUGGCGAAAGCCAUUUCCGCAGGCCCCAUUGCACUCCGGGGUAUUGGCGUUAGGUGGUGGUACGAGGUUCGAAUCCUCGUACCGCAGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.017744149 ubox
1 16 0.832949673 ubox
1 17 0.055176788 ubox
1 18 0.121673729 ubox
1 19 0.018356783 ubox
1 49 0.004193018 ubox
1 52 0.007674067 ubox
1 90 0.003931617 ubox
2 15 0.968895348 ubox
2 16 0.046851289 ubox
2 17 0.106193389 ubox
2 51 0.006740876 ubox
3 14 0.993164513 ubox
3 50 0.005590155 ubox
3 53 0.005332294 ubox
3 91 0.009507420 ubox
4 13 0.999806028 ubox
4 49 0.005126429 ubox
4 52 0.005757887 ubox
4 90 0.011649104 ubox
5 12 0.999824807 ubox
5 49 0.003658336 ubox
5 51 0.005931236 ubox
5 89 0.011652187 ubox
6 11 0.999432850 ubox
6 47 0.004833369 ubox
6 48 0.003918897 ubox
6 50 0.005943943 ubox
6 88 0.011636296 ubox
7 18 0.006094346 ubox
7 46 0.004646548 ubox
8 17 0.006315374 ubox
8 45 0.004441413 ubox
8 46 0.003957231 ubox
8 52 0.004234416 ubox
9 16 0.006260897 ubox
9 45 0.003855289 ubox
9 51 0.003828377 ubox
10 15 0.005970119 ubox
11 43 0.005641051 ubox
11 49 0.011711864 ubox
11 59 0.007637173 ubox
12 42 0.005743694 ubox
12 48 0.011949313 ubox
12 58 0.008401114 ubox
13 41 0.005674117 ubox
13 47 0.011948969 ubox
13 57 0.009769000 ubox
14 46 0.011299019 ubox
14 51 0.003247280 ubox
14 56 0.009814371 ubox
15 44 0.004176973 ubox
15 50 0.003164273 ubox
15 53 0.012221842 ubox
15 54 0.003884335 ubox
15 55 0.009708740 ubox
16 42 0.013302063 ubox
16 50 0.017272587 ubox
16 53 0.146859889 ubox
16 54 0.009678726 ubox
17 41 0.022625699 ubox
17 48 0.006549022 ubox
17 50 0.015910240 ubox
17 53 0.056355897 ubox
17 91 0.003923059 ubox
18 23 0.003566141 ubox
18 40 0.026303699 ubox
18 47 0.008263548 ubox
18 48 0.120265725 ubox
18 50 0.057325226 ubox
18 54 0.006133539 ubox
18 58 0.003927908 ubox
19 23 0.003432646 ubox
19 39 0.026339964 ubox
19 47 0.121584705 ubox
19 48 0.036877559 ubox
19 50 0.964596674 ubox
19 57 0.009038407 ubox
20 33 0.011324151 ubox
20 38 0.026271552 ubox
20 45 0.004414816 ubox
20 46 0.104251602 ubox
20 49 0.986461487 ubox
20 51 0.005746885 ubox
20 56 0.009098012 ubox
21 32 0.011347481 ubox
21 47 0.267674909 ubox
21 48 0.953077847 ubox
21 50 0.005855443 ubox
21 55 0.009093697 ubox
22 31 0.011309933 ubox
22 36 0.025557836 ubox
22 45 0.105364284 ubox
22 46 0.365477089 ubox
22 51 0.006002940 ubox
23 30 0.010566836 ubox
23 35 0.026103671 ubox
23 43 0.013057003 ubox
23 45 0.273938687 ubox
23 46 0.108718794 ubox
23 52 0.032371157 ubox
24 33 0.026087999 ubox
24 43 0.987398892 ubox
24 45 0.038344783 ubox
24 46 0.008208653 ubox
24 49 0.009005393 ubox
24 51 0.036410762 ubox
25 32 0.026018684 ubox
25 41 0.008170085 ubox
25 42 0.998691955 ubox
25 48 0.008842450 ubox
25 50 0.036727473 ubox
26 40 0.008420282 ubox
26 41 0.998722721 ubox
26 42 0.011454819 ubox
26 47 0.008617329 ubox
26 48 0.003275541 ubox
26 50 0.004960419 ubox
27 39 0.008644789 ubox
27 40 0.998713172 ubox
27 41 0.011849093 ubox
27 48 0.037379989 ubox
28 39 0.997873131 ubox
28 40 0.012172916 ubox
28 47 0.037509355 ubox
29 36 0.062657296 ubox
29 46 0.037163425 ubox
30 34 0.012856788 ubox
30 39 0.004658736 ubox
31 39 0.011244755 ubox
31 44 0.036765480 ubox
32 36 0.032649692 ubox
32 37 0.140332009 ubox
32 38 0.074203436 ubox
32 43 0.038291289 ubox
33 39 0.005776209 ubox
33 42 0.038010415 ubox
34 51 0.010295404 ubox
35 40 0.032106419 ubox
35 41 0.014411110 ubox
35 50 0.010984279 ubox
36 40 0.013004843 ubox
37 48 0.011252692 ubox
38 47 0.011264115 ubox
39 46 0.010732560 ubox
40 45 0.009542384 ubox
42 49 0.009320028 ubox
43 48 0.009089153 ubox
46 91 0.004508506 ubox
47 90 0.005746452 ubox
48 89 0.005752418 ubox
49 88 0.005723107 ubox
51 91 0.015768957 ubox
52 91 0.057560038 ubox
54 89 0.018304676 ubox
54 90 0.998317137 ubox
55 89 0.999349919 ubox
55 90 0.005004974 ubox
56 87 0.037821307 ubox
56 88 0.951343497 ubox
56 91 0.007816368 ubox
57 86 0.032828477 ubox
57 90 0.009943178 ubox
58 86 0.995540899 ubox
58 89 0.009540864 ubox
59 85 0.999102547 ubox
59 88 0.008762369 ubox
60 84 0.999962806 ubox
61 83 0.999989778 ubox
62 82 0.999746350 ubox
63 81 0.999746141 ubox
64 80 0.999958157 ubox
65 79 0.999969571 ubox
66 78 0.999846924 ubox
67 76 0.015937623 ubox
67 77 0.999850649 ubox
68 75 0.021673323 ubox
68 76 0.998666261 ubox
68 77 0.003180074 ubox
69 73 0.020036217 ubox
69 74 0.120637967 ubox
70 74 0.152037153 ubox
1 16 0.9500000 lbox
2 15 0.9500000 lbox
3 14 0.9500000 lbox
4 13 0.9500000 lbox
5 12 0.9500000 lbox
6 11 0.9500000 lbox
19 50 0.9500000 lbox
20 49 0.9500000 lbox
21 48 0.9500000 lbox
24 43 0.9500000 lbox
25 42 0.9500000 lbox
26 41 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
54 90 0.9500000 lbox
55 89 0.9500000 lbox
56 88 0.9500000 lbox
58 86 0.9500000 lbox
59 85 0.9500000 lbox
60 84 0.9500000 lbox
61 83 0.9500000 lbox
62 82 0.9500000 lbox
63 81 0.9500000 lbox
64 80 0.9500000 lbox
65 79 0.9500000 lbox
66 78 0.9500000 lbox
67 77 0.9500000 lbox
68 76 0.9500000 lbox
showpage
end
%%EOF
