%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGGCCCGUAGCUUAGCCAGGUCAGAGCGCCCGGCUCAUAACCGGGCGGUCGAGGGUUCGAAUCCCUCCGGGCCCACCA\
) def
/coor [
[138.73951721 205.01237488]
[136.36354065 190.20173645]
[133.98757935 175.39111328]
[131.61160278 160.58049011]
[129.23562622 145.76985168]
[126.85965729 130.95922852]
[124.48368835 116.14859009]
[109.54145050 125.63282013]
[93.10928345 124.41886902]
[81.58197021 114.42398071]
[67.43077087 119.39826965]
[53.27957153 124.37255859]
[39.12837219 129.34684753]
[28.86552429 142.13769531]
[12.70022488 139.37814331]
[7.26195192 123.90696716]
[18.14513206 111.63959503]
[34.15408325 115.19564819]
[48.30528259 110.22135925]
[62.45648193 105.24707031]
[76.60768127 100.27278137]
[82.36184692 81.76107025]
[101.23444366 72.67680359]
[122.20716858 80.84093475]
[119.24426270 66.13647461]
[108.93349457 54.13653183]
[114.00436401 40.13169479]
[111.04145050 25.42723274]
[108.07854462 10.72277260]
[105.11563110 -3.98168802]
[102.15271759 -18.68614769]
[99.18981171 -33.39060974]
[96.22689819 -48.09506989]
[82.41264343 -55.42313004]
[76.58864594 -69.93570709]
[81.50481415 -84.78041840]
[94.83988190 -92.94803619]
[110.29743958 -90.58206177]
[120.57890320 -78.79963684]
[120.82968140 -63.16406250]
[110.93135834 -51.05797958]
[113.89427185 -36.35351944]
[116.85717773 -21.64905930]
[119.82009125 -6.94459915]
[122.78300476 7.75986147]
[125.74591064 22.46432114]
[128.70883179 37.16878128]
[138.80766296 48.11696625]
[133.94871521 63.17356491]
[136.91163635 77.87802887]
[148.61248779 87.26364899]
[163.60952759 86.96541595]
[178.60656738 86.66718292]
[193.60359192 86.36894989]
[208.60063171 86.07071686]
[218.27058411 73.78144836]
[233.58805847 70.63365936]
[247.32064819 78.11364746]
[252.98422241 92.68958282]
[247.90461731 107.47916412]
[234.48027039 115.49919128]
[219.04974365 112.96286011]
[208.89886475 101.06774902]
[193.90182495 101.36598206]
[178.90480042 101.66421509]
[163.90776062 101.96244812]
[148.91072083 102.26068115]
[139.29432678 113.77262115]
[141.67028809 128.58325195]
[144.04626465 143.39389038]
[146.42222595 158.20451355]
[148.79820251 173.01513672]
[151.17417908 187.82577515]
[153.55014038 202.63639832]
[165.65281677 213.16754150]
[164.82121277 229.18902588]
[151.69325256 238.41055298]
[136.33959961 233.75813293]
] def
/pairs [
[1 74]
[2 73]
[3 72]
[4 71]
[5 70]
[6 69]
[7 68]
[10 21]
[11 20]
[12 19]
[13 18]
[24 50]
[25 49]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
