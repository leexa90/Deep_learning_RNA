%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4v4b_b4)
} def

/sequence { (\
UAGGCGGCCACAGCGGUGGGGUUGCCUCCCGUACCCAUCCCGAACACGGAAGAUAAGCCCACCAGCGUUCCGGGGAGUACUGGAGUGCGCGAGCCUCUGGGAAACCCGGUUCGCCGCCACC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 119 0.074006565 ubox
2 27 0.004513712 ubox
3 26 0.007035154 ubox
3 115 0.003654392 ubox
3 118 0.994931849 ubox
3 120 0.005991758 ubox
3 121 0.087214019 ubox
4 14 0.003961539 ubox
4 25 0.007085801 ubox
4 114 0.003623400 ubox
4 117 0.995980200 ubox
4 118 0.003212341 ubox
4 120 0.087935987 ubox
5 13 0.003973934 ubox
5 24 0.007086019 ubox
5 113 0.003620022 ubox
5 116 0.995977058 ubox
6 11 0.009909198 ubox
6 14 0.005830919 ubox
6 23 0.007078181 ubox
6 112 0.003401157 ubox
6 115 0.994558610 ubox
6 118 0.088846089 ubox
7 11 0.009760863 ubox
7 14 0.344666084 ubox
7 22 0.007515265 ubox
7 88 0.008137163 ubox
7 114 0.926291892 ubox
7 117 0.088850539 ubox
8 13 0.343917535 ubox
8 16 0.003241717 ubox
8 19 0.013008633 ubox
8 21 0.007539194 ubox
8 87 0.006483904 ubox
8 113 0.918749700 ubox
8 116 0.088488595 ubox
9 13 0.020617468 ubox
9 15 0.005481532 ubox
9 18 0.014464368 ubox
9 20 0.007404209 ubox
9 67 0.016862892 ubox
9 87 0.009806297 ubox
9 109 0.004361247 ubox
9 113 0.058138798 ubox
9 116 0.005608449 ubox
10 17 0.014527001 ubox
10 68 0.182171272 ubox
10 69 0.031302691 ubox
10 86 0.011016669 ubox
10 110 0.027197909 ubox
10 111 0.052661895 ubox
11 16 0.014504466 ubox
11 18 0.007383920 ubox
11 65 0.021973856 ubox
11 67 0.194205111 ubox
11 85 0.010998441 ubox
11 89 0.003987517 ubox
11 109 0.025931623 ubox
11 113 0.006168830 ubox
12 17 0.007135913 ubox
12 68 0.024368705 ubox
12 69 0.020826964 ubox
12 110 0.011315696 ubox
12 111 0.021547344 ubox
13 32 0.003496349 ubox
13 66 0.837585109 ubox
13 68 0.023767678 ubox
13 90 0.074081473 ubox
13 94 0.006121927 ubox
13 110 0.016331840 ubox
13 115 0.003409525 ubox
14 31 0.003579730 ubox
14 65 0.838299240 ubox
14 67 0.024030030 ubox
14 89 0.074104419 ubox
14 93 0.006179282 ubox
14 109 0.015808529 ubox
15 30 0.003598938 ubox
15 63 0.996723709 ubox
15 66 0.011445587 ubox
16 29 0.003596515 ubox
16 62 0.999783761 ubox
16 63 0.005894191 ubox
17 61 0.999606234 ubox
17 64 0.005030784 ubox
18 60 0.999626388 ubox
18 63 0.004892662 ubox
19 59 0.999449131 ubox
19 60 0.020309689 ubox
19 62 0.003762678 ubox
19 95 0.003508467 ubox
19 96 0.003594574 ubox
20 58 0.999064365 ubox
20 59 0.028028437 ubox
20 94 0.003519644 ubox
20 95 0.003885089 ubox
21 58 0.033902502 ubox
21 90 0.003269325 ubox
21 94 0.003886444 ubox
22 55 0.006653507 ubox
22 56 0.990244939 ubox
22 57 0.037966115 ubox
22 92 0.003630359 ubox
22 93 0.003744287 ubox
23 33 0.003935163 ubox
23 53 0.003338834 ubox
23 55 0.994590762 ubox
23 56 0.036704590 ubox
23 89 0.007779400 ubox
23 91 0.003645350 ubox
24 32 0.005090652 ubox
24 54 0.960530047 ubox
24 88 0.014424657 ubox
24 90 0.003795568 ubox
25 31 0.005208064 ubox
25 52 0.120518267 ubox
25 87 0.014438957 ubox
25 89 0.003787251 ubox
26 52 0.983442864 ubox
26 85 0.014998078 ubox
27 50 0.130257410 ubox
27 51 0.960811297 ubox
27 52 0.005658818 ubox
27 53 0.044637386 ubox
27 84 0.015848483 ubox
28 49 0.131900800 ubox
28 52 0.045679967 ubox
28 83 0.016419326 ubox
29 48 0.108345440 ubox
29 49 0.989285648 ubox
29 82 0.016406516 ubox
30 42 0.019349470 ubox
30 48 0.993737100 ubox
31 36 0.003869947 ubox
31 38 0.003220552 ubox
31 39 0.004022653 ubox
31 40 0.003471878 ubox
31 41 0.019009333 ubox
31 45 0.060427542 ubox
31 47 0.995494318 ubox
31 80 0.016552888 ubox
32 37 0.005485774 ubox
32 42 0.006281937 ubox
32 43 0.012943852 ubox
32 44 0.061911942 ubox
32 46 0.960960047 ubox
32 79 0.016584367 ubox
33 38 0.017419177 ubox
33 78 0.016575401 ubox
34 42 0.236550628 ubox
34 77 0.016502516 ubox
35 42 0.305821144 ubox
35 75 0.005644906 ubox
36 42 0.532694731 ubox
36 74 0.005117462 ubox
36 75 0.004948188 ubox
37 54 0.005287192 ubox
38 42 0.022608803 ubox
38 43 0.024433643 ubox
38 44 0.014999812 ubox
38 46 0.003709226 ubox
38 50 0.012675980 ubox
38 53 0.006523544 ubox
38 74 0.004010139 ubox
38 75 0.013376980 ubox
38 76 0.004684249 ubox
39 49 0.011932310 ubox
39 52 0.006513884 ubox
39 73 0.006230186 ubox
39 74 0.014461765 ubox
39 75 0.004668861 ubox
40 48 0.011006529 ubox
40 49 0.014825710 ubox
40 72 0.006243055 ubox
40 73 0.014657890 ubox
40 74 0.004611706 ubox
41 48 0.015620703 ubox
41 72 0.014673318 ubox
41 73 0.004534703 ubox
42 47 0.016129706 ubox
42 70 0.012582379 ubox
42 71 0.010478609 ubox
43 69 0.016259737 ubox
44 68 0.016307776 ubox
45 67 0.016306900 ubox
47 65 0.015689926 ubox
48 59 0.003204902 ubox
48 63 0.014983063 ubox
49 58 0.003213592 ubox
49 62 0.015013264 ubox
52 59 0.011880027 ubox
52 60 0.003453132 ubox
57 66 0.003736061 ubox
58 65 0.003733452 ubox
65 88 0.368703553 ubox
65 90 0.268249491 ubox
65 112 0.012735534 ubox
65 114 0.229186833 ubox
65 115 0.003965427 ubox
66 87 0.369149163 ubox
66 89 0.268633661 ubox
66 113 0.236112054 ubox
67 86 0.349906444 ubox
67 88 0.268659661 ubox
67 90 0.006291163 ubox
67 110 0.012067971 ubox
67 111 0.028289127 ubox
67 112 0.817629614 ubox
68 84 0.004631965 ubox
68 85 0.355867184 ubox
68 87 0.249938555 ubox
68 89 0.005976177 ubox
69 84 0.452722798 ubox
69 85 0.008490750 ubox
69 109 0.003637712 ubox
70 83 0.458142795 ubox
70 85 0.015963769 ubox
70 108 0.003649269 ubox
70 109 0.886732026 ubox
71 82 0.458152650 ubox
71 83 0.016103089 ubox
71 108 0.888395061 ubox
71 109 0.010908958 ubox
72 80 0.005303608 ubox
72 81 0.457451896 ubox
72 107 0.887844128 ubox
73 80 0.457249614 ubox
73 81 0.023055802 ubox
73 106 0.887263429 ubox
73 107 0.035038953 ubox
74 78 0.006280372 ubox
74 80 0.028508903 ubox
74 105 0.886344898 ubox
74 106 0.047758530 ubox
75 80 0.003650033 ubox
75 105 0.057631743 ubox
77 105 0.005630480 ubox
78 100 0.009665734 ubox
78 101 0.146963823 ubox
78 102 0.135475727 ubox
78 103 0.036991187 ubox
78 104 0.010071543 ubox
80 99 0.047279094 ubox
80 100 0.885000236 ubox
80 101 0.024193988 ubox
81 99 0.882576058 ubox
81 100 0.019506151 ubox
82 97 0.003234790 ubox
82 98 0.884693808 ubox
83 97 0.888520616 ubox
84 96 0.888416866 ubox
85 94 0.011376467 ubox
85 95 0.888234964 ubox
85 117 0.004653391 ubox
85 120 0.004821604 ubox
86 93 0.015808337 ubox
86 116 0.004705486 ubox
86 119 0.004831264 ubox
87 94 0.888236641 ubox
87 115 0.010065281 ubox
87 117 0.004260410 ubox
87 118 0.003705952 ubox
88 93 0.887982178 ubox
88 116 0.005284932 ubox
89 114 0.297756643 ubox
89 115 0.006376600 ubox
90 113 0.305294691 ubox
91 97 0.004186047 ubox
91 112 0.457260123 ubox
92 96 0.003680634 ubox
92 111 0.457307211 ubox
93 110 0.457331420 ubox
93 112 0.006521113 ubox
94 109 0.456174602 ubox
95 108 0.453111599 ubox
95 109 0.008491238 ubox
96 102 0.003817429 ubox
96 108 0.008819193 ubox
96 109 0.003777428 ubox
97 101 0.003807944 ubox
97 108 0.015145443 ubox
97 109 0.046172092 ubox
98 104 0.003788908 ubox
98 108 0.066909980 ubox
99 105 0.015047339 ubox
99 106 0.302446548 ubox
99 107 0.340151527 ubox
100 105 0.302487082 ubox
100 106 0.340345692 ubox
100 107 0.046966297 ubox
101 105 0.334854776 ubox
101 106 0.046935646 ubox
3 118 0.9500000 lbox
4 117 0.9500000 lbox
5 116 0.9500000 lbox
6 115 0.9500000 lbox
7 114 0.9500000 lbox
8 113 0.9500000 lbox
13 66 0.9500000 lbox
14 65 0.9500000 lbox
15 63 0.9500000 lbox
16 62 0.9500000 lbox
17 61 0.9500000 lbox
18 60 0.9500000 lbox
19 59 0.9500000 lbox
20 58 0.9500000 lbox
22 56 0.9500000 lbox
23 55 0.9500000 lbox
24 54 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
29 49 0.9500000 lbox
30 48 0.9500000 lbox
31 47 0.9500000 lbox
32 46 0.9500000 lbox
67 112 0.9500000 lbox
70 109 0.9500000 lbox
71 108 0.9500000 lbox
72 107 0.9500000 lbox
73 106 0.9500000 lbox
74 105 0.9500000 lbox
80 100 0.9500000 lbox
81 99 0.9500000 lbox
82 98 0.9500000 lbox
83 97 0.9500000 lbox
84 96 0.9500000 lbox
85 95 0.9500000 lbox
87 94 0.9500000 lbox
88 93 0.9500000 lbox
showpage
end
%%EOF
