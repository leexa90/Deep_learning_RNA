%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4fe5_b)
} def

/sequence { (\
GACAUAUAAUCGCGUGGAUAUGGCACGCAAGUUUCUACCGGGCACCGUAAAUGUCCGACUAUGUCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.011265654 ubox
1 35 0.004834123 ubox
1 55 0.009311059 ubox
1 65 0.993871296 ubox
1 66 0.023962157 ubox
2 10 0.010731938 ubox
2 34 0.004763133 ubox
2 54 0.009387328 ubox
2 64 0.997837231 ubox
3 53 0.009392683 ubox
3 63 0.998392631 ubox
4 10 0.003516928 ubox
4 52 0.009324726 ubox
4 62 0.995724060 ubox
4 64 0.021750665 ubox
5 9 0.004011207 ubox
5 37 0.008148972 ubox
5 51 0.008899434 ubox
5 58 0.005587223 ubox
5 61 0.988686128 ubox
5 63 0.023174686 ubox
6 10 0.005947219 ubox
6 32 0.012729571 ubox
6 33 0.008282583 ubox
6 34 0.014579426 ubox
6 36 0.011438756 ubox
6 60 0.932359366 ubox
6 62 0.028198680 ubox
7 29 0.012950851 ubox
7 30 0.010026076 ubox
7 31 0.017129330 ubox
7 37 0.014260178 ubox
7 49 0.006375887 ubox
7 57 0.006397318 ubox
7 58 0.131892842 ubox
7 61 0.037385866 ubox
8 32 0.054039753 ubox
8 33 0.140623834 ubox
8 34 0.046954949 ubox
8 36 0.013626502 ubox
8 48 0.006319566 ubox
8 60 0.041491000 ubox
9 19 0.008127007 ubox
9 32 0.160329783 ubox
9 33 0.050984900 ubox
9 34 0.012847324 ubox
9 36 0.003781951 ubox
9 60 0.011150659 ubox
10 18 0.008562249 ubox
10 29 0.091696624 ubox
10 30 0.138642328 ubox
10 31 0.154753793 ubox
10 57 0.004466910 ubox
10 58 0.126862589 ubox
11 17 0.008632981 ubox
11 27 0.004891940 ubox
11 31 0.056736951 ubox
11 40 0.003197545 ubox
11 57 0.120788289 ubox
12 24 0.004881730 ubox
12 26 0.005091615 ubox
12 28 0.997187354 ubox
12 39 0.009482235 ubox
12 43 0.007132283 ubox
12 54 0.006017434 ubox
12 56 0.009273925 ubox
12 59 0.003666639 ubox
13 23 0.004823031 ubox
13 27 0.998239935 ubox
13 42 0.007150480 ubox
13 53 0.007490917 ubox
14 24 0.005549181 ubox
14 26 0.998254773 ubox
14 28 0.007422910 ubox
14 38 0.052513772 ubox
14 52 0.007536411 ubox
14 55 0.005076233 ubox
14 59 0.006534821 ubox
15 23 0.005635977 ubox
15 25 0.998010534 ubox
15 27 0.007427459 ubox
15 37 0.052641916 ubox
15 40 0.007107855 ubox
15 51 0.007460868 ubox
15 53 0.003232872 ubox
15 57 0.006573061 ubox
15 58 0.005295094 ubox
16 21 0.003351026 ubox
16 24 0.997167629 ubox
16 26 0.007433244 ubox
16 36 0.052618391 ubox
16 39 0.007308925 ubox
16 52 0.003543870 ubox
16 56 0.009570244 ubox
16 66 0.012132213 ubox
17 21 0.013068154 ubox
17 24 0.037433548 ubox
17 35 0.052618714 ubox
17 38 0.007311885 ubox
17 55 0.009792727 ubox
17 65 0.012386373 ubox
18 32 0.005033414 ubox
18 33 0.004270610 ubox
18 34 0.051700954 ubox
18 54 0.009791624 ubox
18 64 0.012386234 ubox
19 23 0.012976951 ubox
19 31 0.007925295 ubox
19 37 0.004825563 ubox
19 49 0.010429362 ubox
19 53 0.009262321 ubox
19 63 0.012381776 ubox
20 32 0.025116598 ubox
20 33 0.004392967 ubox
20 36 0.004782330 ubox
20 48 0.011517493 ubox
20 52 0.008585083 ubox
20 62 0.012376039 ubox
21 29 0.026035993 ubox
21 30 0.010534097 ubox
21 31 0.023666864 ubox
21 37 0.003425472 ubox
21 47 0.011818765 ubox
21 51 0.008070657 ubox
21 61 0.012368311 ubox
22 28 0.028044132 ubox
22 33 0.029984814 ubox
22 35 0.006980299 ubox
22 36 0.003769121 ubox
22 46 0.012203907 ubox
22 60 0.012317402 ubox
23 28 0.012677944 ubox
23 32 0.031507709 ubox
23 34 0.006690824 ubox
23 35 0.003800896 ubox
23 45 0.012156423 ubox
23 48 0.003220642 ubox
23 59 0.012216805 ubox
24 31 0.031784228 ubox
24 47 0.003264449 ubox
25 32 0.013521371 ubox
25 48 0.006180798 ubox
26 31 0.014220070 ubox
26 40 0.003429446 ubox
26 42 0.007063403 ubox
26 47 0.006373023 ubox
27 39 0.003444978 ubox
27 43 0.009838114 ubox
27 46 0.006213366 ubox
28 40 0.006277743 ubox
28 41 0.004246830 ubox
28 42 0.009779908 ubox
29 33 0.014943178 ubox
29 34 0.028586556 ubox
29 36 0.040110678 ubox
29 60 0.003364151 ubox
30 34 0.016357412 ubox
30 36 0.174882280 ubox
30 60 0.082411357 ubox
31 35 0.177520477 ubox
31 36 0.034088249 ubox
31 38 0.508779720 ubox
31 39 0.019556028 ubox
31 43 0.005817112 ubox
31 45 0.004181602 ubox
31 59 0.104457172 ubox
31 65 0.004498344 ubox
32 37 0.497193986 ubox
32 42 0.005618663 ubox
32 44 0.004148952 ubox
32 58 0.103616413 ubox
33 37 0.018981330 ubox
33 41 0.005228200 ubox
33 57 0.039265979 ubox
33 58 0.010237955 ubox
34 40 0.004412680 ubox
34 41 0.003366173 ubox
34 42 0.003496913 ubox
34 57 0.004804249 ubox
34 58 0.018613540 ubox
35 40 0.004323361 ubox
35 41 0.003829342 ubox
35 57 0.016972366 ubox
36 40 0.003462268 ubox
36 49 0.008387219 ubox
36 58 0.020238618 ubox
36 61 0.011446642 ubox
37 48 0.008827435 ubox
37 60 0.014771820 ubox
38 47 0.007269744 ubox
38 57 0.028726446 ubox
39 47 0.012099516 ubox
39 57 0.981074416 ubox
40 45 0.004722072 ubox
40 46 0.013333834 ubox
40 56 0.999647317 ubox
40 66 0.003693772 ubox
41 45 0.013120457 ubox
41 55 0.999678232 ubox
41 56 0.008176972 ubox
41 65 0.003724738 ubox
42 54 0.999297939 ubox
42 55 0.008330335 ubox
42 64 0.003724363 ubox
43 53 0.999520992 ubox
43 63 0.003725732 ubox
44 48 0.006052923 ubox
44 52 0.924848835 ubox
44 54 0.007082965 ubox
44 62 0.003631625 ubox
45 53 0.007700859 ubox
46 53 0.007889382 ubox
46 57 0.003887034 ubox
47 52 0.012692095 ubox
47 56 0.003946791 ubox
47 59 0.003412942 ubox
48 58 0.003313504 ubox
57 65 0.011084041 ubox
58 64 0.011774329 ubox
59 63 0.011741336 ubox
1 65 0.9500000 lbox
2 64 0.9500000 lbox
3 63 0.9500000 lbox
4 62 0.9500000 lbox
5 61 0.9500000 lbox
6 60 0.9500000 lbox
12 28 0.9500000 lbox
13 27 0.9500000 lbox
14 26 0.9500000 lbox
15 25 0.9500000 lbox
16 24 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
showpage
end
%%EOF
