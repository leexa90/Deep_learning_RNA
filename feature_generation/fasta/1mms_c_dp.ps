%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1mms_c)
} def

/sequence { (\
CUGGGAUGUUGGCUUAGAAGCAGCCAUCAUUUAAAGAGUGCGUAACAGCUCACCAGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 36 0.088343893 ubox
1 38 0.004102582 ubox
1 48 0.006458375 ubox
1 56 0.948016815 ubox
2 26 0.003769234 ubox
2 33 0.035343241 ubox
2 34 0.049570207 ubox
2 35 0.090474269 ubox
2 36 0.004417167 ubox
2 37 0.004263951 ubox
2 47 0.006776669 ubox
2 52 0.005741797 ubox
2 55 0.966062972 ubox
2 56 0.004733510 ubox
3 25 0.004171252 ubox
3 32 0.031636662 ubox
3 46 0.006824063 ubox
3 51 0.006297483 ubox
3 53 0.009152860 ubox
3 54 0.969184347 ubox
3 57 0.003315230 ubox
4 24 0.004148906 ubox
4 25 0.003807499 ubox
4 31 0.024964049 ubox
4 32 0.247532258 ubox
4 50 0.005357700 ubox
4 53 0.958955815 ubox
4 54 0.020838680 ubox
5 24 0.004077781 ubox
5 28 0.112068941 ubox
5 30 0.023085220 ubox
5 31 0.925329364 ubox
5 32 0.083638836 ubox
5 49 0.005138987 ubox
5 51 0.062605422 ubox
5 53 0.022639031 ubox
6 27 0.112147698 ubox
6 30 0.978134751 ubox
6 31 0.062837835 ubox
6 32 0.009515424 ubox
6 43 0.006518302 ubox
6 50 0.053494168 ubox
7 22 0.006207419 ubox
7 26 0.108631665 ubox
7 29 0.987591258 ubox
7 42 0.006560585 ubox
7 47 0.013268532 ubox
7 52 0.007313364 ubox
8 21 0.006537352 ubox
8 24 0.048658094 ubox
8 25 0.095860571 ubox
8 27 0.010896864 ubox
8 28 0.986823050 ubox
8 30 0.006996994 ubox
8 41 0.006557475 ubox
8 46 0.013915974 ubox
8 49 0.045437213 ubox
8 51 0.007413908 ubox
9 20 0.006540973 ubox
9 23 0.067976335 ubox
9 26 0.024599267 ubox
9 29 0.007057912 ubox
9 40 0.006150655 ubox
9 45 0.013654474 ubox
9 48 0.045334692 ubox
10 19 0.006511931 ubox
10 22 0.064773676 ubox
10 23 0.029296929 ubox
10 26 0.973618059 ubox
10 44 0.010727597 ubox
10 47 0.043967608 ubox
10 52 0.004006478 ubox
11 21 0.049517698 ubox
11 25 0.993058581 ubox
11 43 0.006488887 ubox
11 46 0.043098638 ubox
11 50 0.010131174 ubox
11 51 0.003995644 ubox
12 21 0.101575177 ubox
12 24 0.993130033 ubox
12 41 0.004337041 ubox
12 43 0.004150624 ubox
12 49 0.012359161 ubox
13 20 0.110146344 ubox
13 23 0.992898041 ubox
13 40 0.004323315 ubox
13 42 0.004461729 ubox
13 48 0.012379432 ubox
14 18 0.008484810 ubox
14 19 0.102631219 ubox
14 20 0.024718418 ubox
14 22 0.955268295 ubox
14 23 0.013218043 ubox
14 44 0.004846713 ubox
14 45 0.009740141 ubox
14 47 0.011917415 ubox
15 19 0.048601588 ubox
15 20 0.233569342 ubox
15 22 0.083174250 ubox
15 42 0.003607356 ubox
15 44 0.011271854 ubox
16 43 0.010644460 ubox
17 21 0.103915858 ubox
18 43 0.005829614 ubox
20 41 0.026619307 ubox
20 43 0.006063239 ubox
21 40 0.026636138 ubox
21 42 0.006223558 ubox
22 39 0.025811007 ubox
22 43 0.003534453 ubox
23 39 0.005551619 ubox
23 41 0.029629841 ubox
23 43 0.016407506 ubox
24 38 0.009089301 ubox
24 40 0.029372032 ubox
24 42 0.016782252 ubox
25 36 0.021941227 ubox
25 38 0.014833612 ubox
25 40 0.013471192 ubox
26 39 0.013683446 ubox
26 43 0.006125019 ubox
27 34 0.007299273 ubox
27 35 0.004343780 ubox
27 37 0.032402194 ubox
27 38 0.010422841 ubox
27 42 0.006365726 ubox
28 36 0.033197082 ubox
28 38 0.003593078 ubox
28 40 0.023179496 ubox
29 39 0.025558057 ubox
30 34 0.005753410 ubox
30 35 0.008729516 ubox
30 37 0.006573335 ubox
30 38 0.025867508 ubox
31 35 0.009682991 ubox
31 36 0.007243568 ubox
31 37 0.026549294 ubox
31 38 0.004568391 ubox
31 52 0.004419359 ubox
32 36 0.024706046 ubox
32 37 0.012125981 ubox
32 38 0.004672330 ubox
32 52 0.016261382 ubox
32 55 0.004895081 ubox
33 39 0.005026899 ubox
34 39 0.006407092 ubox
35 39 0.003940585 ubox
35 50 0.012526664 ubox
36 41 0.005804118 ubox
36 49 0.013074932 ubox
36 50 0.004375012 ubox
36 51 0.957817378 ubox
36 53 0.016836513 ubox
36 54 0.074620234 ubox
36 57 0.006117600 ubox
37 50 0.958584362 ubox
38 46 0.033257018 ubox
38 49 0.955267234 ubox
38 50 0.016710525 ubox
38 51 0.186478255 ubox
38 53 0.136633076 ubox
38 54 0.007709861 ubox
38 57 0.004077649 ubox
39 45 0.034183681 ubox
39 47 0.182931191 ubox
39 48 0.934435094 ubox
39 52 0.139902710 ubox
39 55 0.005053375 ubox
39 56 0.003886277 ubox
40 46 0.225512959 ubox
40 49 0.250442233 ubox
40 51 0.139751263 ubox
40 54 0.005605336 ubox
40 57 0.004726021 ubox
41 48 0.254493284 ubox
41 56 0.004777075 ubox
42 46 0.103944117 ubox
42 49 0.140355574 ubox
42 51 0.006335857 ubox
42 53 0.006933268 ubox
43 47 0.012872220 ubox
43 48 0.136151007 ubox
43 52 0.006907316 ubox
48 57 0.017650207 ubox
49 56 0.017832723 ubox
50 55 0.016312529 ubox
1 56 0.9500000 lbox
2 55 0.9500000 lbox
3 54 0.9500000 lbox
4 53 0.9500000 lbox
5 31 0.9500000 lbox
6 30 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
12 24 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
36 51 0.9500000 lbox
37 50 0.9500000 lbox
38 49 0.9500000 lbox
39 48 0.9500000 lbox
showpage
end
%%EOF
