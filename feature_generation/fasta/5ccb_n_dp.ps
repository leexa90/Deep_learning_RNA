%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:48 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5ccb_n)
} def

/sequence { (\
GGCCCGGAUAGCUCAGUCGGUAGAGCAUCAGACUUUUAAUCUGAGGGUCCAGGGUUCAAGUCCCUGUUCGGGCGCCA\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 56 0.005795045 ubox
1 57 0.004659845 ubox
1 73 0.045535174 ubox
1 75 0.318501844 ubox
1 76 0.244788972 ubox
2 55 0.009169598 ubox
2 56 0.003294538 ubox
2 73 0.972933228 ubox
2 75 0.222380844 ubox
2 76 0.003712317 ubox
3 54 0.009962459 ubox
3 72 0.979439731 ubox
3 74 0.201132771 ubox
4 53 0.010083653 ubox
4 71 0.984822610 ubox
4 72 0.172667788 ubox
5 52 0.010078873 ubox
5 70 0.985316659 ubox
5 71 0.169918603 ubox
5 72 0.005359202 ubox
6 29 0.011618854 ubox
6 50 0.013509885 ubox
6 68 0.007085961 ubox
6 69 0.980134307 ubox
7 18 0.012187711 ubox
7 28 0.011225511 ubox
7 29 0.694155513 ubox
7 49 0.025908532 ubox
7 67 0.010783815 ubox
7 68 0.677816842 ubox
7 69 0.151413849 ubox
8 17 0.012224054 ubox
8 28 0.697053295 ubox
8 48 0.026030224 ubox
8 67 0.622198262 ubox
8 68 0.142938101 ubox
9 16 0.011968153 ubox
9 22 0.012498260 ubox
9 27 0.692206184 ubox
9 30 0.022365040 ubox
9 47 0.025649158 ubox
9 66 0.294067674 ubox
10 21 0.013141497 ubox
10 28 0.050590294 ubox
10 65 0.195238548 ubox
10 67 0.018232580 ubox
10 68 0.004285237 ubox
11 17 0.003881369 ubox
11 21 0.022484377 ubox
11 26 0.997030618 ubox
11 29 0.003687501 ubox
11 48 0.004847676 ubox
11 64 0.044307278 ubox
12 16 0.004295389 ubox
12 19 0.013779863 ubox
12 20 0.023367416 ubox
12 25 0.997867576 ubox
12 45 0.035450559 ubox
12 47 0.005071863 ubox
12 60 0.005795562 ubox
13 19 0.020865019 ubox
13 20 0.006669856 ubox
13 24 0.997644691 ubox
13 44 0.035594979 ubox
13 46 0.004953367 ubox
13 59 0.005594522 ubox
14 19 0.012739631 ubox
14 20 0.006259403 ubox
14 23 0.997447392 ubox
14 43 0.035628838 ubox
14 45 0.004836910 ubox
14 66 0.004615294 ubox
15 21 0.152407144 ubox
15 42 0.035573364 ubox
15 65 0.004930072 ubox
16 21 0.049622159 ubox
16 26 0.006321069 ubox
16 33 0.003571869 ubox
16 41 0.035456514 ubox
16 62 0.011026300 ubox
16 63 0.005564824 ubox
16 64 0.005007597 ubox
17 22 0.018600465 ubox
17 24 0.014221152 ubox
17 25 0.003736483 ubox
17 32 0.003933969 ubox
17 39 0.003169965 ubox
17 44 0.003585987 ubox
18 23 0.017279617 ubox
18 31 0.003933560 ubox
18 43 0.003754463 ubox
18 60 0.012895403 ubox
19 26 0.004135738 ubox
19 29 0.006313958 ubox
19 42 0.003647604 ubox
19 61 0.005597736 ubox
19 62 0.003992162 ubox
19 63 0.034496737 ubox
20 28 0.006294549 ubox
20 37 0.010881582 ubox
20 41 0.003624889 ubox
20 61 0.003694112 ubox
20 62 0.034501352 ubox
21 27 0.006166627 ubox
21 38 0.013823413 ubox
21 58 0.006653667 ubox
21 59 0.010415644 ubox
21 60 0.008252594 ubox
22 36 0.030605229 ubox
22 37 0.013436359 ubox
22 61 0.004328532 ubox
23 29 0.005407967 ubox
23 35 0.032517249 ubox
23 36 0.012862098 ubox
23 49 0.031976610 ubox
23 57 0.039480201 ubox
24 28 0.004711469 ubox
24 34 0.032923846 ubox
24 35 0.012197017 ubox
24 48 0.032017876 ubox
24 56 0.039539312 ubox
25 33 0.033147787 ubox
25 34 0.010846984 ubox
25 48 0.004256561 ubox
25 55 0.039554156 ubox
26 31 0.027184087 ubox
26 45 0.004811122 ubox
26 46 0.031818437 ubox
26 47 0.005420639 ubox
26 54 0.039529615 ubox
27 48 0.005594035 ubox
27 55 0.005851642 ubox
28 44 0.154209317 ubox
28 47 0.004087374 ubox
28 51 0.009506138 ubox
28 52 0.009556921 ubox
28 53 0.015642773 ubox
28 54 0.006129631 ubox
29 43 0.167302251 ubox
29 52 0.017743771 ubox
29 53 0.006591975 ubox
30 42 0.167385197 ubox
30 48 0.004632812 ubox
31 41 0.167400658 ubox
31 48 0.005617201 ubox
31 49 0.979856779 ubox
31 50 0.020235705 ubox
31 62 0.054291434 ubox
32 40 0.159782899 ubox
32 48 0.982632381 ubox
32 61 0.054517789 ubox
33 45 0.012751656 ubox
33 46 0.046531214 ubox
33 47 0.982455092 ubox
33 60 0.054541333 ubox
34 38 0.033437853 ubox
34 39 0.026015930 ubox
34 44 0.013240282 ubox
34 45 0.057941512 ubox
34 46 0.980503644 ubox
34 59 0.054132478 ubox
35 39 0.007351731 ubox
35 43 0.013910821 ubox
35 44 0.067711763 ubox
35 45 0.976388321 ubox
35 46 0.014477672 ubox
35 58 0.050431468 ubox
35 59 0.003601677 ubox
36 43 0.069079176 ubox
36 44 0.977178090 ubox
36 45 0.020274963 ubox
36 58 0.004686206 ubox
37 43 0.968505459 ubox
37 44 0.023305639 ubox
37 45 0.003713023 ubox
38 42 0.806377858 ubox
38 55 0.020226291 ubox
38 56 0.015454482 ubox
39 48 0.003812974 ubox
39 55 0.016295950 ubox
40 47 0.003958105 ubox
40 53 0.050867249 ubox
40 54 0.014878935 ubox
41 46 0.004071405 ubox
41 52 0.052925226 ubox
41 53 0.013217146 ubox
42 51 0.053373621 ubox
42 52 0.011120717 ubox
43 49 0.005393243 ubox
43 50 0.053297797 ubox
44 48 0.005854161 ubox
44 65 0.028321003 ubox
45 49 0.014426995 ubox
45 50 0.016256990 ubox
45 63 0.003350518 ubox
45 64 0.057437941 ubox
45 69 0.004404963 ubox
46 50 0.005127757 ubox
46 62 0.003364388 ubox
46 63 0.057649906 ubox
46 68 0.005270802 ubox
46 69 0.006588797 ubox
47 62 0.057604607 ubox
47 67 0.005055520 ubox
47 68 0.007634184 ubox
47 69 0.010924833 ubox
48 60 0.003604235 ubox
49 60 0.049686134 ubox
49 66 0.006033077 ubox
50 60 0.010779479 ubox
50 66 0.949910010 ubox
51 56 0.003994678 ubox
51 65 0.976747205 ubox
52 57 0.041499328 ubox
52 63 0.031190160 ubox
52 64 0.995168967 ubox
52 65 0.011344962 ubox
53 57 0.009675223 ubox
53 62 0.031989084 ubox
53 63 0.995248982 ubox
53 64 0.016921514 ubox
54 61 0.025374105 ubox
54 62 0.994218265 ubox
54 63 0.017147886 ubox
55 59 0.020238487 ubox
55 60 0.151692809 ubox
56 60 0.085916779 ubox
60 73 0.008913957 ubox
60 75 0.004227548 ubox
61 72 0.008258297 ubox
61 74 0.004197670 ubox
62 71 0.008260375 ubox
62 72 0.005651567 ubox
63 70 0.008239351 ubox
63 71 0.005681605 ubox
64 70 0.005692858 ubox
2 73 0.9500000 lbox
3 72 0.9500000 lbox
4 71 0.9500000 lbox
5 70 0.9500000 lbox
6 69 0.9500000 lbox
7 29 0.9500000 lbox
8 28 0.9500000 lbox
9 27 0.9500000 lbox
11 26 0.9500000 lbox
12 25 0.9500000 lbox
13 24 0.9500000 lbox
14 23 0.9500000 lbox
31 49 0.9500000 lbox
32 48 0.9500000 lbox
33 47 0.9500000 lbox
34 46 0.9500000 lbox
35 45 0.9500000 lbox
36 44 0.9500000 lbox
37 43 0.9500000 lbox
38 42 0.9500000 lbox
50 66 0.9500000 lbox
51 65 0.9500000 lbox
52 64 0.9500000 lbox
53 63 0.9500000 lbox
54 62 0.9500000 lbox
showpage
end
%%EOF
