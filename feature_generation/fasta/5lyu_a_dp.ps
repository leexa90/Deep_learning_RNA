%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5lyu_a)
} def

/sequence { (\
GGGGAUCUGUCACCCCAUUGAUCGCCUUCGGGCUGAUCUGGCUGGCUAGGCGGGUCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.029409408 ubox
1 16 0.339028356 ubox
1 26 0.007986797 ubox
1 57 0.014104502 ubox
2 14 0.029634142 ubox
2 15 0.339272699 ubox
2 16 0.012502329 ubox
2 25 0.007999513 ubox
2 56 0.012488869 ubox
2 57 0.060397942 ubox
3 13 0.029740431 ubox
3 14 0.339261082 ubox
3 15 0.012510785 ubox
3 55 0.007662701 ubox
3 56 0.043452848 ubox
3 57 0.927209131 ubox
4 11 0.025697201 ubox
4 13 0.338874322 ubox
4 14 0.012479048 ubox
4 23 0.008274652 ubox
4 55 0.004529335 ubox
4 56 0.938926025 ubox
5 10 0.024713461 ubox
5 22 0.008276619 ubox
5 55 0.939865593 ubox
6 12 0.034861635 ubox
6 21 0.008274013 ubox
6 54 0.939442117 ubox
7 20 0.008265559 ubox
7 53 0.940021620 ubox
8 12 0.004986879 ubox
8 52 0.939351225 ubox
9 18 0.004549204 ubox
9 22 0.006172171 ubox
9 46 0.012699477 ubox
9 51 0.939934367 ubox
10 17 0.004662508 ubox
10 21 0.006606183 ubox
10 45 0.013671352 ubox
10 48 0.003250959 ubox
10 49 0.006291505 ubox
10 50 0.939143838 ubox
11 20 0.006708945 ubox
11 44 0.017840986 ubox
11 45 0.010883500 ubox
11 49 0.934256410 ubox
11 50 0.021141277 ubox
12 19 0.006067507 ubox
12 43 0.018709796 ubox
12 47 0.313599904 ubox
13 41 0.004513901 ubox
13 44 0.021158689 ubox
13 45 0.709978190 ubox
13 49 0.013121726 ubox
13 50 0.009720691 ubox
14 40 0.004462742 ubox
14 41 0.011004092 ubox
14 44 0.706888448 ubox
14 45 0.170018125 ubox
14 49 0.010300195 ubox
15 40 0.010972116 ubox
15 41 0.661553389 ubox
15 44 0.166287631 ubox
15 45 0.587200279 ubox
16 40 0.665540554 ubox
16 41 0.049633351 ubox
16 44 0.588369688 ubox
16 45 0.005449927 ubox
17 39 0.616346269 ubox
17 43 0.573661066 ubox
17 55 0.011493544 ubox
18 40 0.190055509 ubox
18 41 0.274763150 ubox
18 54 0.011945412 ubox
19 36 0.003197435 ubox
19 40 0.223414760 ubox
19 41 0.103351247 ubox
19 53 0.006777046 ubox
19 54 0.004800918 ubox
20 37 0.004424020 ubox
20 38 0.947784911 ubox
20 39 0.024342059 ubox
20 55 0.018815190 ubox
20 56 0.279220104 ubox
20 57 0.010186846 ubox
21 37 0.950517402 ubox
21 39 0.008094595 ubox
21 55 0.278201148 ubox
22 35 0.009864168 ubox
22 36 0.950599012 ubox
22 53 0.187407471 ubox
22 54 0.226196651 ubox
23 35 0.950156294 ubox
23 52 0.261559196 ubox
23 53 0.160108571 ubox
24 33 0.929914879 ubox
24 34 0.199686185 ubox
24 51 0.306936243 ubox
25 31 0.016378980 ubox
25 32 0.951272728 ubox
25 50 0.307210369 ubox
26 30 0.019634576 ubox
26 31 0.950495454 ubox
26 32 0.015916643 ubox
26 49 0.307196059 ubox
27 31 0.014610479 ubox
27 48 0.303011085 ubox
28 41 0.003567351 ubox
28 45 0.097335781 ubox
28 48 0.006094147 ubox
29 40 0.003673971 ubox
29 44 0.110624815 ubox
29 45 0.277120097 ubox
30 39 0.003834577 ubox
30 43 0.109992261 ubox
30 46 0.006662422 ubox
30 47 0.005727212 ubox
30 57 0.008364257 ubox
31 38 0.003837754 ubox
31 42 0.109213139 ubox
31 43 0.285272783 ubox
31 46 0.005858751 ubox
31 47 0.015958779 ubox
31 56 0.008434332 ubox
32 42 0.286622549 ubox
32 46 0.016170085 ubox
32 55 0.008414003 ubox
33 40 0.108665245 ubox
33 41 0.286713113 ubox
33 44 0.005366305 ubox
33 45 0.016203759 ubox
33 54 0.008260314 ubox
34 40 0.279614022 ubox
34 44 0.015777711 ubox
34 53 0.008046579 ubox
35 39 0.130011925 ubox
35 42 0.007725580 ubox
35 43 0.011331799 ubox
35 51 0.003573289 ubox
35 56 0.031706379 ubox
36 55 0.031846502 ubox
37 50 0.008341893 ubox
37 54 0.031728057 ubox
38 49 0.008801333 ubox
38 53 0.031804178 ubox
38 54 0.004414177 ubox
39 48 0.012565435 ubox
39 52 0.031745527 ubox
39 53 0.008161099 ubox
40 47 0.012985580 ubox
40 51 0.031403830 ubox
40 55 0.003469985 ubox
40 56 0.137884099 ubox
40 57 0.030165994 ubox
41 46 0.012940211 ubox
41 51 0.011345667 ubox
41 55 0.140222948 ubox
41 56 0.030335619 ubox
42 49 0.031043858 ubox
42 50 0.012379626 ubox
42 53 0.005673000 ubox
42 54 0.143651275 ubox
43 48 0.029092451 ubox
43 49 0.012234106 ubox
43 52 0.006198565 ubox
43 53 0.143166283 ubox
44 51 0.006649397 ubox
44 56 0.003722769 ubox
45 51 0.143571937 ubox
45 55 0.003806655 ubox
46 50 0.142540339 ubox
46 54 0.003895768 ubox
47 53 0.003819480 ubox
3 57 0.9500000 lbox
4 56 0.9500000 lbox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
7 53 0.9500000 lbox
8 52 0.9500000 lbox
9 51 0.9500000 lbox
10 50 0.9500000 lbox
11 49 0.9500000 lbox
13 45 0.9500000 lbox
14 44 0.9500000 lbox
15 41 0.9500000 lbox
16 40 0.9500000 lbox
17 39 0.9500000 lbox
20 38 0.9500000 lbox
21 37 0.9500000 lbox
22 36 0.9500000 lbox
23 35 0.9500000 lbox
24 33 0.9500000 lbox
25 32 0.9500000 lbox
26 31 0.9500000 lbox
showpage
end
%%EOF
