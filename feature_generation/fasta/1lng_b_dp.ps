%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (1lng_b)
} def

/sequence { (\
CGGCGGUGGGGGAGCAUCUCCUGUAGGGGAGAUGUAACCCCCUUUACCUGCCGAACCCCGCCAGGCCCGGAAGGGAGCAACGGUAGGCAGGACGUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.007831718 ubox
1 6 0.024239228 ubox
1 8 0.004248783 ubox
1 53 0.284417253 ubox
1 94 0.057416834 ubox
2 7 0.007622534 ubox
2 42 0.007314213 ubox
2 43 0.013713305 ubox
2 44 0.010318817 ubox
2 45 0.024458092 ubox
2 47 0.010504958 ubox
2 48 0.011357187 ubox
2 52 0.290570937 ubox
2 93 0.059305085 ubox
2 95 0.010375118 ubox
2 96 0.874030189 ubox
3 41 0.005268756 ubox
3 42 0.014452795 ubox
3 43 0.007748714 ubox
3 44 0.025909932 ubox
3 45 0.054713911 ubox
3 47 0.013019409 ubox
3 51 0.290596654 ubox
3 88 0.003799984 ubox
3 93 0.012205949 ubox
3 95 0.905699793 ubox
3 96 0.024882751 ubox
4 50 0.290480127 ubox
4 87 0.003530528 ubox
4 90 0.003193544 ubox
4 91 0.007155460 ubox
4 94 0.908494406 ubox
5 42 0.029896416 ubox
5 43 0.200296460 ubox
5 44 0.047853701 ubox
5 45 0.070074207 ubox
5 47 0.007356163 ubox
5 48 0.268972647 ubox
5 49 0.109482189 ubox
5 93 0.889015685 ubox
5 96 0.006791631 ubox
6 41 0.025396875 ubox
6 42 0.334021248 ubox
6 43 0.124971085 ubox
6 44 0.157794247 ubox
6 45 0.088580197 ubox
6 47 0.273650236 ubox
6 48 0.098871584 ubox
6 88 0.004328055 ubox
6 93 0.116906987 ubox
6 95 0.005152455 ubox
7 46 0.274459428 ubox
7 89 0.004120961 ubox
7 90 0.005684411 ubox
7 91 0.017326959 ubox
7 92 0.155988421 ubox
8 40 0.020663375 ubox
8 41 0.506736702 ubox
8 42 0.850349753 ubox
8 43 0.103061313 ubox
8 44 0.009918971 ubox
8 45 0.054339487 ubox
8 47 0.007376575 ubox
9 39 0.019994706 ubox
9 40 0.509679561 ubox
9 41 0.852253450 ubox
9 42 0.115088476 ubox
9 43 0.007441185 ubox
9 44 0.009098333 ubox
10 38 0.019285065 ubox
10 39 0.510272917 ubox
10 40 0.851983762 ubox
10 41 0.114955747 ubox
10 42 0.008573426 ubox
10 43 0.005904149 ubox
11 38 0.510841287 ubox
11 39 0.851687046 ubox
11 40 0.114706162 ubox
11 41 0.008494323 ubox
11 42 0.005867269 ubox
12 38 0.851164419 ubox
12 39 0.114394583 ubox
12 40 0.008399160 ubox
12 41 0.005835921 ubox
13 35 0.017818694 ubox
14 35 0.994042922 ubox
14 38 0.008806856 ubox
15 34 0.999929366 ubox
16 33 0.999591595 ubox
17 32 0.999747751 ubox
18 31 0.999980897 ubox
19 29 0.007728961 ubox
19 30 0.999815834 ubox
20 28 0.017849667 ubox
20 29 0.999825403 ubox
21 27 0.023980322 ubox
21 28 0.999613300 ubox
22 26 0.025983846 ubox
22 27 0.980597833 ubox
22 28 0.004037759 ubox
41 91 0.032147482 ubox
42 90 0.042160335 ubox
42 91 0.050288858 ubox
42 94 0.006382759 ubox
43 89 0.041955126 ubox
43 90 0.050038153 ubox
43 91 0.062410169 ubox
43 92 0.030440085 ubox
43 94 0.010430221 ubox
44 89 0.044834306 ubox
44 90 0.075877427 ubox
44 91 0.023866479 ubox
44 92 0.033042015 ubox
44 94 0.021398690 ubox
45 89 0.076847537 ubox
45 90 0.021267849 ubox
45 91 0.015493333 ubox
45 92 0.140634993 ubox
45 94 0.010446487 ubox
46 95 0.006731680 ubox
47 65 0.004345533 ubox
47 87 0.154100970 ubox
47 90 0.004631654 ubox
47 91 0.939476156 ubox
47 94 0.003822642 ubox
48 64 0.004368992 ubox
48 86 0.154610484 ubox
48 90 0.944055399 ubox
48 91 0.004867116 ubox
49 63 0.004368161 ubox
49 85 0.154569307 ubox
49 89 0.943985567 ubox
50 62 0.004291900 ubox
50 84 0.154611954 ubox
50 88 0.944231408 ubox
51 83 0.154662207 ubox
51 87 0.944200887 ubox
51 91 0.003268969 ubox
52 60 0.004260275 ubox
52 82 0.154667006 ubox
52 86 0.943864865 ubox
52 87 0.006878370 ubox
52 90 0.003294070 ubox
53 57 0.007662710 ubox
53 58 0.008044539 ubox
53 59 0.010692394 ubox
53 78 0.036085654 ubox
53 81 0.151759715 ubox
53 84 0.036351054 ubox
53 88 0.004081325 ubox
53 93 0.009934592 ubox
53 96 0.015867080 ubox
54 84 0.141354194 ubox
54 95 0.018384401 ubox
55 84 0.628365989 ubox
55 95 0.058097474 ubox
56 65 0.019962088 ubox
56 74 0.004535048 ubox
56 75 0.112066152 ubox
56 77 0.088681094 ubox
56 82 0.043931233 ubox
56 83 0.636856111 ubox
56 86 0.008456110 ubox
56 87 0.058268151 ubox
56 90 0.022675709 ubox
56 91 0.083391364 ubox
56 94 0.061187442 ubox
57 64 0.020110859 ubox
57 65 0.013575986 ubox
57 73 0.004497108 ubox
57 74 0.112273336 ubox
57 75 0.112705973 ubox
57 77 0.008503410 ubox
57 82 0.630656514 ubox
57 83 0.137100756 ubox
57 86 0.058087108 ubox
57 87 0.089317126 ubox
57 90 0.082641075 ubox
57 91 0.218338597 ubox
57 94 0.007458598 ubox
58 64 0.020033697 ubox
58 65 0.274876853 ubox
58 70 0.012398025 ubox
58 73 0.112147565 ubox
58 74 0.114201299 ubox
58 75 0.015759290 ubox
58 77 0.007711407 ubox
58 82 0.131555230 ubox
58 83 0.680511414 ubox
58 86 0.090684517 ubox
58 87 0.080841580 ubox
58 90 0.218784193 ubox
58 91 0.110136384 ubox
59 64 0.278727638 ubox
59 65 0.019119727 ubox
59 69 0.012648695 ubox
59 73 0.114174348 ubox
59 74 0.015695057 ubox
59 77 0.005755205 ubox
59 82 0.686889117 ubox
59 83 0.006237500 ubox
59 86 0.081434998 ubox
59 87 0.005035241 ubox
59 90 0.110434480 ubox
59 94 0.023772800 ubox
60 66 0.010341487 ubox
60 68 0.012121634 ubox
60 78 0.424958528 ubox
60 81 0.697170518 ubox
60 84 0.128165138 ubox
60 88 0.248012968 ubox
60 93 0.024328667 ubox
61 65 0.011719722 ubox
61 70 0.158984931 ubox
61 74 0.007793695 ubox
61 75 0.007151807 ubox
61 77 0.418294886 ubox
61 82 0.007700483 ubox
61 83 0.133272461 ubox
61 87 0.248332430 ubox
61 91 0.024548235 ubox
62 69 0.159123200 ubox
62 70 0.010401217 ubox
62 73 0.007842321 ubox
62 74 0.007139880 ubox
62 75 0.025375769 ubox
62 77 0.141591151 ubox
62 82 0.132978476 ubox
62 83 0.006250875 ubox
62 86 0.248002409 ubox
62 90 0.024538684 ubox
62 91 0.006002432 ubox
63 84 0.039052469 ubox
64 68 0.017075987 ubox
64 78 0.157322244 ubox
64 81 0.029549805 ubox
64 84 0.022235874 ubox
64 88 0.008380735 ubox
65 78 0.326753338 ubox
65 81 0.029560291 ubox
65 84 0.194578757 ubox
65 88 0.022443721 ubox
66 70 0.004470390 ubox
66 73 0.005301409 ubox
66 74 0.040132975 ubox
66 75 0.902625927 ubox
66 77 0.324099025 ubox
66 82 0.008150375 ubox
66 83 0.172108356 ubox
66 86 0.008105944 ubox
66 87 0.022378592 ubox
67 73 0.039715204 ubox
67 74 0.905325681 ubox
67 75 0.322812651 ubox
67 82 0.144977833 ubox
67 83 0.131283620 ubox
67 86 0.018541602 ubox
68 73 0.905213717 ubox
68 74 0.322689887 ubox
68 75 0.037086786 ubox
68 77 0.027504587 ubox
68 82 0.160438040 ubox
68 83 0.005282992 ubox
69 78 0.072735615 ubox
69 81 0.184208096 ubox
69 84 0.006195399 ubox
70 78 0.029443330 ubox
70 81 0.019367144 ubox
70 84 0.003828545 ubox
73 78 0.095450491 ubox
73 81 0.018184373 ubox
74 78 0.018789730 ubox
74 81 0.022334045 ubox
75 81 0.007595125 ubox
76 84 0.007633280 ubox
77 81 0.024694976 ubox
77 84 0.027400803 ubox
77 88 0.018144943 ubox
78 82 0.004999582 ubox
78 83 0.027724227 ubox
78 87 0.018148010 ubox
79 84 0.004892547 ubox
80 84 0.003631288 ubox
80 95 0.016376674 ubox
81 86 0.005688248 ubox
81 90 0.003175879 ubox
81 94 0.017357107 ubox
82 93 0.017310593 ubox
84 91 0.003450836 ubox
86 93 0.010603879 ubox
86 96 0.035370627 ubox
87 93 0.004331513 ubox
87 95 0.037158986 ubox
88 94 0.038413005 ubox
89 95 0.003215653 ubox
90 95 0.003793703 ubox
90 96 0.006349149 ubox
91 95 0.004310841 ubox
91 96 0.004795697 ubox
2 96 0.9500000 lbox
3 95 0.9500000 lbox
4 94 0.9500000 lbox
5 93 0.9500000 lbox
8 42 0.9500000 lbox
9 41 0.9500000 lbox
10 40 0.9500000 lbox
11 39 0.9500000 lbox
12 38 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
17 32 0.9500000 lbox
18 31 0.9500000 lbox
19 30 0.9500000 lbox
20 29 0.9500000 lbox
21 28 0.9500000 lbox
22 27 0.9500000 lbox
47 91 0.9500000 lbox
48 90 0.9500000 lbox
49 89 0.9500000 lbox
50 88 0.9500000 lbox
51 87 0.9500000 lbox
52 86 0.9500000 lbox
58 83 0.9500000 lbox
59 82 0.9500000 lbox
60 81 0.9500000 lbox
66 75 0.9500000 lbox
67 74 0.9500000 lbox
68 73 0.9500000 lbox
showpage
end
%%EOF
