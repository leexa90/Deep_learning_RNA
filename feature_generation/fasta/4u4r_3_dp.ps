%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4u4r_3)
} def

/sequence { (\
GGUUGCGGCCAUAUCUACCAGAAAGCACCGUUUCCCGUCCGAUCAACUGUAGUUAAGCUGGUAAGAGCCUGACCGAGUAGUGUAGUGGGUGACCAUACGCGAAACUCAGGUGCUGCAAUCU\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 74 0.007672458 ubox
1 119 0.003977305 ubox
1 120 0.989350445 ubox
1 121 0.037463951 ubox
2 73 0.007678299 ubox
2 119 0.997180271 ubox
2 120 0.043544502 ubox
3 72 0.007662002 ubox
3 118 0.998881340 ubox
4 71 0.007583245 ubox
4 117 0.999349174 ubox
5 70 0.006960455 ubox
5 116 0.999953984 ubox
6 115 0.999930290 ubox
7 19 0.006958529 ubox
7 69 0.058431598 ubox
7 114 0.997385571 ubox
8 18 0.006943932 ubox
8 68 0.058645180 ubox
8 111 0.003967327 ubox
8 113 0.998061387 ubox
9 67 0.058546842 ubox
9 71 0.013656391 ubox
9 110 0.006661275 ubox
9 112 0.991428415 ubox
10 57 0.003642682 ubox
10 65 0.016717502 ubox
10 67 0.031763368 ubox
10 71 0.536509619 ubox
10 109 0.008755432 ubox
10 110 0.048235132 ubox
10 112 0.081065005 ubox
11 16 0.003874281 ubox
11 70 0.518813620 ubox
11 111 0.064002532 ubox
12 55 0.011284279 ubox
12 63 0.004742823 ubox
12 64 0.016695796 ubox
12 65 0.012611113 ubox
12 66 0.022991926 ubox
12 67 0.036427031 ubox
12 71 0.019304275 ubox
12 108 0.006292337 ubox
12 109 0.005902121 ubox
12 110 0.041552844 ubox
13 43 0.011665788 ubox
13 54 0.011516472 ubox
13 62 0.003175667 ubox
13 70 0.022870636 ubox
13 111 0.017198933 ubox
14 22 0.010833940 ubox
14 42 0.012773596 ubox
14 63 0.005188153 ubox
14 64 0.030018026 ubox
14 65 0.044532511 ubox
14 66 0.890696473 ubox
14 67 0.019037205 ubox
14 72 0.003996647 ubox
14 110 0.016054675 ubox
15 21 0.011574455 ubox
15 41 0.012988807 ubox
15 52 0.016283750 ubox
15 65 0.931634131 ubox
15 67 0.020547743 ubox
15 71 0.007616356 ubox
15 109 0.016160108 ubox
16 20 0.010438814 ubox
16 51 0.016569875 ubox
16 63 0.739446256 ubox
16 64 0.658402138 ubox
16 65 0.006103117 ubox
16 66 0.016570255 ubox
16 108 0.013295217 ubox
17 38 0.015028426 ubox
17 50 0.016573617 ubox
17 62 0.995772037 ubox
17 111 0.011080480 ubox
18 37 0.015971615 ubox
18 49 0.014217615 ubox
18 61 0.999288544 ubox
18 110 0.011202272 ubox
19 37 0.003848576 ubox
19 49 0.009311537 ubox
19 60 0.999299758 ubox
19 71 0.006305114 ubox
19 109 0.011189707 ubox
20 48 0.012583845 ubox
20 59 0.998857173 ubox
20 70 0.006314230 ubox
21 34 0.028876095 ubox
21 35 0.004181420 ubox
21 44 0.011239553 ubox
21 47 0.012243653 ubox
21 54 0.010566455 ubox
21 58 0.996529876 ubox
21 69 0.006252814 ubox
22 33 0.029996071 ubox
22 43 0.011446253 ubox
22 53 0.031284873 ubox
22 54 0.030750782 ubox
23 32 0.030048779 ubox
23 33 0.019280214 ubox
23 53 0.026153832 ubox
23 54 0.244727406 ubox
24 31 0.028929877 ubox
24 32 0.022194360 ubox
24 48 0.008754616 ubox
24 53 0.263430860 ubox
24 54 0.635393015 ubox
24 59 0.008067271 ubox
24 114 0.009246461 ubox
25 29 0.004293802 ubox
25 31 0.023322646 ubox
25 38 0.007266978 ubox
25 39 0.007413950 ubox
25 40 0.017836960 ubox
25 44 0.003927509 ubox
25 47 0.008782343 ubox
25 50 0.093143483 ubox
25 53 0.935570352 ubox
25 54 0.064692807 ubox
25 58 0.011209792 ubox
25 68 0.003693822 ubox
25 113 0.009840760 ubox
26 30 0.023481870 ubox
26 37 0.007632102 ubox
26 41 0.006423521 ubox
26 49 0.095097283 ubox
26 52 0.946235710 ubox
26 57 0.011891263 ubox
26 67 0.003703073 ubox
26 112 0.009947648 ubox
27 38 0.024448812 ubox
27 43 0.004672814 ubox
27 48 0.090365332 ubox
27 50 0.968831951 ubox
27 53 0.033211849 ubox
27 54 0.003239875 ubox
27 62 0.004639643 ubox
27 111 0.010178997 ubox
28 37 0.024585426 ubox
28 41 0.005839672 ubox
28 49 0.972456548 ubox
28 52 0.033820632 ubox
28 61 0.004772932 ubox
28 110 0.010193936 ubox
29 37 0.032294406 ubox
29 41 0.024755079 ubox
29 49 0.144334608 ubox
29 52 0.009494968 ubox
29 60 0.004771118 ubox
29 109 0.010180411 ubox
30 35 0.012855799 ubox
30 36 0.032644859 ubox
30 39 0.010114704 ubox
30 40 0.024240909 ubox
30 43 0.023122624 ubox
30 44 0.024047168 ubox
30 47 0.982581245 ubox
30 48 0.064035653 ubox
30 50 0.006386900 ubox
30 58 0.005892519 ubox
30 105 0.007454234 ubox
31 42 0.025942940 ubox
31 45 0.035595869 ubox
31 46 0.977874302 ubox
31 49 0.005511068 ubox
31 51 0.003360577 ubox
31 57 0.006355155 ubox
31 104 0.007473254 ubox
32 37 0.005661745 ubox
32 41 0.027685482 ubox
32 42 0.033727730 ubox
32 45 0.881104699 ubox
32 46 0.040297257 ubox
32 49 0.004315178 ubox
32 51 0.003356858 ubox
32 56 0.006342583 ubox
32 103 0.007481225 ubox
33 37 0.007185152 ubox
33 41 0.036530492 ubox
33 42 0.818074653 ubox
33 45 0.041476445 ubox
33 46 0.005451569 ubox
33 51 0.003566698 ubox
33 55 0.006137472 ubox
33 102 0.007485440 ubox
34 41 0.840187535 ubox
34 49 0.004083334 ubox
34 101 0.007461167 ubox
35 41 0.135992731 ubox
35 49 0.007048877 ubox
36 41 0.314773870 ubox
36 49 0.004486436 ubox
36 52 0.006224859 ubox
36 99 0.003722122 ubox
37 43 0.035009131 ubox
37 44 0.124587148 ubox
37 47 0.016530785 ubox
37 48 0.003198699 ubox
37 58 0.005707248 ubox
37 68 0.004005380 ubox
37 98 0.003698004 ubox
38 42 0.034218363 ubox
38 45 0.006772439 ubox
38 46 0.016070908 ubox
38 51 0.003863252 ubox
38 57 0.005644758 ubox
38 66 0.010304494 ubox
38 97 0.003456296 ubox
39 49 0.004023930 ubox
39 65 0.011301331 ubox
40 49 0.013193412 ubox
40 52 0.004205764 ubox
40 57 0.003848179 ubox
41 47 0.007954002 ubox
41 48 0.011261504 ubox
41 54 0.010119455 ubox
41 58 0.003670200 ubox
42 50 0.005072709 ubox
42 53 0.010620655 ubox
42 62 0.012925508 ubox
43 49 0.004799599 ubox
43 52 0.010410728 ubox
43 55 0.003237398 ubox
43 56 0.005576840 ubox
43 61 0.013029838 ubox
44 49 0.007627628 ubox
44 52 0.004281179 ubox
44 60 0.013136820 ubox
45 54 0.025544500 ubox
45 59 0.013000440 ubox
46 53 0.027932976 ubox
46 78 0.006633434 ubox
47 52 0.028086516 ubox
47 57 0.025120576 ubox
47 77 0.006878185 ubox
48 55 0.006635591 ubox
48 56 0.025071955 ubox
48 76 0.006750731 ubox
49 54 0.007164061 ubox
49 58 0.008150221 ubox
49 74 0.003281004 ubox
50 57 0.008155495 ubox
51 59 0.006871122 ubox
52 58 0.007786702 ubox
52 73 0.022960556 ubox
53 57 0.007370297 ubox
53 72 0.023317419 ubox
54 71 0.024196600 ubox
55 70 0.023647377 ubox
56 70 0.004356018 ubox
57 68 0.029914537 ubox
57 69 0.003260122 ubox
58 67 0.030137228 ubox
58 71 0.008056122 ubox
59 66 0.029943082 ubox
60 69 0.014586703 ubox
61 68 0.014665331 ubox
62 67 0.014236647 ubox
63 70 0.003442563 ubox
64 70 0.043911740 ubox
64 114 0.008117971 ubox
65 69 0.044301980 ubox
65 70 0.006151936 ubox
65 74 0.006678704 ubox
65 113 0.008719391 ubox
66 70 0.007172980 ubox
66 111 0.022661149 ubox
66 114 0.006749848 ubox
67 73 0.006783290 ubox
67 74 0.007667997 ubox
67 111 0.673691423 ubox
67 113 0.008332328 ubox
68 110 0.709617605 ubox
68 112 0.008652795 ubox
69 109 0.710534453 ubox
69 110 0.003473558 ubox
70 108 0.709815429 ubox
70 109 0.003209785 ubox
70 112 0.004782848 ubox
71 107 0.681520052 ubox
71 111 0.018875588 ubox
71 113 0.024719941 ubox
72 78 0.008804175 ubox
72 106 0.646990091 ubox
72 111 0.679612430 ubox
73 77 0.010490340 ubox
73 101 0.010243748 ubox
73 109 0.046048869 ubox
73 110 0.698197519 ubox
74 101 0.016253201 ubox
74 109 0.698134962 ubox
74 110 0.003393904 ubox
75 100 0.012606635 ubox
75 105 0.261849641 ubox
75 106 0.012933362 ubox
75 107 0.728232280 ubox
76 106 0.747526939 ubox
77 98 0.010796622 ubox
77 100 0.028160600 ubox
77 105 0.773823420 ubox
77 106 0.003382872 ubox
77 107 0.003690295 ubox
78 97 0.010810487 ubox
78 99 0.026156752 ubox
78 101 0.079381292 ubox
78 102 0.161450195 ubox
78 103 0.100239105 ubox
78 104 0.731881596 ubox
79 96 0.007798125 ubox
80 98 0.027299404 ubox
80 100 0.996763984 ubox
80 105 0.003389491 ubox
81 97 0.027212932 ubox
81 99 0.996982701 ubox
81 101 0.057540074 ubox
81 104 0.003215445 ubox
82 93 0.003319228 ubox
82 96 0.021208546 ubox
82 98 0.997504399 ubox
82 100 0.060252644 ubox
83 92 0.003264760 ubox
83 95 0.017176128 ubox
83 97 0.992435905 ubox
83 99 0.059186561 ubox
84 96 0.717783859 ubox
85 93 0.019479273 ubox
85 94 0.013878949 ubox
85 96 0.686672059 ubox
85 98 0.009212730 ubox
86 92 0.019588898 ubox
86 95 0.970331224 ubox
86 97 0.008164134 ubox
87 93 0.025765573 ubox
87 94 0.999090377 ubox
87 96 0.006576371 ubox
88 93 0.998516443 ubox
88 94 0.018648263 ubox
89 93 0.019702895 ubox
101 105 0.007351103 ubox
108 121 0.006263482 ubox
109 120 0.006952129 ubox
110 119 0.006957476 ubox
111 118 0.006914778 ubox
1 120 0.9500000 lbox
2 119 0.9500000 lbox
3 118 0.9500000 lbox
4 117 0.9500000 lbox
5 116 0.9500000 lbox
6 115 0.9500000 lbox
7 114 0.9500000 lbox
8 113 0.9500000 lbox
9 112 0.9500000 lbox
10 71 0.9500000 lbox
11 70 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 62 0.9500000 lbox
18 61 0.9500000 lbox
19 60 0.9500000 lbox
20 59 0.9500000 lbox
21 58 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
30 47 0.9500000 lbox
31 46 0.9500000 lbox
32 45 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
72 111 0.9500000 lbox
73 110 0.9500000 lbox
74 109 0.9500000 lbox
75 107 0.9500000 lbox
76 106 0.9500000 lbox
77 105 0.9500000 lbox
78 104 0.9500000 lbox
80 100 0.9500000 lbox
81 99 0.9500000 lbox
82 98 0.9500000 lbox
83 97 0.9500000 lbox
84 96 0.9500000 lbox
86 95 0.9500000 lbox
87 94 0.9500000 lbox
88 93 0.9500000 lbox
showpage
end
%%EOF
