%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:28 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (3d2v_a)
} def

/sequence { (\
GGGACCAGGGGUGCUUGUUCACAGGCUGAGAAAGUCCCUUUGAACCUGAACAGGGUAAUGCCUGCGCAGGGAGUGUC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.008454566 ubox
1 6 0.014470910 ubox
1 15 0.011647303 ubox
1 22 0.006914658 ubox
1 37 0.004311716 ubox
1 38 0.906150845 ubox
1 39 0.007718828 ubox
1 46 0.014151871 ubox
1 47 0.015352221 ubox
1 76 0.004239004 ubox
1 77 0.139254488 ubox
2 6 0.003954475 ubox
2 14 0.013420317 ubox
2 15 0.003551177 ubox
2 20 0.009327387 ubox
2 36 0.003717689 ubox
2 37 0.907919989 ubox
2 38 0.007421867 ubox
2 41 0.003905100 ubox
2 45 0.016195428 ubox
2 46 0.017507666 ubox
2 74 0.003486231 ubox
2 76 0.146064978 ubox
2 77 0.016860939 ubox
3 14 0.003613993 ubox
3 19 0.009425835 ubox
3 20 0.006653466 ubox
3 36 0.907938732 ubox
3 37 0.005567143 ubox
3 40 0.003746483 ubox
3 41 0.007580451 ubox
3 45 0.018351435 ubox
3 74 0.004763017 ubox
3 76 0.014263941 ubox
3 77 0.143037774 ubox
4 12 0.018861612 ubox
4 18 0.009472552 ubox
4 19 0.006629317 ubox
4 35 0.907568958 ubox
4 40 0.007114974 ubox
4 41 0.007141264 ubox
4 74 0.152864587 ubox
4 76 0.144989730 ubox
5 11 0.020046335 ubox
5 17 0.007615829 ubox
5 30 0.008151547 ubox
5 34 0.903764407 ubox
5 42 0.069043786 ubox
5 71 0.010284740 ubox
5 73 0.152818935 ubox
5 75 0.144597805 ubox
6 10 0.021098989 ubox
6 11 0.012278027 ubox
6 13 0.003259300 ubox
6 17 0.035032942 ubox
6 28 0.077330360 ubox
6 30 0.029884287 ubox
6 34 0.028114812 ubox
6 42 0.390707808 ubox
6 70 0.003576640 ubox
6 71 0.039155031 ubox
6 73 0.045847558 ubox
6 75 0.007442777 ubox
7 12 0.006316809 ubox
7 15 0.005241088 ubox
7 16 0.035637670 ubox
7 27 0.077257484 ubox
7 39 0.035778709 ubox
7 40 0.137053156 ubox
7 41 0.385385372 ubox
7 74 0.006764871 ubox
8 14 0.005441934 ubox
8 15 0.035693858 ubox
8 26 0.070144499 ubox
8 27 0.009667466 ubox
8 38 0.038743679 ubox
8 39 0.168775379 ubox
8 40 0.378245712 ubox
9 14 0.035688688 ubox
9 26 0.007175649 ubox
9 27 0.020447934 ubox
9 37 0.038636001 ubox
9 38 0.184328446 ubox
9 39 0.373254009 ubox
10 26 0.011313247 ubox
10 27 0.032699544 ubox
10 36 0.038405970 ubox
10 37 0.184503331 ubox
10 38 0.373651005 ubox
11 22 0.067129395 ubox
11 26 0.020824329 ubox
11 27 0.137851836 ubox
11 35 0.020724843 ubox
11 36 0.184515990 ubox
11 37 0.373264669 ubox
12 21 0.067308914 ubox
12 23 0.012072809 ubox
12 24 0.003542462 ubox
12 25 0.015529718 ubox
12 28 0.067094886 ubox
12 29 0.025341244 ubox
12 30 0.010623852 ubox
12 31 0.005756647 ubox
12 32 0.003284349 ubox
12 33 0.005680061 ubox
12 34 0.011675736 ubox
13 20 0.066659260 ubox
13 22 0.012493030 ubox
13 26 0.904072250 ubox
13 27 0.009337188 ubox
13 35 0.406222122 ubox
13 36 0.061204692 ubox
14 24 0.009474791 ubox
14 25 0.904997717 ubox
14 30 0.006607205 ubox
14 34 0.417333619 ubox
15 23 0.008207238 ubox
15 24 0.904188937 ubox
15 29 0.006615600 ubox
15 32 0.012663074 ubox
15 33 0.415933682 ubox
16 21 0.003173039 ubox
16 23 0.902709689 ubox
16 28 0.006214636 ubox
16 31 0.017404901 ubox
16 32 0.397476477 ubox
16 33 0.005792858 ubox
17 22 0.897946165 ubox
17 26 0.011227970 ubox
17 45 0.006703048 ubox
18 25 0.011067055 ubox
18 29 0.013338898 ubox
18 30 0.334125054 ubox
18 31 0.011285875 ubox
18 32 0.025079754 ubox
18 44 0.013658055 ubox
19 24 0.008704673 ubox
19 28 0.011238518 ubox
19 29 0.414568915 ubox
19 30 0.007664319 ubox
19 31 0.034456050 ubox
19 43 0.015809798 ubox
20 24 0.003193699 ubox
20 25 0.004204221 ubox
20 28 0.416067255 ubox
20 30 0.034972239 ubox
20 42 0.016037574 ubox
21 27 0.385014410 ubox
21 41 0.015826312 ubox
22 28 0.030483601 ubox
23 27 0.025022050 ubox
23 39 0.014362830 ubox
24 36 0.013387805 ubox
24 37 0.006574458 ubox
24 38 0.014266306 ubox
25 35 0.014112467 ubox
25 36 0.007190794 ubox
25 37 0.013509174 ubox
26 34 0.018443365 ubox
27 32 0.009555609 ubox
27 33 0.020368982 ubox
28 36 0.012789482 ubox
29 35 0.012759083 ubox
30 36 0.004772465 ubox
31 35 0.004182597 ubox
38 73 0.018886392 ubox
38 75 0.007177332 ubox
39 43 0.011042569 ubox
39 44 0.012982688 ubox
39 71 0.009382430 ubox
39 72 0.042176779 ubox
39 73 0.074067985 ubox
39 75 0.067017679 ubox
40 44 0.008728082 ubox
40 71 0.043596212 ubox
40 72 0.089108590 ubox
40 73 0.044942009 ubox
40 75 0.083972259 ubox
41 70 0.004587251 ubox
41 71 0.089588788 ubox
41 72 0.049296000 ubox
41 73 0.122160889 ubox
41 75 0.052894827 ubox
42 74 0.067575528 ubox
42 76 0.025226549 ubox
42 77 0.032012630 ubox
43 74 0.040805859 ubox
43 76 0.029772165 ubox
44 56 0.003828080 ubox
44 74 0.027255675 ubox
44 76 0.009660610 ubox
45 55 0.003978844 ubox
45 69 0.003277353 ubox
45 70 0.996342796 ubox
45 71 0.048809360 ubox
45 73 0.014900446 ubox
45 75 0.005552610 ubox
46 54 0.003978071 ubox
46 69 0.998940652 ubox
46 70 0.038613803 ubox
46 71 0.003302751 ubox
47 53 0.003929652 ubox
47 68 0.999257110 ubox
47 69 0.023690691 ubox
48 67 0.999521678 ubox
51 64 0.998401019 ubox
51 66 0.003740112 ubox
52 63 0.998524352 ubox
53 62 0.997932562 ubox
53 63 0.048024405 ubox
54 61 0.996437672 ubox
54 62 0.063802254 ubox
55 59 0.017348613 ubox
55 61 0.076082654 ubox
56 60 0.081061946 ubox
64 76 0.005052489 ubox
65 75 0.013152872 ubox
66 74 0.013305048 ubox
66 76 0.007074336 ubox
67 73 0.013313207 ubox
67 75 0.007426735 ubox
68 74 0.007291940 ubox
70 77 0.004031120 ubox
71 76 0.015429440 ubox
71 77 0.064600487 ubox
72 76 0.056970613 ubox
73 77 0.014020188 ubox
1 38 0.9500000 lbox
2 37 0.9500000 lbox
3 36 0.9500000 lbox
4 35 0.9500000 lbox
5 34 0.9500000 lbox
13 26 0.9500000 lbox
14 25 0.9500000 lbox
15 24 0.9500000 lbox
16 23 0.9500000 lbox
17 22 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
51 64 0.9500000 lbox
52 63 0.9500000 lbox
53 62 0.9500000 lbox
54 61 0.9500000 lbox
showpage
end
%%EOF
