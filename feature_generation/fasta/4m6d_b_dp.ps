%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:39 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4m6d_b)
} def

/sequence { (\
GCGGCUAAAGAGUGCAGAGUUACUUAGUUCACUGCAGACGC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.011389350 ubox
1 6 0.005058217 ubox
1 13 0.026122439 ubox
1 15 0.062359876 ubox
1 20 0.004190820 ubox
1 30 0.029232076 ubox
1 32 0.026747257 ubox
1 35 0.713166776 ubox
1 39 0.014872795 ubox
1 41 0.578689660 ubox
2 10 0.026565149 ubox
2 12 0.030827748 ubox
2 14 0.062294372 ubox
2 17 0.011590269 ubox
2 19 0.004586763 ubox
2 34 0.713685645 ubox
2 37 0.016765149 ubox
2 40 0.585559036 ubox
3 13 0.045760406 ubox
3 15 0.003225627 ubox
3 21 0.003980766 ubox
3 28 0.003245471 ubox
3 29 0.102731053 ubox
3 30 0.042088400 ubox
3 32 0.046801034 ubox
3 33 0.704977456 ubox
3 39 0.581134182 ubox
3 41 0.008730624 ubox
4 13 0.159187598 ubox
4 15 0.037846582 ubox
4 20 0.005273130 ubox
4 28 0.172760325 ubox
4 29 0.031119885 ubox
4 30 0.016670868 ubox
4 32 0.693161348 ubox
4 35 0.049095540 ubox
4 39 0.023861881 ubox
4 41 0.094741786 ubox
5 10 0.029794330 ubox
5 12 0.187217559 ubox
5 14 0.038207104 ubox
5 19 0.005768222 ubox
5 27 0.260914064 ubox
5 34 0.049104293 ubox
5 37 0.313891009 ubox
5 40 0.095895933 ubox
6 10 0.007220365 ubox
6 11 0.178519819 ubox
6 12 0.008338560 ubox
6 18 0.005619537 ubox
6 26 0.260052215 ubox
6 27 0.015802133 ubox
6 31 0.114675232 ubox
6 34 0.005435002 ubox
6 36 0.277528473 ubox
6 37 0.041964232 ubox
6 38 0.016714348 ubox
6 40 0.006801335 ubox
7 13 0.004947534 ubox
7 24 0.005609811 ubox
7 25 0.208355117 ubox
7 28 0.218938253 ubox
7 29 0.358445978 ubox
7 33 0.008735150 ubox
8 13 0.006172883 ubox
8 21 0.003315642 ubox
8 24 0.134976209 ubox
8 25 0.039398041 ubox
8 28 0.341478461 ubox
8 29 0.116479855 ubox
8 33 0.007673164 ubox
9 13 0.003903414 ubox
9 20 0.004488415 ubox
9 21 0.006531794 ubox
9 24 0.052227806 ubox
9 25 0.022211817 ubox
9 28 0.113792920 ubox
9 29 0.020441020 ubox
9 33 0.132797107 ubox
10 15 0.004416451 ubox
10 20 0.006088123 ubox
10 21 0.078309973 ubox
10 23 0.061596090 ubox
10 24 0.018610922 ubox
10 25 0.657376934 ubox
10 28 0.011583556 ubox
10 29 0.023939039 ubox
10 30 0.030041526 ubox
10 32 0.131634495 ubox
10 33 0.017566797 ubox
10 35 0.058873621 ubox
10 39 0.299380534 ubox
10 41 0.032365607 ubox
11 20 0.082690434 ubox
11 21 0.049380485 ubox
11 24 0.699644673 ubox
11 25 0.045878520 ubox
11 28 0.025873537 ubox
11 29 0.029571563 ubox
11 33 0.223226294 ubox
12 20 0.043399774 ubox
12 21 0.026120482 ubox
12 23 0.710160848 ubox
12 24 0.014819153 ubox
12 25 0.006292255 ubox
12 28 0.024979176 ubox
12 29 0.003313504 ubox
12 30 0.105196774 ubox
12 32 0.225708363 ubox
12 35 0.009561537 ubox
12 39 0.046608283 ubox
12 41 0.010538428 ubox
13 17 0.003356907 ubox
13 18 0.081477719 ubox
13 19 0.029041754 ubox
13 22 0.707315925 ubox
13 26 0.028551374 ubox
13 27 0.017651527 ubox
13 31 0.225732756 ubox
13 34 0.009298409 ubox
13 36 0.584664271 ubox
13 37 0.006863494 ubox
13 38 0.033301221 ubox
13 40 0.009060461 ubox
14 20 0.190287297 ubox
14 21 0.629541018 ubox
14 23 0.017762063 ubox
14 25 0.028063307 ubox
14 28 0.126236308 ubox
14 29 0.004071855 ubox
14 30 0.221697895 ubox
14 33 0.006487315 ubox
14 35 0.635725311 ubox
14 39 0.005015191 ubox
15 19 0.260845093 ubox
15 27 0.134316047 ubox
15 34 0.635815290 ubox
15 37 0.004170411 ubox
16 20 0.045613783 ubox
16 21 0.015017960 ubox
16 24 0.067895521 ubox
16 25 0.048717940 ubox
16 28 0.101127730 ubox
16 29 0.077217693 ubox
16 33 0.633705921 ubox
17 21 0.005448421 ubox
17 23 0.071921609 ubox
17 24 0.043412688 ubox
17 25 0.083008180 ubox
17 28 0.066508635 ubox
17 29 0.118639643 ubox
17 30 0.107763156 ubox
17 32 0.623473186 ubox
17 35 0.012160386 ubox
17 41 0.011088410 ubox
18 24 0.093171291 ubox
18 25 0.069395168 ubox
18 28 0.148209761 ubox
18 29 0.131037122 ubox
18 33 0.036890067 ubox
19 23 0.075796738 ubox
19 24 0.054793273 ubox
19 25 0.084195581 ubox
19 28 0.132727785 ubox
19 29 0.047075182 ubox
19 30 0.411776530 ubox
19 32 0.046993959 ubox
19 35 0.008075104 ubox
19 39 0.029470154 ubox
19 41 0.012556607 ubox
20 26 0.150809096 ubox
20 27 0.098871773 ubox
20 31 0.051495009 ubox
20 34 0.007909324 ubox
20 38 0.029109101 ubox
20 40 0.012509564 ubox
21 26 0.090859087 ubox
21 27 0.074626642 ubox
21 31 0.015250740 ubox
21 37 0.026122793 ubox
21 38 0.004800205 ubox
22 28 0.369193865 ubox
22 29 0.035634794 ubox
23 27 0.369599839 ubox
23 34 0.005481503 ubox
23 37 0.026875050 ubox
24 31 0.009536027 ubox
24 34 0.003782745 ubox
24 36 0.026881245 ubox
24 37 0.003954413 ubox
24 38 0.004333600 ubox
25 31 0.007558370 ubox
25 34 0.037347933 ubox
25 36 0.005069461 ubox
25 37 0.004037998 ubox
26 33 0.041561226 ubox
27 32 0.041679045 ubox
27 35 0.037219893 ubox
27 39 0.021372914 ubox
27 41 0.007098724 ubox
28 34 0.036977753 ubox
28 38 0.019502649 ubox
28 40 0.007058948 ubox
29 37 0.016890865 ubox
29 38 0.031646776 ubox
30 37 0.035543288 ubox
32 37 0.006271321 ubox
32 40 0.004739800 ubox
33 38 0.004889835 ubox
33 40 0.007388169 ubox
34 39 0.010283052 ubox
34 41 0.045780723 ubox
35 40 0.046321947 ubox
37 41 0.010987646 ubox
1 35 0.9500000 lbox
2 34 0.9500000 lbox
3 33 0.9500000 lbox
4 32 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
13 22 0.9500000 lbox
14 21 0.9500000 lbox
showpage
end
%%EOF
