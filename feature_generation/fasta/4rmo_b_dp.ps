%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:41 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (4rmo_b)
} def

/sequence { (\
AGUUUACCACUGACCGAUAUGUGGUAUAUAAAUGGUCGGGUUG\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 5 0.009601346 ubox
1 11 0.023236529 ubox
1 29 0.008424080 ubox
1 33 0.003353056 ubox
1 41 0.003885742 ubox
1 42 0.015409320 ubox
2 7 0.050665078 ubox
2 8 0.059337754 ubox
2 10 0.026111162 ubox
2 27 0.005802679 ubox
2 29 0.078047989 ubox
2 33 0.010767456 ubox
2 41 0.011230824 ubox
2 42 0.014871875 ubox
3 9 0.026608916 ubox
3 26 0.004326389 ubox
3 28 0.078462435 ubox
3 30 0.003631735 ubox
3 31 0.004785299 ubox
3 32 0.011373646 ubox
3 39 0.003903485 ubox
3 40 0.006099111 ubox
3 43 0.031205782 ubox
4 9 0.010766327 ubox
4 13 0.003348153 ubox
4 26 0.004078177 ubox
4 28 0.007021444 ubox
4 30 0.005452492 ubox
4 31 0.011508966 ubox
4 38 0.004082834 ubox
4 40 0.006671173 ubox
4 43 0.071038954 ubox
5 9 0.007733941 ubox
5 12 0.003636993 ubox
5 26 0.104805019 ubox
5 30 0.007718885 ubox
5 40 0.008780173 ubox
5 43 0.130601850 ubox
6 11 0.003287353 ubox
6 25 0.109581395 ubox
6 29 0.004558975 ubox
6 36 0.007557269 ubox
6 41 0.402155378 ubox
6 42 0.150526301 ubox
7 24 0.110025392 ubox
7 35 0.007952361 ubox
7 39 0.051041728 ubox
7 40 0.432708662 ubox
7 43 0.120649457 ubox
8 23 0.110027957 ubox
8 34 0.007954591 ubox
8 38 0.050736843 ubox
8 39 0.407070853 ubox
8 40 0.346829052 ubox
8 43 0.120346192 ubox
9 22 0.109995669 ubox
9 33 0.007660607 ubox
9 36 0.005447929 ubox
9 41 0.130022039 ubox
9 42 0.109652487 ubox
10 21 0.109967327 ubox
10 35 0.005540656 ubox
10 38 0.257020992 ubox
10 39 0.892840758 ubox
10 40 0.115689768 ubox
10 43 0.009808070 ubox
11 17 0.005961941 ubox
11 19 0.019346806 ubox
11 34 0.005376435 ubox
11 38 0.934198479 ubox
11 39 0.081306514 ubox
11 43 0.006768030 ubox
12 18 0.017837537 ubox
12 20 0.003500329 ubox
12 33 0.004320317 ubox
12 37 0.992786767 ubox
12 41 0.004092087 ubox
12 42 0.017736821 ubox
13 18 0.035520945 ubox
13 20 0.003404530 ubox
13 25 0.009076374 ubox
13 36 0.992905184 ubox
13 41 0.018334987 ubox
14 24 0.009260597 ubox
14 35 0.992988653 ubox
14 39 0.037482409 ubox
14 40 0.015195378 ubox
15 23 0.009277310 ubox
15 34 0.992555925 ubox
15 35 0.009425271 ubox
15 38 0.039037968 ubox
15 39 0.011039317 ubox
16 22 0.007838686 ubox
16 29 0.012484513 ubox
16 33 0.888898582 ubox
16 37 0.040411208 ubox
17 25 0.016855847 ubox
17 27 0.106842987 ubox
17 29 0.408842982 ubox
17 33 0.234312192 ubox
17 36 0.040288643 ubox
18 24 0.016769038 ubox
18 26 0.107777726 ubox
18 28 0.416775060 ubox
18 30 0.748516881 ubox
18 31 0.180619941 ubox
18 32 0.274103131 ubox
18 34 0.013212972 ubox
18 35 0.037348348 ubox
19 25 0.107231270 ubox
19 27 0.417426140 ubox
19 29 0.791204623 ubox
19 33 0.031358059 ubox
20 24 0.099315035 ubox
20 26 0.412822865 ubox
20 28 0.794680772 ubox
20 30 0.353158760 ubox
20 31 0.034448699 ubox
20 32 0.037703972 ubox
20 34 0.008555574 ubox
21 25 0.343826101 ubox
21 27 0.786061804 ubox
21 29 0.368103387 ubox
21 33 0.023703970 ubox
22 26 0.727801671 ubox
22 28 0.366501777 ubox
22 30 0.056316339 ubox
22 31 0.027636137 ubox
22 32 0.025749643 ubox
23 27 0.305259705 ubox
23 29 0.057248900 ubox
24 29 0.007863230 ubox
24 33 0.008998863 ubox
25 30 0.004626517 ubox
25 31 0.003390257 ubox
25 32 0.010558212 ubox
26 33 0.006070404 ubox
27 32 0.007215951 ubox
28 36 0.003509791 ubox
29 35 0.003674877 ubox
29 43 0.003542772 ubox
30 42 0.004549446 ubox
31 41 0.004066482 ubox
31 42 0.033330126 ubox
32 41 0.035293281 ubox
33 39 0.003789263 ubox
33 40 0.035205752 ubox
34 41 0.003199987 ubox
35 42 0.003719301 ubox
37 43 0.004739149 ubox
38 42 0.003164810 ubox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
12 37 0.9500000 lbox
13 36 0.9500000 lbox
14 35 0.9500000 lbox
15 34 0.9500000 lbox
16 33 0.9500000 lbox
18 30 0.9500000 lbox
19 29 0.9500000 lbox
20 28 0.9500000 lbox
21 27 0.9500000 lbox
22 26 0.9500000 lbox
showpage
end
%%EOF
