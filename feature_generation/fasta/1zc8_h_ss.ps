%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:04:26 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCUCUCUCCCUAGCCUCCGCUCUUAGGACGGGGAUCAAGAGAGGUCAAACCCAAAAGAG\
) def
/coor [
[155.81533813 166.42193604]
[145.20872498 155.81533813]
[134.60212708 145.20872498]
[123.99552917 134.60212708]
[113.38892365 123.99552917]
[102.78232574 113.38892365]
[91.12513733 103.94911957]
[78.54507446 95.77953339]
[65.96501923 87.60994720]
[53.38495636 79.44036102]
[40.80490112 71.27077484]
[25.53427696 74.34418488]
[12.89268684 65.87985229]
[10.05677128 51.30270767]
[-2.52328730 43.13312149]
[-15.10334587 34.96353912]
[-29.54097748 40.64987183]
[-44.55514526 36.73139954]
[-54.37259293 24.71485519]
[-55.21831131 9.22084427]
[-46.76710892 -3.79286981]
[-32.26863861 -9.32224846]
[-17.29786301 -5.24113274]
[-7.61134958 6.88120556]
[-6.93376017 22.38348007]
[5.64629841 30.55306435]
[18.22635651 38.72264862]
[32.69671249 35.38433075]
[45.57106018 43.49024200]
[48.97448349 58.69071960]
[61.55454254 66.86030579]
[74.13460541 75.02989197]
[86.71466064 83.19947815]
[99.29471588 91.36905670]
[102.76225281 90.74047089]
[106.55079651 91.58296204]
[110.02047729 94.02067566]
[112.49655914 97.89920044]
[113.38892365 102.78232574]
[123.99552917 113.38892365]
[134.60212708 123.99552917]
[145.20872498 134.60212708]
[155.81533813 145.20872498]
[166.42193604 155.81533813]
[180.14955139 149.38664246]
[195.24832153 148.04385376]
[209.89498901 151.94914246]
[222.32087708 160.63088989]
[231.02552795 173.04077148]
[234.95779419 187.68020630]
[233.64283752 202.78141785]
[227.23944092 216.52087402]
[216.52087402 227.23944092]
[202.78141785 233.64283752]
[187.68020630 234.95779419]
[173.04077148 231.02552795]
[160.63088989 222.32087708]
[151.94914246 209.89498901]
[148.04385376 195.24832153]
] def
/pairs [
[1 44]
[2 43]
[3 42]
[4 41]
[5 40]
[6 39]
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[14 27]
[15 26]
[16 25]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
