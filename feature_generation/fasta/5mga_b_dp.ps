%!PS-Adobe-3.0 EPSF-3.0
%%Title: RNA Dot Plot
%%Creator: ViennaRNA-2.4.1
%%CreationDate: Mon Sep  4 18:05:06 2017
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
%This file contains the square roots of the base pair probabilities in the form
% i  j  sqrt(p(i,j)) ubox

%%BeginProlog
/DPdict 100 dict def
DPdict begin
/logscale false def
/lpmin 1e-05 log def

/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def

/min { 2 copy gt { exch } if pop } bind def

/max { 2 copy lt { exch } if pop } bind def

/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def

/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def

/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def

/drawseq {
% print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def

/drawgrid{
  gsave
  0.5 dup translate  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  %% draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def

/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def

/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def

/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def

/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def

/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def

/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def

/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def

/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def

/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def

/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def

/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def

/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def

% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def

% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i

          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]

          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key

            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]

          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

end
%EndProlog

DPdict begin

/DPtitle {
  (5mga_b)
} def

/sequence { (\
AUUUCUACUGUUGUAGAUGAGAAGUCAUUUAAUAAGGCC\
) } def

/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 6 0.013079116 ubox
1 9 0.003714501 ubox
1 11 0.007998463 ubox
1 12 0.004073697 ubox
1 14 0.007089668 ubox
1 18 0.019202000 ubox
1 25 0.028067329 ubox
1 33 0.014489233 ubox
2 7 0.019627334 ubox
2 10 0.009343421 ubox
2 13 0.008891258 ubox
2 17 0.010254093 ubox
2 19 0.065422933 ubox
2 20 0.085997366 ubox
2 21 0.024122561 ubox
2 22 0.041560290 ubox
2 23 0.020948657 ubox
2 24 0.031100665 ubox
2 32 0.015231530 ubox
2 35 0.007444508 ubox
2 36 0.008705934 ubox
2 37 0.010237680 ubox
3 7 0.008061871 ubox
3 10 0.008402167 ubox
3 13 0.003168878 ubox
3 16 0.004613069 ubox
3 17 0.020723066 ubox
3 19 0.086561409 ubox
3 20 0.031389859 ubox
3 21 0.044521261 ubox
3 22 0.023643894 ubox
3 23 0.036540542 ubox
3 31 0.013685503 ubox
3 32 0.004834228 ubox
3 34 0.007646290 ubox
3 35 0.010730805 ubox
3 36 0.011966806 ubox
3 37 0.009863992 ubox
4 17 0.462563379 ubox
4 19 0.016684692 ubox
4 20 0.026618110 ubox
4 21 0.012587583 ubox
4 22 0.035116123 ubox
4 31 0.004029734 ubox
4 34 0.008735079 ubox
4 35 0.010850954 ubox
4 36 0.006780894 ubox
4 37 0.109604828 ubox
5 10 0.030753132 ubox
5 13 0.014582824 ubox
5 16 0.544327908 ubox
5 19 0.023336745 ubox
5 21 0.034702297 ubox
5 36 0.143488278 ubox
5 37 0.056045632 ubox
6 13 0.008024234 ubox
6 15 0.547636592 ubox
6 17 0.003836411 ubox
6 19 0.006370580 ubox
6 20 0.032839770 ubox
6 34 0.007342010 ubox
6 35 0.136359472 ubox
6 36 0.051119897 ubox
6 37 0.029267992 ubox
7 12 0.007770894 ubox
7 14 0.548720624 ubox
7 18 0.010436651 ubox
7 25 0.003194086 ubox
7 33 0.007715634 ubox
8 13 0.549164503 ubox
8 16 0.025674508 ubox
8 19 0.017441820 ubox
8 21 0.003248364 ubox
8 24 0.003425268 ubox
8 36 0.505700871 ubox
8 37 0.471728178 ubox
9 15 0.025561450 ubox
9 16 0.003354263 ubox
9 17 0.009437551 ubox
9 19 0.005408156 ubox
9 20 0.003229793 ubox
9 23 0.003319842 ubox
9 31 0.003754207 ubox
9 32 0.013270649 ubox
9 34 0.186235635 ubox
9 35 0.497354767 ubox
9 36 0.464678839 ubox
9 37 0.282064266 ubox
10 14 0.021305888 ubox
10 18 0.011025229 ubox
10 30 0.003277327 ubox
10 33 0.213727705 ubox
10 38 0.102356517 ubox
10 39 0.008382167 ubox
11 15 0.005606852 ubox
11 16 0.003963209 ubox
11 17 0.011416579 ubox
11 31 0.005058661 ubox
11 32 0.211726162 ubox
11 34 0.174684718 ubox
11 35 0.366556681 ubox
11 36 0.022719991 ubox
11 37 0.099324563 ubox
12 16 0.010310854 ubox
12 17 0.003599161 ubox
12 31 0.168398595 ubox
12 32 0.187850307 ubox
12 34 0.403393275 ubox
12 35 0.025233140 ubox
12 36 0.067379951 ubox
12 37 0.003988068 ubox
13 28 0.004791992 ubox
13 30 0.131764279 ubox
13 33 0.407437149 ubox
13 38 0.010598832 ubox
14 27 0.005269456 ubox
14 31 0.744551618 ubox
14 32 0.291550382 ubox
14 34 0.018602064 ubox
14 35 0.004506027 ubox
14 37 0.009283327 ubox
15 28 0.013247647 ubox
15 29 0.020237395 ubox
15 30 0.814912954 ubox
15 33 0.017780462 ubox
16 26 0.023754626 ubox
16 28 0.015150397 ubox
16 29 0.833525091 ubox
16 30 0.020404311 ubox
17 25 0.024507057 ubox
17 28 0.866595676 ubox
17 29 0.018653073 ubox
17 30 0.006727843 ubox
17 33 0.010852959 ubox
18 22 0.003992190 ubox
18 23 0.017262439 ubox
18 24 0.024744254 ubox
18 27 0.900905702 ubox
18 31 0.045020705 ubox
18 32 0.012675963 ubox
18 34 0.015808507 ubox
18 35 0.005195015 ubox
19 26 0.911748255 ubox
19 28 0.005401243 ubox
19 29 0.014361366 ubox
19 30 0.049068795 ubox
19 33 0.016933986 ubox
19 38 0.005514505 ubox
19 39 0.007926545 ubox
20 25 0.888146314 ubox
20 28 0.015518605 ubox
20 29 0.049046844 ubox
20 30 0.023515485 ubox
20 33 0.007602621 ubox
21 25 0.006735317 ubox
21 26 0.029593684 ubox
21 28 0.034573798 ubox
21 29 0.025667913 ubox
21 30 0.063339114 ubox
21 38 0.007006217 ubox
21 39 0.017378129 ubox
22 28 0.024709703 ubox
22 29 0.065268239 ubox
22 30 0.016890820 ubox
23 28 0.062778972 ubox
23 29 0.017185076 ubox
23 30 0.015799326 ubox
23 33 0.005241782 ubox
24 28 0.011935688 ubox
24 29 0.015768580 ubox
24 30 0.007750923 ubox
24 33 0.016894946 ubox
24 38 0.319719557 ubox
24 39 0.010323911 ubox
25 32 0.016749196 ubox
25 34 0.004449033 ubox
25 37 0.320096816 ubox
26 36 0.318886724 ubox
26 37 0.015622576 ubox
27 33 0.023156843 ubox
28 32 0.022997901 ubox
28 34 0.103665441 ubox
28 35 0.165649290 ubox
28 36 0.016159792 ubox
28 37 0.018613471 ubox
29 34 0.160584575 ubox
29 35 0.028481706 ubox
29 36 0.026482524 ubox
29 37 0.012069937 ubox
30 34 0.026391535 ubox
30 35 0.027493731 ubox
30 36 0.014797975 ubox
30 37 0.010421507 ubox
33 37 0.004384989 ubox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
14 31 0.9500000 lbox
15 30 0.9500000 lbox
16 29 0.9500000 lbox
17 28 0.9500000 lbox
18 27 0.9500000 lbox
19 26 0.9500000 lbox
20 25 0.9500000 lbox
showpage
end
%%EOF
